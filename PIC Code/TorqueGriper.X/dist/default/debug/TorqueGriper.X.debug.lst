

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jul 21 16:28:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F13K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     _TMR3	set	4018
    20  0000                     _ANSELHbits	set	3967
    21  0000                     _BAUDCON	set	4024
    22  0000                     _CCP1CONbits	set	4029
    23  0000                     _CCPR1L	set	4030
    24  0000                     _INTCONbits	set	4082
    25  0000                     _LATBbits	set	3978
    26  0000                     _LATCbits	set	3979
    27  0000                     _PIR2bits	set	4001
    28  0000                     _PORTCbits	set	3970
    29  0000                     _PR2	set	4043
    30  0000                     _PSTRCON	set	4025
    31  0000                     _PSTRCONbits	set	4025
    32  0000                     _RCREG	set	4014
    33  0000                     _RCSTA	set	4011
    34  0000                     _RCSTAbits	set	4011
    35  0000                     _SPBRG	set	4015
    36  0000                     _SPBRGH	set	4016
    37  0000                     _T2CONbits	set	4042
    38  0000                     _T3CONbits	set	4017
    39  0000                     _TMR0H	set	4055
    40  0000                     _TMR0L	set	4054
    41  0000                     _TRISBbits	set	3987
    42  0000                     _TRISCbits	set	3988
    43  0000                     _TXREG	set	4013
    44  0000                     _TXSTA	set	4012
    45  0000                     _TXSTAbits	set	4012
    46  0000                     _RCIF	set	31989
    47                           
    48 ;;
    49 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    50 ;;
    51 ;; *************** function _main *****************
    52 ;; Defined at:
    53 ;;		line 48 in file "main.c"
    54 ;; Parameters:    Size  Location     Type
    55 ;;		None
    56 ;; Auto vars:     Size  Location     Type
    57 ;;  data           17   30[COMRAM] struct receiveBuffer
    58 ;;  i               2   28[COMRAM] int 
    59 ;; Return value:  Size  Location     Type
    60 ;;                  2   22[None  ] int 
    61 ;; Registers used:
    62 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
    63 ;; Tracked objects:
    64 ;;		On entry : 0/0
    65 ;;		On exit  : 0/0
    66 ;;		Unchanged: 0/0
    67 ;; Data sizes:     COMRAM   BANK0
    68 ;;      Params:         0       0
    69 ;;      Locals:        19       0
    70 ;;      Temps:          1       0
    71 ;;      Totals:        20       0
    72 ;;Total ram usage:       20 bytes
    73 ;; Hardware stack levels required when called:    4
    74 ;; This function calls:
    75 ;;		_pmwSingleModeSetUp
    76 ;;		_receiveData
    77 ;;		_selectOutput
    78 ;;		_serialSetUp
    79 ;;		_setPulseWidth
    80 ;; This function is called by:
    81 ;;		Startup code after reset
    82 ;; This function uses a non-reentrant model
    83 ;;
    84                           
    85                           	psect	text0
    86  0001FE                     __ptext0:
    87                           	opt stack 0
    88  0001FE                     _main:
    89                           	opt stack 27
    90                           
    91                           ;main.c: 49: _delay((unsigned long)((1)*(20000000/4000.0)));
    92                           
    93                           ;incstack = 0
    94  0001FE  0E07               	movlw	7
    95  000200  6E1C               	movwf	??_main& (0+255),c
    96  000202  0E7D               	movlw	125
    97  000204                     u667:
    98  000204  2EE8               	decfsz	wreg,f,c
    99  000206  D7FE               	goto	u667
   100  000208  2E1C               	decfsz	??_main& (0+255),f,c
   101  00020A  D7FC               	goto	u667
   102  00020C  F000               	nop	
   103                           
   104                           ;main.c: 50: serialSetUp(1, 1, 0x81);
   105  00020E  0E01               	movlw	1
   106  000210  6E14               	movwf	serialSetUp@brgh_bit,c
   107  000212  0E00               	movlw	0
   108  000214  6E16               	movwf	serialSetUp@spbrg16+1,c
   109  000216  0E81               	movlw	129
   110  000218  6E15               	movwf	serialSetUp@spbrg16,c
   111  00021A  0E01               	movlw	1
   112  00021C  EC9B  F001         	call	_serialSetUp
   113                           
   114                           ;main.c: 52: pmwSingleModeSetUp(PACH_PBDH, 254, TMRP_1, 0x04 | 0x02);
   115  000220  0EFE               	movlw	254
   116  000222  6E10               	movwf	pmwSingleModeSetUp@valuePR2,c
   117  000224  0E00               	movlw	0
   118  000226  6E11               	movwf	pmwSingleModeSetUp@scaler,c
   119  000228  0E06               	movlw	6
   120  00022A  6E12               	movwf	pmwSingleModeSetUp@outputs,c
   121  00022C  0E00               	movlw	0
   122  00022E  EC4E  F001         	call	_pmwSingleModeSetUp
   123                           
   124                           ;main.c: 53: setPulseWidth(0);
   125  000232  0E00               	movlw	0
   126  000234  6E11               	movwf	setPulseWidth@width+1,c
   127  000236  0E00               	movlw	0
   128  000238  6E10               	movwf	setPulseWidth@width,c
   129  00023A  ECE3  F001         	call	_setPulseWidth	;wreg free
   130                           
   131                           ;main.c: 68: struct receiveBuffer data;
   132                           ;main.c: 69: int i = 0;
   133  00023E  0E00               	movlw	0
   134  000240  6E1E               	movwf	main@i+1,c
   135  000242  0E00               	movlw	0
   136  000244  6E1D               	movwf	main@i,c
   137  000246  D000               	goto	l1059
   138  000248                     l1059:
   139                           
   140                           ;main.c: 73: i = receiveData(&data);
   141  000248  0E1F               	movlw	low main@data
   142  00024A  6E10               	movwf	receiveData@buffer,c
   143  00024C  0E00               	movlw	high main@data
   144  00024E  6E11               	movwf	receiveData@buffer+1,c
   145  000250  EC50  F000         	call	_receiveData	;wreg free
   146  000254  C010  F01D         	movff	?_receiveData,main@i
   147  000258  C011  F01E         	movff	?_receiveData+1,main@i+1
   148                           
   149                           ;main.c: 76: if (i) {
   150  00025C  501D               	movf	main@i,w,c
   151  00025E  101E               	iorwf	main@i+1,w,c
   152  000260  B4D8               	btfsc	status,2,c
   153  000262  D7F2               	goto	l1059
   154                           
   155                           ;main.c: 77: if (data.buffer[0] == 0xAA) {
   156  000264  0EAA               	movlw	170
   157  000266  181F               	xorwf	main@data,w,c
   158  000268  A4D8               	btfss	status,2,c
   159  00026A  D00C               	goto	l1067
   160                           
   161                           ;main.c: 78: selectOutput(data.buffer[1], 1);
   162  00026C  0E01               	movlw	1
   163  00026E  6E10               	movwf	selectOutput@toggle,c
   164  000270  5020               	movf	main@data+1,w,c
   165  000272  ECAE  F000         	call	_selectOutput
   166                           
   167                           ;main.c: 79: setPulseWidth(520);
   168  000276  0E02               	movlw	2
   169  000278  6E11               	movwf	setPulseWidth@width+1,c
   170  00027A  0E08               	movlw	8
   171  00027C  6E10               	movwf	setPulseWidth@width,c
   172  00027E  ECE3  F001         	call	_setPulseWidth	;wreg free
   173                           
   174                           ;main.c: 80: } else if (data.buffer[0] == 0xAB) {
   175  000282  D7E2               	goto	l1059
   176  000284                     l1067:
   177  000284  0EAB               	movlw	171
   178  000286  181F               	xorwf	main@data,w,c
   179  000288  A4D8               	btfss	status,2,c
   180  00028A  D7DE               	goto	l1059
   181                           
   182                           ;main.c: 81: selectOutput(data.buffer[1], 0);
   183  00028C  0E00               	movlw	0
   184  00028E  6E10               	movwf	selectOutput@toggle,c
   185  000290  5020               	movf	main@data+1,w,c
   186  000292  ECAE  F000         	call	_selectOutput
   187  000296  D7D8               	goto	l1059
   188                           
   189                           ;main.c: 82: }
   190                           ;main.c: 83: }
   191                           ;main.c: 84: }
   192                           ;main.c: 85: return (0);
   193                           ;	Return value of _main is never used
   194  000298  EF4E  F000         	goto	start
   195  00029C                     __end_of_main:
   196                           	opt stack 0
   197                           wreg	equ	0xFE8
   198                           status	equ	0xFD8
   199                           
   200                           	psect	cinit
   201  0003F0                     __pcinit:
   202                           	opt stack 0
   203  0003F0                     start_initialization:
   204                           	opt stack 0
   205  0003F0                     __initialization:
   206                           	opt stack 0
   207                           
   208                           ; Clear objects allocated to COMRAM (2 bytes)
   209  0003F0  6A31               	clrf	(__pbssCOMRAM+1)& (0+255),c
   210  0003F2  6A30               	clrf	__pbssCOMRAM& (0+255),c
   211  0003F4                     end_of_initialization:
   212                           	opt stack 0
   213  0003F4                     __end_of__initialization:
   214                           	opt stack 0
   215  0003F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   216  0003F6  6EF8               	movwf	tblptru,c
   217  0003F8  0100               	movlb	0
   218  0003FA  EFFF  F000         	goto	_main	;jump to C main() function
   219                           tblptru	equ	0xFF8
   220                           wreg	equ	0xFE8
   221                           status	equ	0xFD8
   222                           
   223                           	psect	bssCOMRAM
   224  000030                     __pbssCOMRAM:
   225                           	opt stack 0
   226  000030                     _timer3Time:
   227                           	opt stack 0
   228  000030                     	ds	2
   229                           tblptru	equ	0xFF8
   230                           wreg	equ	0xFE8
   231                           status	equ	0xFD8
   232                           
   233                           	psect	cstackCOMRAM
   234  000001                     __pcstackCOMRAM:
   235                           	opt stack 0
   236  000001                     sendChar@character:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x0
   240  000001                     	ds	1
   241  000002                     ??_com_link:
   242                           
   243                           ; 0 bytes @ 0x1
   244  000002                     	ds	14
   245  000010                     ?_receiveData:
   246                           	opt stack 0
   247  000010                     pmwSingleModeSetUp@valuePR2:
   248                           	opt stack 0
   249  000010                     selectOutput@toggle:
   250                           	opt stack 0
   251  000010                     setTimer3@TMR3Pair:
   252                           	opt stack 0
   253  000010                     receiveData@buffer:
   254                           	opt stack 0
   255  000010                     setPulseWidth@width:
   256                           	opt stack 0
   257                           
   258                           ; 2 bytes @ 0xF
   259  000010                     	ds	1
   260  000011                     ??_selectOutput:
   261  000011                     pmwSingleModeSetUp@scaler:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x10
   265  000011                     	ds	1
   266  000012                     ??_setPulseWidth:
   267  000012                     ??_receiveData:
   268  000012                     ??_setTimer3:
   269  000012                     pmwSingleModeSetUp@outputs:
   270                           	opt stack 0
   271  000012                     selectOutput@outputs:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0x11
   275  000012                     	ds	1
   276  000013                     setTimer3@turnOn:
   277                           	opt stack 0
   278  000013                     receiveData@character:
   279                           	opt stack 0
   280  000013                     pmwSingleModeSetUp@polarity:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0x12
   284  000013                     	ds	1
   285  000014                     serialSetUp@brgh_bit:
   286                           	opt stack 0
   287  000014                     receiveData@size:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x13
   291  000014                     	ds	1
   292  000015                     serialSetUp@spbrg16:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x14
   296  000015                     	ds	1
   297  000016                     receiveData@i:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x15
   301  000016                     	ds	1
   302  000017                     serialSetUp@brg16_bit:
   303                           	opt stack 0
   304                           
   305                           ; 1 bytes @ 0x16
   306  000017                     	ds	1
   307  000018                     _serialSetUp$708:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x17
   311  000018                     	ds	2
   312  00001A                     _serialSetUp$709:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x19
   316  00001A                     	ds	2
   317  00001C                     ??_main:
   318                           
   319                           ; 0 bytes @ 0x1B
   320  00001C                     	ds	1
   321  00001D                     main@i:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x1C
   325  00001D                     	ds	2
   326  00001F                     main@data:
   327                           	opt stack 0
   328                           
   329                           ; 17 bytes @ 0x1E
   330  00001F                     	ds	17
   331                           tblptru	equ	0xFF8
   332                           wreg	equ	0xFE8
   333                           status	equ	0xFD8
   334                           
   335 ;; *************** function _setPulseWidth *****************
   336 ;; Defined at:
   337 ;;		line 57 in file "pwm.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;  width           2   15[COMRAM] unsigned int 
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;		None               void
   344 ;; Registers used:
   345 ;;		wreg, status,2, status,0
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0
   351 ;;      Params:         2       0
   352 ;;      Locals:         0       0
   353 ;;      Temps:          2       0
   354 ;;      Totals:         4       0
   355 ;;Total ram usage:        4 bytes
   356 ;; Hardware stack levels used:    1
   357 ;; Hardware stack levels required when called:    2
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text1
   366  0003C6                     __ptext1:
   367                           	opt stack 0
   368  0003C6                     _setPulseWidth:
   369                           	opt stack 28
   370                           
   371                           ;pwm.c: 59: CCP1CONbits.DC1B = width;
   372                           
   373                           ;incstack = 0
   374  0003C6  C010  F012         	movff	setPulseWidth@width,??_setPulseWidth
   375  0003CA  3A12               	swapf	??_setPulseWidth,f,c
   376  0003CC  50BD               	movf	4029,w,c	;volatile
   377  0003CE  1812               	xorwf	??_setPulseWidth,w,c
   378  0003D0  0BCF               	andlw	-49
   379  0003D2  1812               	xorwf	??_setPulseWidth,w,c
   380  0003D4  6EBD               	movwf	4029,c	;volatile
   381                           
   382                           ;pwm.c: 60: CCPR1L = width >> 2;
   383  0003D6  C010  F012         	movff	setPulseWidth@width,??_setPulseWidth
   384  0003DA  C011  F013         	movff	setPulseWidth@width+1,??_setPulseWidth+1
   385  0003DE  90D8               	bcf	status,0,c
   386  0003E0  3213               	rrcf	??_setPulseWidth+1,f,c
   387  0003E2  3212               	rrcf	??_setPulseWidth,f,c
   388  0003E4  90D8               	bcf	status,0,c
   389  0003E6  3213               	rrcf	??_setPulseWidth+1,f,c
   390  0003E8  3212               	rrcf	??_setPulseWidth,f,c
   391  0003EA  5012               	movf	??_setPulseWidth,w,c
   392  0003EC  6EBE               	movwf	4030,c	;volatile
   393  0003EE  0012               	return		;funcret
   394  0003F0                     __end_of_setPulseWidth:
   395                           	opt stack 0
   396                           tblptru	equ	0xFF8
   397                           wreg	equ	0xFE8
   398                           status	equ	0xFD8
   399                           
   400 ;; *************** function _serialSetUp *****************
   401 ;; Defined at:
   402 ;;		line 23 in file "serialprotocol.c"
   403 ;; Parameters:    Size  Location     Type
   404 ;;  brg16_bit       1    wreg     unsigned char 
   405 ;;  brgh_bit        1   19[COMRAM] unsigned char 
   406 ;;  spbrg16         2   20[COMRAM] unsigned int 
   407 ;; Auto vars:     Size  Location     Type
   408 ;;  brg16_bit       1   22[COMRAM] unsigned char 
   409 ;; Return value:  Size  Location     Type
   410 ;;		None               void
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0
   418 ;;      Params:         3       0
   419 ;;      Locals:         5       0
   420 ;;      Temps:          0       0
   421 ;;      Totals:         8       0
   422 ;;Total ram usage:        8 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    3
   425 ;; This function calls:
   426 ;;		_setTimer3
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text2
   433  000336                     __ptext2:
   434                           	opt stack 0
   435  000336                     _serialSetUp:
   436                           	opt stack 27
   437                           
   438                           ;incstack = 0
   439                           ;serialSetUp@brg16_bit stored from wreg
   440  000336  6E17               	movwf	serialSetUp@brg16_bit,c
   441                           
   442                           ;serialprotocol.c: 26: ANSELHbits.ANS9 = 0;
   443  000338  927F               	bcf	3967,1,c	;volatile
   444                           
   445                           ;serialprotocol.c: 27: ANSELHbits.ANS11 = 0;
   446  00033A  967F               	bcf	3967,3,c	;volatile
   447                           
   448                           ;serialprotocol.c: 29: TRISBbits.RB5 = 1;
   449  00033C  8A93               	bsf	3987,5,c	;volatile
   450                           
   451                           ;serialprotocol.c: 30: TRISBbits.RB7 = 0;
   452  00033E  9E93               	bcf	3987,7,c	;volatile
   453                           
   454                           ;serialprotocol.c: 31: TRISBbits.RB6 = 0;
   455  000340  9C93               	bcf	3987,6,c	;volatile
   456                           
   457                           ;serialprotocol.c: 32: TRISCbits.RC7 = 1;
   458  000342  8E94               	bsf	3988,7,c	;volatile
   459                           
   460                           ;serialprotocol.c: 34: BAUDCON = (brg16_bit) ? 0x08 : 0x00;
   461  000344  5017               	movf	serialSetUp@brg16_bit,w,c
   462  000346  A4D8               	btfss	status,2,c
   463  000348  D004               	goto	l959
   464  00034A  0E00               	movlw	0
   465  00034C  6E19               	movwf	_serialSetUp$708+1,c
   466  00034E  0E00               	movlw	0
   467  000350  D003               	goto	L1
   468  000352                     l959:
   469  000352  0E00               	movlw	0
   470  000354  6E19               	movwf	_serialSetUp$708+1,c
   471  000356  0E08               	movlw	8
   472  000358                     L1:
   473  000358  6E18               	movwf	_serialSetUp$708,c
   474  00035A  D000               	goto	l961
   475  00035C                     l961:
   476  00035C  C018  FFB8         	movff	_serialSetUp$708,4024	;volatile
   477                           
   478                           ;serialprotocol.c: 35: TXSTA = (brgh_bit) ? 0x24: 0x20;
   479  000360  5014               	movf	serialSetUp@brgh_bit,w,c
   480  000362  A4D8               	btfss	status,2,c
   481  000364  D004               	goto	l967
   482  000366  0E00               	movlw	0
   483  000368  6E1B               	movwf	_serialSetUp$709+1,c
   484  00036A  0E20               	movlw	32
   485  00036C  D003               	goto	L2
   486  00036E                     l967:
   487  00036E  0E00               	movlw	0
   488  000370  6E1B               	movwf	_serialSetUp$709+1,c
   489  000372  0E24               	movlw	36
   490  000374                     L2:
   491  000374  6E1A               	movwf	_serialSetUp$709,c
   492  000376  D000               	goto	l969
   493  000378                     l969:
   494  000378  C01A  FFAC         	movff	_serialSetUp$709,4012	;volatile
   495                           
   496                           ;serialprotocol.c: 36: SPBRGH = spbrg16 >> 8;
   497  00037C  5016               	movf	serialSetUp@spbrg16+1,w,c
   498  00037E  6EB0               	movwf	4016,c	;volatile
   499                           
   500                           ;serialprotocol.c: 37: SPBRG = spbrg16;
   501  000380  C015  FFAF         	movff	serialSetUp@spbrg16,4015	;volatile
   502                           
   503                           ;serialprotocol.c: 38: RCSTA = 0x90;
   504  000384  0E90               	movlw	144
   505  000386  6EAB               	movwf	4011,c	;volatile
   506                           
   507                           ;serialprotocol.c: 40: setTimer3(0x00, 65360);
   508  000388  0EFF               	movlw	255
   509  00038A  6E11               	movwf	setTimer3@TMR3Pair+1,c
   510  00038C  0E50               	movlw	80
   511  00038E  6E10               	movwf	setTimer3@TMR3Pair,c
   512  000390  0E00               	movlw	0
   513  000392  ECCD  F001         	call	_setTimer3
   514                           
   515                           ;serialprotocol.c: 42: LATBbits.LATB6 = 1;
   516  000396  8C8A               	bsf	3978,6,c	;volatile
   517  000398  0012               	return		;funcret
   518  00039A                     __end_of_serialSetUp:
   519                           	opt stack 0
   520                           tblptru	equ	0xFF8
   521                           wreg	equ	0xFE8
   522                           status	equ	0xFD8
   523                           
   524 ;; *************** function _setTimer3 *****************
   525 ;; Defined at:
   526 ;;		line 5 in file "serialprotocol.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  turnOn          1    wreg     unsigned char 
   529 ;;  TMR3Pair        2   15[COMRAM] unsigned int 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  turnOn          1   18[COMRAM] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;		None               void
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0
   541 ;;      Params:         2       0
   542 ;;      Locals:         1       0
   543 ;;      Temps:          1       0
   544 ;;      Totals:         4       0
   545 ;;Total ram usage:        4 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		Nothing
   550 ;; This function is called by:
   551 ;;		_serialSetUp
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text3
   556  00039A                     __ptext3:
   557                           	opt stack 0
   558  00039A                     _setTimer3:
   559                           	opt stack 27
   560                           
   561                           ;incstack = 0
   562                           ;setTimer3@turnOn stored from wreg
   563  00039A  6E13               	movwf	setTimer3@turnOn,c
   564                           
   565                           ;serialprotocol.c: 6: T3CONbits.RD16 = 0x01;
   566  00039C  8EB1               	bsf	4017,7,c	;volatile
   567                           
   568                           ;serialprotocol.c: 7: T3CONbits.T3CKPS = 0x00;
   569  00039E  0ECF               	movlw	-49
   570  0003A0  16B1               	andwf	4017,f,c	;volatile
   571                           
   572                           ;serialprotocol.c: 8: T3CONbits.TMR3CS = 0x00;
   573  0003A2  92B1               	bcf	4017,1,c	;volatile
   574                           
   575                           ;serialprotocol.c: 9: T3CONbits.TMR3ON = (turnOn) ? 1 : 0;
   576  0003A4  5013               	movf	setTimer3@turnOn,w,c
   577  0003A6  B4D8               	btfsc	status,2,c
   578  0003A8  D003               	goto	u390
   579  0003AA  6A12               	clrf	??_setTimer3& (0+255),c
   580  0003AC  2A12               	incf	??_setTimer3& (0+255),f,c
   581  0003AE  D001               	goto	u408
   582  0003B0                     u390:
   583  0003B0  6A12               	clrf	??_setTimer3& (0+255),c
   584  0003B2                     u408:
   585  0003B2  50B1               	movf	4017,w,c	;volatile
   586  0003B4  1812               	xorwf	??_setTimer3,w,c
   587  0003B6  0BFE               	andlw	-2
   588  0003B8  1812               	xorwf	??_setTimer3,w,c
   589  0003BA  6EB1               	movwf	4017,c	;volatile
   590                           
   591                           ;serialprotocol.c: 10: timer3Time = TMR3Pair;
   592  0003BC  C010  F030         	movff	setTimer3@TMR3Pair,_timer3Time
   593  0003C0  C011  F031         	movff	setTimer3@TMR3Pair+1,_timer3Time+1
   594  0003C4  0012               	return		;funcret
   595  0003C6                     __end_of_setTimer3:
   596                           	opt stack 0
   597                           tblptru	equ	0xFF8
   598                           wreg	equ	0xFE8
   599                           status	equ	0xFD8
   600                           
   601 ;; *************** function _selectOutput *****************
   602 ;; Defined at:
   603 ;;		line 63 in file "pwm.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  outputs         1    wreg     unsigned char 
   606 ;;  toggle          1   15[COMRAM] unsigned char 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;  outputs         1   17[COMRAM] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;		None               void
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0
   618 ;;      Params:         1       0
   619 ;;      Locals:         1       0
   620 ;;      Temps:          1       0
   621 ;;      Totals:         3       0
   622 ;;Total ram usage:        3 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    2
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text4
   633  00015C                     __ptext4:
   634                           	opt stack 0
   635  00015C                     _selectOutput:
   636                           	opt stack 28
   637                           
   638                           ;incstack = 0
   639                           ;selectOutput@outputs stored from wreg
   640  00015C  6E12               	movwf	selectOutput@outputs,c
   641                           
   642                           ;pwm.c: 65: switch (outputs){
   643  00015E  D03D               	goto	l1047
   644  000160                     l1035:
   645                           
   646                           ;pwm.c: 67: PSTRCON = 0xF0;
   647  000160  0EF0               	movlw	240
   648  000162  6EB9               	movwf	4025,c	;volatile
   649                           
   650                           ;pwm.c: 68: break;
   651  000164  0012               	return	
   652  000166                     l1037:
   653                           
   654                           ;pwm.c: 70: PSTRCONbits.STRA = (toggle) ? 1 : 0;
   655  000166  5010               	movf	selectOutput@toggle,w,c
   656  000168  B4D8               	btfsc	status,2,c
   657  00016A  D003               	goto	u550
   658  00016C  6A11               	clrf	??_selectOutput& (0+255),c
   659  00016E  2A11               	incf	??_selectOutput& (0+255),f,c
   660  000170  D001               	goto	u568
   661  000172                     u550:
   662  000172  6A11               	clrf	??_selectOutput& (0+255),c
   663  000174                     u568:
   664  000174  50B9               	movf	4025,w,c	;volatile
   665  000176  1811               	xorwf	??_selectOutput,w,c
   666  000178  0BFE               	andlw	-2
   667  00017A  1811               	xorwf	??_selectOutput,w,c
   668  00017C  6EB9               	movwf	4025,c	;volatile
   669                           
   670                           ;pwm.c: 71: break;
   671  00017E  0012               	return	
   672  000180                     l1039:
   673                           
   674                           ;pwm.c: 73: PSTRCONbits.STRB = (toggle) ? 1 : 0;
   675  000180  5010               	movf	selectOutput@toggle,w,c
   676  000182  B4D8               	btfsc	status,2,c
   677  000184  D003               	goto	u570
   678  000186  6A11               	clrf	??_selectOutput& (0+255),c
   679  000188  2A11               	incf	??_selectOutput& (0+255),f,c
   680  00018A  D001               	goto	u588
   681  00018C                     u570:
   682  00018C  6A11               	clrf	??_selectOutput& (0+255),c
   683  00018E                     u588:
   684  00018E  4611               	rlncf	??_selectOutput,f,c
   685  000190  50B9               	movf	4025,w,c	;volatile
   686  000192  1811               	xorwf	??_selectOutput,w,c
   687  000194  0BFD               	andlw	-3
   688  000196  1811               	xorwf	??_selectOutput,w,c
   689  000198  6EB9               	movwf	4025,c	;volatile
   690                           
   691                           ;pwm.c: 74: break;
   692  00019A  0012               	return	
   693  00019C                     l1041:
   694                           
   695                           ;pwm.c: 76: PSTRCONbits.STRC = (toggle) ? 1 : 0;
   696  00019C  5010               	movf	selectOutput@toggle,w,c
   697  00019E  B4D8               	btfsc	status,2,c
   698  0001A0  D003               	goto	u590
   699  0001A2  6A11               	clrf	??_selectOutput& (0+255),c
   700  0001A4  2A11               	incf	??_selectOutput& (0+255),f,c
   701  0001A6  D001               	goto	u608
   702  0001A8                     u590:
   703  0001A8  6A11               	clrf	??_selectOutput& (0+255),c
   704  0001AA                     u608:
   705  0001AA  4611               	rlncf	??_selectOutput,f,c
   706  0001AC  4611               	rlncf	??_selectOutput,f,c
   707  0001AE  50B9               	movf	4025,w,c	;volatile
   708  0001B0  1811               	xorwf	??_selectOutput,w,c
   709  0001B2  0BFB               	andlw	-5
   710  0001B4  1811               	xorwf	??_selectOutput,w,c
   711  0001B6  6EB9               	movwf	4025,c	;volatile
   712                           
   713                           ;pwm.c: 77: break;
   714  0001B8  0012               	return	
   715  0001BA                     l1043:
   716                           
   717                           ;pwm.c: 79: PSTRCONbits.STRD = (toggle) ? 1 : 0;
   718  0001BA  5010               	movf	selectOutput@toggle,w,c
   719  0001BC  B4D8               	btfsc	status,2,c
   720  0001BE  D003               	goto	u610
   721  0001C0  6A11               	clrf	??_selectOutput& (0+255),c
   722  0001C2  2A11               	incf	??_selectOutput& (0+255),f,c
   723  0001C4  D001               	goto	u628
   724  0001C6                     u610:
   725  0001C6  6A11               	clrf	??_selectOutput& (0+255),c
   726  0001C8                     u628:
   727  0001C8  4611               	rlncf	??_selectOutput,f,c
   728  0001CA  4611               	rlncf	??_selectOutput,f,c
   729  0001CC  4611               	rlncf	??_selectOutput,f,c
   730  0001CE  50B9               	movf	4025,w,c	;volatile
   731  0001D0  1811               	xorwf	??_selectOutput,w,c
   732  0001D2  0BF7               	andlw	-9
   733  0001D4  1811               	xorwf	??_selectOutput,w,c
   734  0001D6  6EB9               	movwf	4025,c	;volatile
   735                           
   736                           ;pwm.c: 81: }
   737                           
   738                           ;pwm.c: 80: break;
   739  0001D8  0012               	return	
   740  0001DA                     l1047:
   741  0001DA  5012               	movf	selectOutput@outputs,w,c
   742                           
   743                           ; Switch size 1, requested type "space"
   744                           ; Number of cases is 5, Range of values is 0 to 8
   745                           ; switch strategies available:
   746                           ; Name         Instructions Cycles
   747                           ; simple_byte           16     9 (average)
   748                           ;	Chosen strategy is simple_byte
   749  0001DC  0A00               	xorlw	0	; case 0
   750  0001DE  B4D8               	btfsc	status,2,c
   751  0001E0  D7BF               	goto	l1035
   752  0001E2  0A01               	xorlw	1	; case 1
   753  0001E4  B4D8               	btfsc	status,2,c
   754  0001E6  D7BF               	goto	l1037
   755  0001E8  0A03               	xorlw	3	; case 2
   756  0001EA  B4D8               	btfsc	status,2,c
   757  0001EC  D7C9               	goto	l1039
   758  0001EE  0A06               	xorlw	6	; case 4
   759  0001F0  B4D8               	btfsc	status,2,c
   760  0001F2  D7D4               	goto	l1041
   761  0001F4  0A0C               	xorlw	12	; case 8
   762  0001F6  A4D8               	btfss	status,2,c
   763  0001F8  0012               	return	
   764  0001FA  D7DF               	goto	l1043
   765  0001FC  0012               	return		;funcret
   766  0001FE                     __end_of_selectOutput:
   767                           	opt stack 0
   768                           tblptru	equ	0xFF8
   769                           wreg	equ	0xFE8
   770                           status	equ	0xFD8
   771                           
   772 ;; *************** function _receiveData *****************
   773 ;; Defined at:
   774 ;;		line 74 in file "serialprotocol.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  buffer          2   15[COMRAM] PTR struct receiveBuffer
   777 ;;		 -> main@data(17), 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  i               2   21[COMRAM] int 
   780 ;;  size            2   19[COMRAM] int 
   781 ;;  character       1   18[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  2   15[COMRAM] int 
   784 ;; Registers used:
   785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0
   791 ;;      Params:         2       0
   792 ;;      Locals:         5       0
   793 ;;      Temps:          1       0
   794 ;;      Totals:         8       0
   795 ;;Total ram usage:        8 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    2
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text5
   806  0000A0                     __ptext5:
   807                           	opt stack 0
   808  0000A0                     _receiveData:
   809                           	opt stack 28
   810                           
   811                           ;serialprotocol.c: 77: int8_t character;
   812                           ;serialprotocol.c: 78: int i = 0;
   813                           
   814                           ;incstack = 0
   815  0000A0  0E00               	movlw	0
   816  0000A2  6E17               	movwf	receiveData@i+1,c
   817  0000A4  0E00               	movlw	0
   818  0000A6  6E16               	movwf	receiveData@i,c
   819                           
   820                           ;serialprotocol.c: 79: int size = 0;
   821  0000A8  0E00               	movlw	0
   822  0000AA  6E15               	movwf	receiveData@size+1,c
   823  0000AC  0E00               	movlw	0
   824  0000AE  6E14               	movwf	receiveData@size,c
   825                           
   826                           ;serialprotocol.c: 81: if (RCSTAbits.OERR) {
   827  0000B0  A2AB               	btfss	4011,1,c	;volatile
   828  0000B2  D002               	goto	l115
   829                           
   830                           ;serialprotocol.c: 82: RCSTAbits.CREN = 0;
   831  0000B4  98AB               	bcf	4011,4,c	;volatile
   832                           
   833                           ;serialprotocol.c: 83: RCSTAbits.CREN = 1;
   834  0000B6  88AB               	bsf	4011,4,c	;volatile
   835  0000B8                     l115:
   836                           
   837                           ;serialprotocol.c: 84: }
   838                           ;serialprotocol.c: 86: character = RCREG;
   839  0000B8  CFAE F013          	movff	4014,receiveData@character	;volatile
   840                           
   841                           ;serialprotocol.c: 87: character = RCREG;
   842  0000BC  CFAE F013          	movff	4014,receiveData@character	;volatile
   843                           
   844                           ;serialprotocol.c: 89: if (PORTCbits.RC7 == 0) {
   845  0000C0  BE82               	btfsc	3970,7,c	;volatile
   846  0000C2  D036               	goto	l1027
   847                           
   848                           ;serialprotocol.c: 90: LATBbits.LATB6 = 0;
   849  0000C4  9C8A               	bcf	3978,6,c	;volatile
   850                           
   851                           ;serialprotocol.c: 92: while (!RCIF);
   852  0000C6  D000               	goto	l117
   853  0000C8                     l117:
   854  0000C8  AA9E               	btfss	3998,5,c	;volatile
   855  0000CA  D7FE               	goto	l117
   856                           
   857                           ;serialprotocol.c: 93: size = RCREG;
   858  0000CC  CFAE F014          	movff	4014,receiveData@size	;volatile
   859  0000D0  6A15               	clrf	receiveData@size+1,c
   860                           
   861                           ;serialprotocol.c: 95: if (size < 16 && size > 0) {
   862  0000D2  BE15               	btfsc	receiveData@size+1,7,c
   863  0000D4  D006               	goto	l1017
   864  0000D6  5015               	movf	receiveData@size+1,w,c
   865  0000D8  E125               	bnz	l120
   866  0000DA  0E10               	movlw	16
   867  0000DC  5C14               	subwf	receiveData@size,w,c
   868  0000DE  B0D8               	btfsc	status,0,c
   869  0000E0  D021               	goto	l120
   870  0000E2                     l1017:
   871  0000E2  BE15               	btfsc	receiveData@size+1,7,c
   872  0000E4  D01F               	goto	l120
   873  0000E6  5015               	movf	receiveData@size+1,w,c
   874  0000E8  E113               	bnz	l1025
   875  0000EA  0414               	decf	receiveData@size,w,c
   876  0000EC  B0D8               	btfsc	status,0,c
   877  0000EE  D010               	goto	l1025
   878  0000F0  D019               	goto	l120
   879                           
   880                           ;serialprotocol.c: 96: while (i < size) {
   881  0000F2  D00E               	goto	l1025
   882                           
   883                           ;serialprotocol.c: 97: while (!RCIF);
   884  0000F4  D000               	goto	l123
   885  0000F6                     l123:
   886  0000F6  AA9E               	btfss	3998,5,c	;volatile
   887  0000F8  D7FE               	goto	l123
   888                           
   889                           ;serialprotocol.c: 98: buffer->buffer[i] = RCREG;
   890  0000FA  5016               	movf	receiveData@i,w,c
   891  0000FC  2410               	addwf	receiveData@buffer,w,c
   892  0000FE  6ED9               	movwf	fsr2l,c
   893  000100  5017               	movf	receiveData@i+1,w,c
   894  000102  2011               	addwfc	receiveData@buffer+1,w,c
   895  000104  6EDA               	movwf	fsr2h,c
   896  000106  CFAE FFDF          	movff	4014,indf2	;volatile
   897                           
   898                           ;serialprotocol.c: 99: i++;
   899  00010A  4A16               	infsnz	receiveData@i,f,c
   900  00010C  2A17               	incf	receiveData@i+1,f,c
   901  00010E  D000               	goto	l1025
   902  000110                     l1025:
   903  000110  5014               	movf	receiveData@size,w,c
   904  000112  5C16               	subwf	receiveData@i,w,c
   905  000114  5017               	movf	receiveData@i+1,w,c
   906  000116  0A80               	xorlw	128
   907  000118  6E12               	movwf	??_receiveData& (0+255),c
   908  00011A  5015               	movf	receiveData@size+1,w,c
   909  00011C  0A80               	xorlw	128
   910  00011E  5812               	subwfb	??_receiveData& (0+255),w,c
   911  000120  A0D8               	btfss	status,0,c
   912  000122  D7E9               	goto	l123
   913  000124                     l120:
   914                           
   915                           ;serialprotocol.c: 100: }
   916                           ;serialprotocol.c: 101: }
   917                           ;serialprotocol.c: 103: LATBbits.LATB6 = 1;
   918  000124  8C8A               	bsf	3978,6,c	;volatile
   919                           
   920                           ;serialprotocol.c: 104: while (PORTCbits.RC7 == 0);
   921  000126  D000               	goto	l127
   922  000128                     l127:
   923  000128  BE82               	btfsc	3970,7,c	;volatile
   924  00012A  D002               	goto	l1027
   925  00012C  D7FD               	goto	l127
   926  00012E  D000               	goto	l1027
   927  000130                     l1027:
   928                           
   929                           ;serialprotocol.c: 105: }
   930                           ;serialprotocol.c: 107: buffer->length = i;
   931  000130  EE20 F010          	lfsr	2,16
   932  000134  5010               	movf	receiveData@buffer,w,c
   933  000136  26D9               	addwf	fsr2l,f,c
   934  000138  5011               	movf	receiveData@buffer+1,w,c
   935  00013A  22DA               	addwfc	fsr2h,f,c
   936  00013C  C016  FFDF         	movff	receiveData@i,indf2
   937                           
   938                           ;serialprotocol.c: 108: buffer->buffer[i] = 0;
   939  000140  5016               	movf	receiveData@i,w,c
   940  000142  2410               	addwf	receiveData@buffer,w,c
   941  000144  6ED9               	movwf	fsr2l,c
   942  000146  5017               	movf	receiveData@i+1,w,c
   943  000148  2011               	addwfc	receiveData@buffer+1,w,c
   944  00014A  6EDA               	movwf	fsr2h,c
   945  00014C  0E00               	movlw	0
   946  00014E  6EDF               	movwf	indf2,c
   947                           
   948                           ;serialprotocol.c: 110: return i;
   949  000150  C016  F010         	movff	receiveData@i,?_receiveData
   950  000154  C017  F011         	movff	receiveData@i+1,?_receiveData+1
   951  000158  0012               	return	
   952  00015A  0012               	return		;funcret
   953  00015C                     __end_of_receiveData:
   954                           	opt stack 0
   955                           tblptru	equ	0xFF8
   956                           wreg	equ	0xFE8
   957                           indf2	equ	0xFDF
   958                           fsr2h	equ	0xFDA
   959                           fsr2l	equ	0xFD9
   960                           status	equ	0xFD8
   961                           
   962 ;; *************** function _pmwSingleModeSetUp *****************
   963 ;; Defined at:
   964 ;;		line 3 in file "pwm.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  polarity        1    wreg     enum E3852
   967 ;;  valuePR2        1   15[COMRAM] unsigned char 
   968 ;;  scaler          1   16[COMRAM] enum E3858
   969 ;;  outputs         1   17[COMRAM] unsigned char 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;  polarity        1   18[COMRAM] enum E3852
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg, status,2, status,0
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0
   981 ;;      Params:         3       0
   982 ;;      Locals:         1       0
   983 ;;      Temps:          0       0
   984 ;;      Totals:         4       0
   985 ;;Total ram usage:        4 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    2
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text6
   996  00029C                     __ptext6:
   997                           	opt stack 0
   998  00029C                     _pmwSingleModeSetUp:
   999                           	opt stack 28
  1000                           
  1001                           ;incstack = 0
  1002                           ;pmwSingleModeSetUp@polarity stored from wreg
  1003  00029C  6E13               	movwf	pmwSingleModeSetUp@polarity,c
  1004                           
  1005                           ;pwm.c: 6: T2CONbits.TMR2ON = 1;
  1006  00029E  84CA               	bsf	4042,2,c	;volatile
  1007                           
  1008                           ;pwm.c: 8: switch (scaler) {
  1009  0002A0  D009               	goto	l985
  1010  0002A2                     l979:
  1011                           
  1012                           ;pwm.c: 10: T2CONbits.T2CKPS = 0x00;
  1013  0002A2  0EFC               	movlw	-4
  1014  0002A4  16CA               	andwf	4042,f,c	;volatile
  1015                           
  1016                           ;pwm.c: 11: break;
  1017  0002A6  D011               	goto	l987
  1018                           
  1019                           ;pwm.c: 12: case TMRP_4:
  1020  0002A8  D000               	goto	l983
  1021  0002AA                     l983:
  1022                           
  1023                           ;pwm.c: 16: T2CONbits.T2CKPS = 0x11;
  1024  0002AA  50CA               	movf	4042,w,c	;volatile
  1025  0002AC  0BFC               	andlw	-4
  1026  0002AE  0901               	iorlw	1
  1027  0002B0  6ECA               	movwf	4042,c	;volatile
  1028                           
  1029                           ;pwm.c: 17: }
  1030  0002B2  D00B               	goto	l987
  1031  0002B4                     l985:
  1032  0002B4  5011               	movf	pmwSingleModeSetUp@scaler,w,c
  1033                           
  1034                           ; Switch size 1, requested type "space"
  1035                           ; Number of cases is 3, Range of values is 0 to 2
  1036                           ; switch strategies available:
  1037                           ; Name         Instructions Cycles
  1038                           ; simple_byte           10     6 (average)
  1039                           ;	Chosen strategy is simple_byte
  1040  0002B6  0A00               	xorlw	0	; case 0
  1041  0002B8  B4D8               	btfsc	status,2,c
  1042  0002BA  D7F3               	goto	l979
  1043  0002BC  0A01               	xorlw	1	; case 1
  1044  0002BE  B4D8               	btfsc	status,2,c
  1045  0002C0  D7F4               	goto	l983
  1046  0002C2  0A03               	xorlw	3	; case 2
  1047  0002C4  B4D8               	btfsc	status,2,c
  1048  0002C6  D7F1               	goto	l983
  1049  0002C8  D000               	goto	l987
  1050  0002CA                     l987:
  1051                           
  1052                           ;pwm.c: 19: CCP1CONbits.P1M = 0x00;
  1053  0002CA  0E3F               	movlw	-193
  1054  0002CC  16BD               	andwf	4029,f,c	;volatile
  1055                           
  1056                           ;pwm.c: 21: switch (polarity) {
  1057  0002CE  D012               	goto	l995
  1058  0002D0                     l989:
  1059                           
  1060                           ;pwm.c: 23: CCP1CONbits.CCP1M = 0b1100;
  1061  0002D0  50BD               	movf	4029,w,c	;volatile
  1062  0002D2  0BF0               	andlw	-16
  1063  0002D4  090C               	iorlw	12
  1064  0002D6  D007               	goto	L4
  1065  0002D8                     l991:
  1066                           
  1067                           ;pwm.c: 26: CCP1CONbits.CCP1M = 0b1101;
  1068  0002D8  50BD               	movf	4029,w,c	;volatile
  1069  0002DA  0BF0               	andlw	-16
  1070  0002DC  090D               	iorlw	13
  1071  0002DE  D003               	goto	L4
  1072  0002E0                     l993:
  1073                           
  1074                           ;pwm.c: 29: CCP1CONbits.CCP1M = 0b1110;
  1075  0002E0  50BD               	movf	4029,w,c	;volatile
  1076  0002E2  0BF0               	andlw	-16
  1077  0002E4  090E               	iorlw	14
  1078  0002E6                     L4:
  1079  0002E6  6EBD               	movwf	4029,c	;volatile
  1080                           
  1081                           ;pwm.c: 30: break;
  1082  0002E8  D012               	goto	l156
  1083  0002EA                     l159:
  1084                           
  1085                           ;pwm.c: 32: CCP1CONbits.CCP1M = 0b1111;
  1086  0002EA  80BD               	bsf	4029,0,c	;volatile
  1087  0002EC  82BD               	bsf	4029,1,c	;volatile
  1088  0002EE  84BD               	bsf	4029,2,c	;volatile
  1089  0002F0  86BD               	bsf	4029,3,c	;volatile
  1090                           
  1091                           ;pwm.c: 33: }
  1092  0002F2  D00D               	goto	l156
  1093  0002F4                     l995:
  1094  0002F4  5013               	movf	pmwSingleModeSetUp@polarity,w,c
  1095                           
  1096                           ; Switch size 1, requested type "space"
  1097                           ; Number of cases is 4, Range of values is 0 to 3
  1098                           ; switch strategies available:
  1099                           ; Name         Instructions Cycles
  1100                           ; simple_byte           13     7 (average)
  1101                           ;	Chosen strategy is simple_byte
  1102  0002F6  0A00               	xorlw	0	; case 0
  1103  0002F8  B4D8               	btfsc	status,2,c
  1104  0002FA  D7EA               	goto	l989
  1105  0002FC  0A01               	xorlw	1	; case 1
  1106  0002FE  B4D8               	btfsc	status,2,c
  1107  000300  D7EB               	goto	l991
  1108  000302  0A03               	xorlw	3	; case 2
  1109  000304  B4D8               	btfsc	status,2,c
  1110  000306  D7EC               	goto	l993
  1111  000308  0A01               	xorlw	1	; case 3
  1112  00030A  B4D8               	btfsc	status,2,c
  1113  00030C  D7EE               	goto	l159
  1114  00030E                     l156:
  1115                           
  1116                           ;pwm.c: 35: PSTRCONbits.STRSYNC = 1;
  1117  00030E  88B9               	bsf	4025,4,c	;volatile
  1118                           
  1119                           ;pwm.c: 37: if (outputs & 0x01) {
  1120  000310  A012               	btfss	pmwSingleModeSetUp@outputs,0,c
  1121  000312  D002               	goto	l160
  1122                           
  1123                           ;pwm.c: 38: LATCbits.LATC5 = 0;
  1124  000314  9A8B               	bcf	3979,5,c	;volatile
  1125                           
  1126                           ;pwm.c: 39: TRISCbits.RC5 = 0;
  1127  000316  9A94               	bcf	3988,5,c	;volatile
  1128  000318                     l160:
  1129                           
  1130                           ;pwm.c: 40: }
  1131                           ;pwm.c: 41: if (outputs & 0x02) {
  1132  000318  A212               	btfss	pmwSingleModeSetUp@outputs,1,c
  1133  00031A  D002               	goto	l161
  1134                           
  1135                           ;pwm.c: 42: LATCbits.LATC4 = 0;
  1136  00031C  988B               	bcf	3979,4,c	;volatile
  1137                           
  1138                           ;pwm.c: 43: TRISCbits.RC4 = 0;
  1139  00031E  9894               	bcf	3988,4,c	;volatile
  1140  000320                     l161:
  1141                           
  1142                           ;pwm.c: 44: }
  1143                           ;pwm.c: 45: if (outputs & 0x04) {
  1144  000320  A412               	btfss	pmwSingleModeSetUp@outputs,2,c
  1145  000322  D002               	goto	l162
  1146                           
  1147                           ;pwm.c: 46: LATCbits.LATC3 = 0;
  1148  000324  968B               	bcf	3979,3,c	;volatile
  1149                           
  1150                           ;pwm.c: 47: TRISCbits.RC3 = 0;
  1151  000326  9694               	bcf	3988,3,c	;volatile
  1152  000328                     l162:
  1153                           
  1154                           ;pwm.c: 48: }
  1155                           ;pwm.c: 49: if (outputs & 0x08) {
  1156  000328  A612               	btfss	pmwSingleModeSetUp@outputs,3,c
  1157  00032A  D002               	goto	l163
  1158                           
  1159                           ;pwm.c: 50: LATCbits.LATC2 = 0;
  1160  00032C  948B               	bcf	3979,2,c	;volatile
  1161                           
  1162                           ;pwm.c: 51: TRISCbits.RC2 = 0;
  1163  00032E  9494               	bcf	3988,2,c	;volatile
  1164  000330                     l163:
  1165                           
  1166                           ;pwm.c: 52: }
  1167                           ;pwm.c: 54: PR2 = valuePR2;
  1168  000330  C010  FFCB         	movff	pmwSingleModeSetUp@valuePR2,4043	;volatile
  1169  000334  0012               	return		;funcret
  1170  000336                     __end_of_pmwSingleModeSetUp:
  1171                           	opt stack 0
  1172                           tblptru	equ	0xFF8
  1173                           wreg	equ	0xFE8
  1174                           indf2	equ	0xFDF
  1175                           fsr2h	equ	0xFDA
  1176                           fsr2l	equ	0xFD9
  1177                           status	equ	0xFD8
  1178                           
  1179 ;; *************** function _com_link *****************
  1180 ;; Defined at:
  1181 ;;		line 88 in file "main.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;		None
  1186 ;; Return value:  Size  Location     Type
  1187 ;;		None               void
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0
  1195 ;;      Params:         0       0
  1196 ;;      Locals:         0       0
  1197 ;;      Temps:         14       0
  1198 ;;      Totals:        14       0
  1199 ;;Total ram usage:       14 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    1
  1202 ;; This function calls:
  1203 ;;		_sendChar
  1204 ;; This function is called by:
  1205 ;;		Interrupt level 2
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	intcode
  1210  000008                     __pintcode:
  1211                           	opt stack 0
  1212  000008                     _com_link:
  1213                           	opt stack 27
  1214                           
  1215                           ;incstack = 0
  1216  000008  CFFA F002          	movff	pclath,??_com_link
  1217  00000C  CFFB F003          	movff	pclatu,??_com_link+1
  1218  000010  CFE9 F004          	movff	fsr0l,??_com_link+2
  1219  000014  CFEA F005          	movff	fsr0h,??_com_link+3
  1220  000018  CFE1 F006          	movff	fsr1l,??_com_link+4
  1221  00001C  CFE2 F007          	movff	fsr1h,??_com_link+5
  1222  000020  CFD9 F008          	movff	fsr2l,??_com_link+6
  1223  000024  CFDA F009          	movff	fsr2h,??_com_link+7
  1224  000028  CFF3 F00A          	movff	prodl,??_com_link+8
  1225  00002C  CFF4 F00B          	movff	prodh,??_com_link+9
  1226  000030  CFF6 F00C          	movff	tblptrl,??_com_link+10
  1227  000034  CFF7 F00D          	movff	tblptrh,??_com_link+11
  1228  000038  CFF8 F00E          	movff	tblptru,??_com_link+12
  1229  00003C  CFF5 F00F          	movff	tablat,??_com_link+13
  1230                           
  1231                           ;main.c: 90: if (INTCONbits.TMR0IF && INTCONbits.TMR0IE){
  1232  000040  B4F2               	btfsc	intcon,2,c	;volatile
  1233  000042  AAF2               	btfss	intcon,5,c	;volatile
  1234  000044  D00E               	goto	i2l34
  1235                           
  1236                           ;main.c: 91: TMR0H = 65340 >> 8;
  1237  000046  68D7               	setf	4055,c	;volatile
  1238                           
  1239                           ;main.c: 92: TMR0L = 65340;
  1240  000048  0E3C               	movlw	60
  1241  00004A  6ED6               	movwf	4054,c	;volatile
  1242                           
  1243                           ;main.c: 93: INTCONbits.TMR0IF = 0;
  1244  00004C  94F2               	bcf	intcon,2,c	;volatile
  1245                           
  1246                           ;main.c: 94: sendChar(0x55);
  1247  00004E  0E55               	movlw	85
  1248  000050  ECFF  F001         	call	_sendChar
  1249                           
  1250                           ;main.c: 95: sendChar(0xDD);
  1251  000054  0EDD               	movlw	221
  1252  000056  ECFF  F001         	call	_sendChar
  1253                           
  1254                           ;main.c: 96: sendChar(0x00);
  1255  00005A  0E00               	movlw	0
  1256  00005C  ECFF  F001         	call	_sendChar
  1257  000060  D000               	goto	i2l34
  1258  000062                     i2l34:
  1259  000062  C00F  FFF5         	movff	??_com_link+13,tablat
  1260  000066  C00E  FFF8         	movff	??_com_link+12,tblptru
  1261  00006A  C00D  FFF7         	movff	??_com_link+11,tblptrh
  1262  00006E  C00C  FFF6         	movff	??_com_link+10,tblptrl
  1263  000072  C00B  FFF4         	movff	??_com_link+9,prodh
  1264  000076  C00A  FFF3         	movff	??_com_link+8,prodl
  1265  00007A  C009  FFDA         	movff	??_com_link+7,fsr2h
  1266  00007E  C008  FFD9         	movff	??_com_link+6,fsr2l
  1267  000082  C007  FFE2         	movff	??_com_link+5,fsr1h
  1268  000086  C006  FFE1         	movff	??_com_link+4,fsr1l
  1269  00008A  C005  FFEA         	movff	??_com_link+3,fsr0h
  1270  00008E  C004  FFE9         	movff	??_com_link+2,fsr0l
  1271  000092  C003  FFFB         	movff	??_com_link+1,pclatu
  1272  000096  C002  FFFA         	movff	??_com_link,pclath
  1273  00009A  0011               	retfie		f
  1274  00009C                     __end_of_com_link:
  1275                           	opt stack 0
  1276                           pclatu	equ	0xFFB
  1277                           pclath	equ	0xFFA
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           prodh	equ	0xFF4
  1283                           prodl	equ	0xFF3
  1284                           intcon	equ	0xFF2
  1285                           fsr0h	equ	0xFEA
  1286                           fsr0l	equ	0xFE9
  1287                           wreg	equ	0xFE8
  1288                           fsr1h	equ	0xFE2
  1289                           fsr1l	equ	0xFE1
  1290                           indf2	equ	0xFDF
  1291                           fsr2h	equ	0xFDA
  1292                           fsr2l	equ	0xFD9
  1293                           status	equ	0xFD8
  1294                           
  1295 ;; *************** function _sendChar *****************
  1296 ;; Defined at:
  1297 ;;		line 60 in file "serialprotocol.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  character       1    wreg     unsigned char 
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;  character       1    0[COMRAM] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		wreg
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0
  1311 ;;      Params:         0       0
  1312 ;;      Locals:         1       0
  1313 ;;      Temps:          0       0
  1314 ;;      Totals:         1       0
  1315 ;;Total ram usage:        1 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; This function calls:
  1318 ;;		Nothing
  1319 ;; This function is called by:
  1320 ;;		_com_link
  1321 ;;		_sendData
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text8
  1326  0003FE                     __ptext8:
  1327                           	opt stack 0
  1328  0003FE                     _sendChar:
  1329                           	opt stack 27
  1330                           
  1331                           ;incstack = 0
  1332                           ;sendChar@character stored from wreg
  1333  0003FE  6E01               	movwf	sendChar@character,c
  1334                           
  1335                           ;serialprotocol.c: 62: while(!TXSTAbits.TRMT);
  1336  000400  D000               	goto	i2l103
  1337  000402                     i2l103:
  1338  000402  A2AC               	btfss	4012,1,c	;volatile
  1339  000404  D7FE               	goto	i2l103
  1340                           
  1341                           ;serialprotocol.c: 63: TXREG = character;
  1342  000406  C001  FFAD         	movff	sendChar@character,4013	;volatile
  1343  00040A  0012               	return		;funcret
  1344  00040C                     __end_of_sendChar:
  1345                           	opt stack 0
  1346  0000                     pclatu	equ	0xFFB
  1347                           pclath	equ	0xFFA
  1348                           tblptru	equ	0xFF8
  1349                           tblptrh	equ	0xFF7
  1350                           tblptrl	equ	0xFF6
  1351                           tablat	equ	0xFF5
  1352                           prodh	equ	0xFF4
  1353                           prodl	equ	0xFF3
  1354                           intcon	equ	0xFF2
  1355                           fsr0h	equ	0xFEA
  1356                           fsr0l	equ	0xFE9
  1357                           wreg	equ	0xFE8
  1358                           fsr1h	equ	0xFE2
  1359                           fsr1l	equ	0xFE1
  1360                           indf2	equ	0xFDF
  1361                           fsr2h	equ	0xFDA
  1362                           fsr2l	equ	0xFD9
  1363                           status	equ	0xFD8
  1364                           pclatu	equ	0xFFB
  1365                           pclath	equ	0xFFA
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodh	equ	0xFF4
  1371                           prodl	equ	0xFF3
  1372                           intcon	equ	0xFF2
  1373                           fsr0h	equ	0xFEA
  1374                           fsr0l	equ	0xFE9
  1375                           wreg	equ	0xFE8
  1376                           fsr1h	equ	0xFE2
  1377                           fsr1l	equ	0xFE1
  1378                           indf2	equ	0xFDF
  1379                           fsr2h	equ	0xFDA
  1380                           fsr2l	equ	0xFD9
  1381                           status	equ	0xFD8
  1382                           
  1383                           	psect	rparam
  1384  0000                     pclatu	equ	0xFFB
  1385                           pclath	equ	0xFFA
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           prodh	equ	0xFF4
  1391                           prodl	equ	0xFF3
  1392                           intcon	equ	0xFF2
  1393                           fsr0h	equ	0xFEA
  1394                           fsr0l	equ	0xFE9
  1395                           wreg	equ	0xFE8
  1396                           fsr1h	equ	0xFE2
  1397                           fsr1l	equ	0xFE1
  1398                           indf2	equ	0xFDF
  1399                           fsr2h	equ	0xFDA
  1400                           fsr2l	equ	0xFD9
  1401                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     47      49
    BANK0           160      0       0

Pointer List with Targets:

    receiveData@buffer	PTR struct receiveBuffer size(2) Largest target is 17
		 -> main@data(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_serialSetUp
    _serialSetUp->_setTimer3

Critical Paths under _com_link in COMRAM

    _com_link->_sendChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _com_link in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    1580
                                             27 COMRAM    20    20      0
                 _pmwSingleModeSetUp
                        _receiveData
                       _selectOutput
                        _serialSetUp
                      _setPulseWidth
 ---------------------------------------------------------------------------------
 (1) _setPulseWidth                                        4     2      2     172
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _serialSetUp                                          8     5      3     372
                                             19 COMRAM     8     5      3
                          _setTimer3
 ---------------------------------------------------------------------------------
 (2) _setTimer3                                            4     2      2     108
                                             15 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _selectOutput                                         3     2      1     238
                                             15 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _receiveData                                          8     6      2     312
                                             15 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _pmwSingleModeSetUp                                   4     1      3     346
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _com_link                                            14    14      0      15
                                              1 COMRAM    14    14      0
                           _sendChar
 ---------------------------------------------------------------------------------
 (4) _sendChar                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pmwSingleModeSetUp
   _receiveData
   _selectOutput
   _serialSetUp
     _setTimer3
   _setPulseWidth

 _com_link (ROOT)
   _sendChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       3        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2F      31       1       51.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31       4        0.0%
DATA                 0      0      31       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jul 21 16:28:39 2015

        ?_pmwSingleModeSetUp 0010         serialSetUp@brg16_bit 0017                          l120 0124  
                        l123 00F6                          l115 00B8                          l117 00C8  
                        l127 0128                          l160 0318                          l161 0320  
                        l162 0328                          l163 0330                          l156 030E  
                        l159 02EA                          l961 035C                          l991 02D8  
                        l983 02AA                          l967 036E                          l959 0352  
                        l993 02E0                          l985 02B4                          l969 0378  
                        l995 02F4                          l987 02CA                          l979 02A2  
                        l989 02D0                          _PR2 000FCB                          u408 03B2  
                        u610 01C6                          u550 0172                          u390 03B0  
                        u608 01AA                          u570 018C                          u628 01C8  
                        u590 01A8                          u568 0174                          u667 0204  
                        u588 018E                 __CFG_BORV$19 000000          serialSetUp@brgh_bit 0014  
         serialSetUp@spbrg16 0015                          wreg 000FE8                 __CFG_FOSC$HS 000000  
       ??_pmwSingleModeSetUp 0013         receiveData@character 0013                 __CFG_LVP$OFF 000000  
                       l1025 0110                         l1017 00E2                         l1041 019C  
                       l1027 0130                         l1043 01BA                         l1035 0160  
                       l1037 0166                         l1039 0180                         l1047 01DA  
                       l1067 0284                         l1059 0248                         _RCIF 007CF5  
                       i2l34 0062                         _TMR3 000FB2                         _main 01FE  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 009C                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000010              setTimer3@turnOn 0013  
                      ?_main 0001                        i2l103 0402                        _RCREG 000FAE  
             __CFG_BBSIZ$OFF 000000                        _RCSTA 000FAB                        _TMR0H 000FD7  
                      _TMR0L 000FD6                        _SPBRG 000FAF                        _TXREG 000FAD  
                      _TXSTA 000FAC               __CFG_FCMEN$OFF 000000                        main@i 001D  
                      tablat 000FF5                        status 000FD8               __CFG_HFOFST$ON 000000  
               ?_receiveData 0010              __initialization 03F0                 __end_of_main 029C  
             __CFG_PCLKEN$ON 000000          selectOutput@outputs 0012                       ??_main 001C  
              __activetblptr 000002               __CFG_PLLEN$OFF 000000            setTimer3@TMR3Pair 0010  
                     _CCPR1L 000FBE               __CFG_WDTEN$OFF 000000                       _SPBRGH 000FB0  
      __end_of_setPulseWidth 03F0    pmwSingleModeSetUp@outputs 0012                 ?_serialSetUp 0014  
             __CFG_XINST$OFF 000000             __end_of_com_link 009C               __CFG_STVREN$ON 000000  
           __end_of_sendChar 040C                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 03F4  
              ___rparam_used 000001               __pcstackCOMRAM 0001     pmwSingleModeSetUp@scaler 0011  
       __size_of_receiveData 00BC                ?_selectOutput 0010           __size_of_setTimer3 002C  
                    _BAUDCON 000FB8  __size_of_pmwSingleModeSetUp 009A                      _PSTRCON 000FB9  
                  ?_com_link 0001                    ?_sendChar 0001              __CFG_PWRTEN$OFF 000000  
                    __Hparam 0000                      __Lparam 0000               ??_selectOutput 0011  
       __size_of_serialSetUp 0064                      __pcinit 03F0                      __ramtop 0100  
                    __ptext0 01FE                      __ptext1 03C6                      __ptext2 0336  
                    __ptext3 039A                      __ptext4 015C                      __ptext5 00A0  
                    __ptext6 029C                      __ptext8 03FE                    _T2CONbits 000FCA  
                  _T3CONbits 000FB1                   ??_com_link 0002         end_of_initialization 03F4  
          __end_of_setTimer3 03C6                __Lmediumconst 0000                   ??_sendChar 0001  
                  _RCSTAbits 000FAB                   _timer3Time 0030              receiveData@size 0014  
                  _PORTCbits 000F82                    _TRISBbits 000F93                    _TRISCbits 000F94  
                _CCP1CONbits 000FBD                    _TXSTAbits 000FAC                 receiveData@i 0016  
     __size_of_setPulseWidth 002A          start_initialization 03F0           selectOutput@toggle 0010  
       __end_of_selectOutput 01FE                  __pbssCOMRAM 0030            __size_of_com_link 0094  
              ??_receiveData 0012                _setPulseWidth 03C6            __size_of_sendChar 000E  
                  __pintcode 0008   __end_of_pmwSingleModeSetUp 0336                     _LATBbits 000F8A  
                   _LATCbits 000F8B               ?_setPulseWidth 0010                    _setTimer3 039A  
              ??_serialSetUp 0017                     _PIR2bits 000FA1             __CFG_WDTPS$32768 000000  
        __end_of_receiveData 015C        __size_of_selectOutput 00A2                   ?_setTimer3 0010  
                   __Hrparam 0000                     __Lrparam 0000           __CFG_BOREN$SBORDIS 000000  
               _selectOutput 015C          __end_of_serialSetUp 039A                   _ANSELHbits 000F7F  
                   _com_link 0008              ??_setPulseWidth 0012                __size_of_main 009E  
                _receiveData 00A0                     _sendChar 03FE                     main@data 001F  
          receiveData@buffer 0010              _serialSetUp$708 0018              _serialSetUp$709 001A  
                 _INTCONbits 000FF2                     intlevel2 0000                  ??_setTimer3 0012  
                _serialSetUp 0336           setPulseWidth@width 0010                  _PSTRCONbits 000FB9  
 pmwSingleModeSetUp@valuePR2 0010   pmwSingleModeSetUp@polarity 0013           _pmwSingleModeSetUp 029C  
          sendChar@character 0001  
