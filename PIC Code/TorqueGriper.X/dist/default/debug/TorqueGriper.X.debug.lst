

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Jul 23 14:56:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F13K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     _TMR3	set	4018
    16  0000                     _ANSELHbits	set	3967
    17  0000                     _ANSELbits	set	3966
    18  0000                     _BAUDCON	set	4024
    19  0000                     _CCP1CONbits	set	4029
    20  0000                     _CCPR1L	set	4030
    21  0000                     _INTCONbits	set	4082
    22  0000                     _LATCbits	set	3979
    23  0000                     _PIR2bits	set	4001
    24  0000                     _PORTCbits	set	3970
    25  0000                     _PR2	set	4043
    26  0000                     _PSTRCON	set	4025
    27  0000                     _PSTRCONbits	set	4025
    28  0000                     _RCREG	set	4014
    29  0000                     _RCSTA	set	4011
    30  0000                     _RCSTAbits	set	4011
    31  0000                     _SPBRG	set	4015
    32  0000                     _SPBRGH	set	4016
    33  0000                     _SSPBUF	set	4041
    34  0000                     _SSPCON1bits	set	4038
    35  0000                     _SSPSTATbits	set	4039
    36  0000                     _T2CONbits	set	4042
    37  0000                     _T3CONbits	set	4017
    38  0000                     _TMR0H	set	4055
    39  0000                     _TMR0L	set	4054
    40  0000                     _TRISBbits	set	3987
    41  0000                     _TRISCbits	set	3988
    42  0000                     _TXREG	set	4013
    43  0000                     _TXSTA	set	4012
    44  0000                     _TXSTAbits	set	4012
    45  0000                     _RCIF	set	31989
    46                           
    47 ;; *************** function _com_link *****************
    48 ;; Defined at:
    49 ;;		line 158 in file "main.c"
    50 ;; Parameters:    Size  Location     Type
    51 ;;		None
    52 ;; Auto vars:     Size  Location     Type
    53 ;;		None
    54 ;; Return value:  Size  Location     Type
    55 ;;		None               void
    56 ;; Registers used:
    57 ;;		wreg, status,2
    58 ;; Tracked objects:
    59 ;;		On entry : 0/0
    60 ;;		On exit  : 0/0
    61 ;;		Unchanged: 0/0
    62 ;; Data sizes:     COMRAM   BANK0
    63 ;;      Params:         0       0
    64 ;;      Locals:         0       0
    65 ;;      Temps:         15       0
    66 ;;      Totals:        15       0
    67 ;;Total ram usage:       15 bytes
    68 ;; Hardware stack levels used:    1
    69 ;; This function calls:
    70 ;;		Nothing
    71 ;; This function is called by:
    72 ;;		Interrupt level 2
    73 ;; This function uses a non-reentrant model
    74 ;;
    75                           
    76                           	psect	intcode
    77  000008                     __pintcode:
    78                           	opt stack 0
    79                           
    80                           ; #config settings
    81  000008                     _com_link:
    82                           	opt stack 28
    83                           
    84                           ;incstack = 0
    85  000008  CFFA F002          	movff	pclath,??_com_link+1
    86  00000C  CFFB F003          	movff	pclatu,??_com_link+2
    87  000010  CFE9 F004          	movff	fsr0l,??_com_link+3
    88  000014  CFEA F005          	movff	fsr0h,??_com_link+4
    89  000018  CFE1 F006          	movff	fsr1l,??_com_link+5
    90  00001C  CFE2 F007          	movff	fsr1h,??_com_link+6
    91  000020  CFD9 F008          	movff	fsr2l,??_com_link+7
    92  000024  CFDA F009          	movff	fsr2h,??_com_link+8
    93  000028  CFF3 F00A          	movff	prodl,??_com_link+9
    94  00002C  CFF4 F00B          	movff	prodh,??_com_link+10
    95  000030  CFF6 F00C          	movff	tblptrl,??_com_link+11
    96  000034  CFF7 F00D          	movff	tblptrh,??_com_link+12
    97  000038  CFF8 F00E          	movff	tblptru,??_com_link+13
    98  00003C  CFF5 F00F          	movff	tablat,??_com_link+14
    99                           
   100                           ;main.c: 160: if (INTCONbits.TMR0IF && INTCONbits.TMR0IE){
   101  000040  B4F2               	btfsc	intcon,2,c	;volatile
   102  000042  AAF2               	btfss	intcon,5,c	;volatile
   103  000044  D00D               	goto	i2l44
   104                           
   105                           ;main.c: 161: TMR0H = 65340 >> 8;
   106  000046  68D7               	setf	4055,c	;volatile
   107                           
   108                           ;main.c: 162: TMR0L = 65340;
   109  000048  0E3C               	movlw	60
   110  00004A  6ED6               	movwf	4054,c	;volatile
   111                           
   112                           ;main.c: 163: INTCONbits.TMR0IF = 0;
   113  00004C  94F2               	bcf	intcon,2,c	;volatile
   114                           
   115                           ;main.c: 164: _delay((unsigned long)((1)*(20000000/4000.0)));
   116  00004E  0E07               	movlw	7
   117  000050  6E01               	movwf	??_com_link& (0+255),c
   118  000052  0E7D               	movlw	125
   119  000054                     i2u75_47:
   120  000054  2EE8               	decfsz	wreg,f,c
   121  000056  D7FE               	goto	i2u75_47
   122  000058  2E01               	decfsz	??_com_link& (0+255),f,c
   123  00005A  D7FC               	goto	i2u75_47
   124  00005C  F000               	nop	
   125  00005E  D000               	goto	i2l44
   126  000060                     i2l44:
   127  000060  C00F  FFF5         	movff	??_com_link+14,tablat
   128  000064  C00E  FFF8         	movff	??_com_link+13,tblptru
   129  000068  C00D  FFF7         	movff	??_com_link+12,tblptrh
   130  00006C  C00C  FFF6         	movff	??_com_link+11,tblptrl
   131  000070  C00B  FFF4         	movff	??_com_link+10,prodh
   132  000074  C00A  FFF3         	movff	??_com_link+9,prodl
   133  000078  C009  FFDA         	movff	??_com_link+8,fsr2h
   134  00007C  C008  FFD9         	movff	??_com_link+7,fsr2l
   135  000080  C007  FFE2         	movff	??_com_link+6,fsr1h
   136  000084  C006  FFE1         	movff	??_com_link+5,fsr1l
   137  000088  C005  FFEA         	movff	??_com_link+4,fsr0h
   138  00008C  C004  FFE9         	movff	??_com_link+3,fsr0l
   139  000090  C003  FFFB         	movff	??_com_link+2,pclatu
   140  000094  C002  FFFA         	movff	??_com_link+1,pclath
   141  000098  0011               	retfie		f
   142  00009A                     __end_of_com_link:
   143                           	opt stack 0
   144  0000                     pclatu	equ	0xFFB
   145                           pclath	equ	0xFFA
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           tblptrl	equ	0xFF6
   149                           tablat	equ	0xFF5
   150                           prodh	equ	0xFF4
   151                           prodl	equ	0xFF3
   152                           intcon	equ	0xFF2
   153                           fsr0h	equ	0xFEA
   154                           fsr0l	equ	0xFE9
   155                           wreg	equ	0xFE8
   156                           fsr1h	equ	0xFE2
   157                           fsr1l	equ	0xFE1
   158                           fsr2h	equ	0xFDA
   159                           fsr2l	equ	0xFD9
   160                           
   161                           	psect	cinit
   162  000206                     __pcinit:
   163                           	opt stack 0
   164  000206                     start_initialization:
   165                           	opt stack 0
   166  000206                     __initialization:
   167                           	opt stack 0
   168                           
   169                           ; Clear objects allocated to COMRAM (2 bytes)
   170  000206  6A25               	clrf	(__pbssCOMRAM+1)& (0+255),c
   171  000208  6A24               	clrf	__pbssCOMRAM& (0+255),c
   172  00020A                     end_of_initialization:
   173                           	opt stack 0
   174  00020A                     __end_of__initialization:
   175                           	opt stack 0
   176  00020A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   177  00020C  6EF8               	movwf	tblptru,c
   178  00020E  0100               	movlb	0
   179  000210  EF4F  F000         	goto	_main	;jump to C main() function
   180                           pclatu	equ	0xFFB
   181                           pclath	equ	0xFFA
   182                           tblptru	equ	0xFF8
   183                           tblptrh	equ	0xFF7
   184                           tblptrl	equ	0xFF6
   185                           tablat	equ	0xFF5
   186                           prodh	equ	0xFF4
   187                           prodl	equ	0xFF3
   188                           intcon	equ	0xFF2
   189                           fsr0h	equ	0xFEA
   190                           fsr0l	equ	0xFE9
   191                           wreg	equ	0xFE8
   192                           fsr1h	equ	0xFE2
   193                           fsr1l	equ	0xFE1
   194                           fsr2h	equ	0xFDA
   195                           fsr2l	equ	0xFD9
   196                           
   197                           	psect	bssCOMRAM
   198  000024                     __pbssCOMRAM:
   199                           	opt stack 0
   200  000024                     _timer3Time:
   201                           	opt stack 0
   202  000024                     	ds	2
   203                           pclatu	equ	0xFFB
   204                           pclath	equ	0xFFA
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           tblptrl	equ	0xFF6
   208                           tablat	equ	0xFF5
   209                           prodh	equ	0xFF4
   210                           prodl	equ	0xFF3
   211                           intcon	equ	0xFF2
   212                           fsr0h	equ	0xFEA
   213                           fsr0l	equ	0xFE9
   214                           wreg	equ	0xFE8
   215                           fsr1h	equ	0xFE2
   216                           fsr1l	equ	0xFE1
   217                           fsr2h	equ	0xFDA
   218                           fsr2l	equ	0xFD9
   219                           
   220                           	psect	cstackCOMRAM
   221  000001                     __pcstackCOMRAM:
   222                           	opt stack 0
   223  000001                     ??_com_link:
   224  000001                     
   225                           ; 2 bytes @ 0x0
   226  000001                     	ds	15
   227  000010                     serialSetUp@brgh_bit:
   228                           	opt stack 0
   229  000010                     sendChar@character:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0xF
   233  000010                     	ds	1
   234  000011                     serialSetUp@spbrg16:
   235                           	opt stack 0
   236  000011                     sendData@string:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x10
   240  000011                     	ds	2
   241  000013                     serialSetUp@brg16_bit:
   242                           	opt stack 0
   243  000013                     sendData@length:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x12
   247  000013                     	ds	1
   248  000014                     _serialSetUp$741:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x13
   252  000014                     	ds	1
   253  000015                     ??_sendData:
   254                           
   255                           ; 0 bytes @ 0x14
   256  000015                     	ds	1
   257  000016                     _serialSetUp$742:
   258                           	opt stack 0
   259  000016                     sendData@i:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x15
   263  000016                     	ds	2
   264  000018                     ??_main:
   265                           
   266                           ; 0 bytes @ 0x17
   267  000018                     	ds	1
   268  000019                     main@data:
   269                           	opt stack 0
   270                           
   271                           ; 6 bytes @ 0x18
   272  000019                     	ds	6
   273  00001F                     main@length:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x1E
   277  00001F                     	ds	1
   278  000020                     main@byte_2:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x1F
   282  000020                     	ds	1
   283  000021                     main@size:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x20
   287  000021                     	ds	1
   288  000022                     main@byte_1:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x21
   292  000022                     	ds	1
   293  000023                     main@i:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x22
   297  000023                     	ds	1
   298                           pclatu	equ	0xFFB
   299                           pclath	equ	0xFFA
   300                           tblptru	equ	0xFF8
   301                           tblptrh	equ	0xFF7
   302                           tblptrl	equ	0xFF6
   303                           tablat	equ	0xFF5
   304                           prodh	equ	0xFF4
   305                           prodl	equ	0xFF3
   306                           intcon	equ	0xFF2
   307                           fsr0h	equ	0xFEA
   308                           fsr0l	equ	0xFE9
   309                           wreg	equ	0xFE8
   310                           fsr1h	equ	0xFE2
   311                           fsr1l	equ	0xFE1
   312                           fsr2h	equ	0xFDA
   313                           fsr2l	equ	0xFD9
   314                           
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 49 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  data            6   24[COMRAM] unsigned char [6]
   325 ;;  i               1   34[COMRAM] unsigned char 
   326 ;;  byte_1          1   33[COMRAM] unsigned char 
   327 ;;  size            1   32[COMRAM] unsigned char 
   328 ;;  byte_2          1   31[COMRAM] unsigned char 
   329 ;;  length          1   30[COMRAM] unsigned char 
   330 ;; Return value:  Size  Location     Type
   331 ;;                  2   20[None  ] int 
   332 ;; Registers used:
   333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0
   339 ;;      Params:         0       0
   340 ;;      Locals:        11       0
   341 ;;      Temps:          1       0
   342 ;;      Totals:        12       0
   343 ;;Total ram usage:       12 bytes
   344 ;; Hardware stack levels required when called:    3
   345 ;; This function calls:
   346 ;;		_sendChar
   347 ;;		_sendData
   348 ;;		_serialSetUp
   349 ;; This function is called by:
   350 ;;		Startup code after reset
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	text0
   355  00009E                     __ptext0:
   356                           	opt stack 0
   357  00009E                     _main:
   358                           	opt stack 28
   359                           
   360                           ;main.c: 110: serialSetUp(1, 1, 0x81);
   361                           
   362                           ;incstack = 0
   363  00009E  0E01               	movlw	1
   364  0000A0  6E10               	movwf	serialSetUp@brgh_bit,c
   365  0000A2  0E00               	movlw	0
   366  0000A4  6E12               	movwf	serialSetUp@spbrg16+1,c
   367  0000A6  0E81               	movlw	129
   368  0000A8  6E11               	movwf	serialSetUp@spbrg16,c
   369  0000AA  0E01               	movlw	1
   370  0000AC  ECBC  F000         	call	_serialSetUp
   371                           
   372                           ;main.c: 111: unsigned char byte_1;
   373                           ;main.c: 112: unsigned char byte_2;
   374                           ;main.c: 113: unsigned char data[6];
   375                           ;main.c: 114: char length = 0;
   376  0000B0  0E00               	movlw	0
   377  0000B2  6E1F               	movwf	main@length,c
   378  0000B4  D000               	goto	l1149
   379  0000B6                     l1149:
   380                           
   381                           ;main.c: 119: i = 0;
   382  0000B6  0E00               	movlw	0
   383  0000B8  6E23               	movwf	main@i,c
   384                           
   385                           ;main.c: 120: if (RCIF){
   386  0000BA  AA9E               	btfss	3998,5,c	;volatile
   387  0000BC  D04E               	goto	l1181
   388                           
   389                           ;main.c: 121: i = 0;
   390  0000BE  0E00               	movlw	0
   391  0000C0  6E23               	movwf	main@i,c
   392                           
   393                           ;main.c: 122: byte_1 = RCREG;
   394  0000C2  CFAE F022          	movff	4014,main@byte_1	;volatile
   395                           
   396                           ;main.c: 124: if ((byte_1 & 0xF0) == 0xE0){
   397  0000C6  5022               	movf	main@byte_1,w,c
   398  0000C8  0BF0               	andlw	240
   399  0000CA  0AE0               	xorlw	224
   400  0000CC  A4D8               	btfss	status,2,c
   401  0000CE  D042               	goto	l1179
   402                           
   403                           ;main.c: 125: size = byte_1 & 0x0F;
   404  0000D0  5022               	movf	main@byte_1,w,c
   405  0000D2  0B0F               	andlw	15
   406  0000D4  6E21               	movwf	main@size,c
   407                           
   408                           ;main.c: 126: if (size <= 6) {
   409  0000D6  0E07               	movlw	7
   410  0000D8  6021               	cpfslt	main@size,c
   411  0000DA  D038               	goto	l1177
   412                           
   413                           ;main.c: 127: sendChar(0x70);
   414  0000DC  0E70               	movlw	112
   415  0000DE  EC0A  F001         	call	_sendChar
   416                           
   417                           ;main.c: 128: for (; i < size; i++){
   418  0000E2  D02E               	goto	l1175
   419                           
   420                           ;main.c: 129: while (!RCIF);
   421  0000E4  D000               	goto	l27
   422  0000E6                     l27:
   423  0000E6  AA9E               	btfss	3998,5,c	;volatile
   424  0000E8  D7FE               	goto	l27
   425                           
   426                           ;main.c: 130: byte_1 = RCREG;
   427  0000EA  CFAE F022          	movff	4014,main@byte_1	;volatile
   428                           
   429                           ;main.c: 131: while (!RCIF);
   430  0000EE  D000               	goto	l30
   431  0000F0                     l30:
   432  0000F0  AA9E               	btfss	3998,5,c	;volatile
   433  0000F2  D7FE               	goto	l30
   434                           
   435                           ;main.c: 132: byte_2 = RCREG;
   436  0000F4  CFAE F020          	movff	4014,main@byte_2	;volatile
   437                           
   438                           ;main.c: 134: if ((byte_1 & 0xF0) == 0xA0 && (byte_2 & 0xF0) == 0xA0){
   439  0000F8  5022               	movf	main@byte_1,w,c
   440  0000FA  0BF0               	andlw	240
   441  0000FC  0AA0               	xorlw	160
   442  0000FE  A4D8               	btfss	status,2,c
   443  000100  D019               	goto	l1171
   444  000102  5020               	movf	main@byte_2,w,c
   445  000104  0BF0               	andlw	240
   446  000106  0AA0               	xorlw	160
   447  000108  A4D8               	btfss	status,2,c
   448  00010A  D014               	goto	l1171
   449                           
   450                           ;main.c: 135: data[i] = byte_1 << 4 | (byte_2 & 0x0F);
   451  00010C  5023               	movf	main@i,w,c
   452  00010E  0D01               	mullw	1
   453  000110  0E19               	movlw	low main@data
   454  000112  24F3               	addwf	prodl,w,c
   455  000114  6ED9               	movwf	fsr2l,c
   456  000116  0E00               	movlw	high main@data
   457  000118  20F4               	addwfc	prodh,w,c
   458  00011A  6EDA               	movwf	fsr2h,c
   459  00011C  C020  F018         	movff	main@byte_2,??_main
   460  000120  0E0F               	movlw	15
   461  000122  1618               	andwf	??_main,f,c
   462  000124  3822               	swapf	main@byte_1,w,c
   463  000126  0BF0               	andlw	240
   464  000128  1018               	iorwf	??_main,w,c
   465  00012A  6EDF               	movwf	indf2,c
   466                           
   467                           ;main.c: 136: sendChar(0x60);
   468  00012C  0E60               	movlw	96
   469  00012E  EC0A  F001         	call	_sendChar
   470                           
   471                           ;main.c: 137: } else {
   472  000132  D004               	goto	l1173
   473  000134                     l1171:
   474                           
   475                           ;main.c: 138: sendChar(0x50);
   476  000134  0E50               	movlw	80
   477  000136  EC0A  F001         	call	_sendChar
   478                           
   479                           ;main.c: 139: break;
   480  00013A  D00C               	goto	l1179
   481  00013C                     l1173:
   482  00013C  2A23               	incf	main@i,f,c
   483  00013E  D000               	goto	l1175
   484  000140                     l1175:
   485  000140  5021               	movf	main@size,w,c
   486  000142  5C23               	subwf	main@i,w,c
   487  000144  B0D8               	btfsc	status,0,c
   488  000146  D006               	goto	l1179
   489  000148  D7CE               	goto	l27
   490                           
   491                           ;main.c: 140: }
   492                           ;main.c: 141: }
   493                           ;main.c: 142: } else {
   494  00014A  D004               	goto	l1179
   495  00014C                     l1177:
   496                           
   497                           ;main.c: 143: sendChar(0x40);
   498  00014C  0E40               	movlw	64
   499  00014E  EC0A  F001         	call	_sendChar
   500  000152  D000               	goto	l1179
   501  000154                     l1179:
   502                           
   503                           ;main.c: 144: }
   504                           ;main.c: 145: }
   505                           ;main.c: 147: length = i;
   506  000154  C023  F01F         	movff	main@i,main@length
   507  000158  D000               	goto	l1181
   508  00015A                     l1181:
   509                           
   510                           ;main.c: 148: }
   511                           ;main.c: 150: if (i)
   512  00015A  5023               	movf	main@i,w,c
   513  00015C  B4D8               	btfsc	status,2,c
   514  00015E  D7AB               	goto	l1149
   515                           
   516                           ;main.c: 151: sendData(data, length);
   517  000160  0E19               	movlw	low main@data
   518  000162  6E11               	movwf	sendData@string,c
   519  000164  0E00               	movlw	high main@data
   520  000166  6E12               	movwf	sendData@string+1,c
   521  000168  C01F  F013         	movff	main@length,sendData@length
   522  00016C  6A14               	clrf	sendData@length+1,c
   523  00016E  ECE7  F000         	call	_sendData	;wreg free
   524  000172  D7A1               	goto	l1149
   525                           
   526                           ;main.c: 152: }
   527                           ;main.c: 155: return (0);
   528                           ;	Return value of _main is never used
   529  000174  EF4D  F000         	goto	start
   530  000178                     __end_of_main:
   531                           	opt stack 0
   532                           pclatu	equ	0xFFB
   533                           pclath	equ	0xFFA
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           prodh	equ	0xFF4
   539                           prodl	equ	0xFF3
   540                           intcon	equ	0xFF2
   541                           fsr0h	equ	0xFEA
   542                           fsr0l	equ	0xFE9
   543                           wreg	equ	0xFE8
   544                           fsr1h	equ	0xFE2
   545                           fsr1l	equ	0xFE1
   546                           indf2	equ	0xFDF
   547                           fsr2h	equ	0xFDA
   548                           fsr2l	equ	0xFD9
   549                           status	equ	0xFD8
   550                           
   551 ;; *************** function _serialSetUp *****************
   552 ;; Defined at:
   553 ;;		line 23 in file "serialprotocol.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  brg16_bit       1    wreg     unsigned char 
   556 ;;  brgh_bit        1   15[COMRAM] unsigned char 
   557 ;;  spbrg16         2   16[COMRAM] unsigned int 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  brg16_bit       1   18[COMRAM] unsigned char 
   560 ;; Return value:  Size  Location     Type
   561 ;;		None               void
   562 ;; Registers used:
   563 ;;		wreg, status,2
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0
   569 ;;      Params:         3       0
   570 ;;      Locals:         5       0
   571 ;;      Temps:          0       0
   572 ;;      Totals:         8       0
   573 ;;Total ram usage:        8 bytes
   574 ;; Hardware stack levels used:    1
   575 ;; Hardware stack levels required when called:    1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text1
   584  000178                     __ptext1:
   585                           	opt stack 0
   586  000178                     _serialSetUp:
   587                           	opt stack 29
   588                           
   589                           ;incstack = 0
   590                           ;serialSetUp@brg16_bit stored from wreg
   591  000178  6E13               	movwf	serialSetUp@brg16_bit,c
   592                           
   593                           ;serialprotocol.c: 26: ANSELbits.ANS5 = 0;
   594  00017A  9A7E               	bcf	3966,5,c	;volatile
   595                           
   596                           ;serialprotocol.c: 27: ANSELHbits.ANS11 = 0;
   597  00017C  967F               	bcf	3967,3,c	;volatile
   598                           
   599                           ;serialprotocol.c: 29: TRISBbits.RB5 = 1;
   600  00017E  8A93               	bsf	3987,5,c	;volatile
   601                           
   602                           ;serialprotocol.c: 30: TRISBbits.RB7 = 0;
   603  000180  9E93               	bcf	3987,7,c	;volatile
   604                           
   605                           ;serialprotocol.c: 31: TRISCbits.RC0 = 0;
   606  000182  9094               	bcf	3988,0,c	;volatile
   607                           
   608                           ;serialprotocol.c: 32: TRISCbits.RC1 = 1;
   609  000184  8294               	bsf	3988,1,c	;volatile
   610                           
   611                           ;serialprotocol.c: 34: BAUDCON = (brg16_bit) ? 0x08 : 0x00;
   612  000186  5013               	movf	serialSetUp@brg16_bit,w,c
   613  000188  A4D8               	btfss	status,2,c
   614  00018A  D004               	goto	l1121
   615  00018C  0E00               	movlw	0
   616  00018E  6E15               	movwf	_serialSetUp$741+1,c
   617  000190  0E00               	movlw	0
   618  000192  D003               	goto	L1
   619  000194                     l1121:
   620  000194  0E00               	movlw	0
   621  000196  6E15               	movwf	_serialSetUp$741+1,c
   622  000198  0E08               	movlw	8
   623  00019A                     L1:
   624  00019A  6E14               	movwf	_serialSetUp$741,c
   625  00019C  D000               	goto	l1123
   626  00019E                     l1123:
   627  00019E  C014  FFB8         	movff	_serialSetUp$741,4024	;volatile
   628                           
   629                           ;serialprotocol.c: 35: TXSTA = (brgh_bit) ? 0x24: 0x20;
   630  0001A2  5010               	movf	serialSetUp@brgh_bit,w,c
   631  0001A4  A4D8               	btfss	status,2,c
   632  0001A6  D004               	goto	l1129
   633  0001A8  0E00               	movlw	0
   634  0001AA  6E17               	movwf	_serialSetUp$742+1,c
   635  0001AC  0E20               	movlw	32
   636  0001AE  D003               	goto	L2
   637  0001B0                     l1129:
   638  0001B0  0E00               	movlw	0
   639  0001B2  6E17               	movwf	_serialSetUp$742+1,c
   640  0001B4  0E24               	movlw	36
   641  0001B6                     L2:
   642  0001B6  6E16               	movwf	_serialSetUp$742,c
   643  0001B8  D000               	goto	l1131
   644  0001BA                     l1131:
   645  0001BA  C016  FFAC         	movff	_serialSetUp$742,4012	;volatile
   646                           
   647                           ;serialprotocol.c: 36: SPBRGH = spbrg16 >> 8;
   648  0001BE  5012               	movf	serialSetUp@spbrg16+1,w,c
   649  0001C0  6EB0               	movwf	4016,c	;volatile
   650                           
   651                           ;serialprotocol.c: 37: SPBRG = spbrg16;
   652  0001C2  C011  FFAF         	movff	serialSetUp@spbrg16,4015	;volatile
   653                           
   654                           ;serialprotocol.c: 38: RCSTA = 0x90;
   655  0001C6  0E90               	movlw	144
   656  0001C8  6EAB               	movwf	4011,c	;volatile
   657                           
   658                           ;serialprotocol.c: 42: LATCbits.LATC0 = 1;
   659  0001CA  808B               	bsf	3979,0,c	;volatile
   660  0001CC  0012               	return		;funcret
   661  0001CE                     __end_of_serialSetUp:
   662                           	opt stack 0
   663                           pclatu	equ	0xFFB
   664                           pclath	equ	0xFFA
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           prodh	equ	0xFF4
   670                           prodl	equ	0xFF3
   671                           intcon	equ	0xFF2
   672                           fsr0h	equ	0xFEA
   673                           fsr0l	equ	0xFE9
   674                           wreg	equ	0xFE8
   675                           fsr1h	equ	0xFE2
   676                           fsr1l	equ	0xFE1
   677                           indf2	equ	0xFDF
   678                           fsr2h	equ	0xFDA
   679                           fsr2l	equ	0xFD9
   680                           status	equ	0xFD8
   681                           
   682 ;; *************** function _sendData *****************
   683 ;; Defined at:
   684 ;;		line 66 in file "serialprotocol.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  string          2   16[COMRAM] PTR unsigned char 
   687 ;;		 -> main@data(6), 
   688 ;;  length          2   18[COMRAM] int 
   689 ;; Auto vars:     Size  Location     Type
   690 ;;  i               2   21[COMRAM] int 
   691 ;; Return value:  Size  Location     Type
   692 ;;		None               void
   693 ;; Registers used:
   694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMRAM   BANK0
   700 ;;      Params:         4       0
   701 ;;      Locals:         2       0
   702 ;;      Temps:          1       0
   703 ;;      Totals:         7       0
   704 ;;Total ram usage:        7 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; Hardware stack levels required when called:    2
   707 ;; This function calls:
   708 ;;		_sendChar
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text2
   715  0001CE                     __ptext2:
   716                           	opt stack 0
   717  0001CE                     _sendData:
   718                           	opt stack 28
   719                           
   720                           ;serialprotocol.c: 68: int i;
   721                           ;serialprotocol.c: 70: for (i = 0; i < length; i++)
   722                           
   723                           ;incstack = 0
   724  0001CE  0E00               	movlw	0
   725  0001D0  6E17               	movwf	sendData@i+1,c
   726  0001D2  0E00               	movlw	0
   727  0001D4  6E16               	movwf	sendData@i,c
   728  0001D6  D00C               	goto	l1143
   729  0001D8                     l1139:
   730                           
   731                           ;serialprotocol.c: 71: sendChar(string[i]);
   732  0001D8  5016               	movf	sendData@i,w,c
   733  0001DA  2411               	addwf	sendData@string,w,c
   734  0001DC  6ED9               	movwf	fsr2l,c
   735  0001DE  5017               	movf	sendData@i+1,w,c
   736  0001E0  2012               	addwfc	sendData@string+1,w,c
   737  0001E2  6EDA               	movwf	fsr2h,c
   738  0001E4  50DF               	movf	indf2,w,c
   739  0001E6  EC0A  F001         	call	_sendChar
   740  0001EA  4A16               	infsnz	sendData@i,f,c
   741  0001EC  2A17               	incf	sendData@i+1,f,c
   742  0001EE  D000               	goto	l1143
   743  0001F0                     l1143:
   744  0001F0  5013               	movf	sendData@length,w,c
   745  0001F2  5C16               	subwf	sendData@i,w,c
   746  0001F4  5017               	movf	sendData@i+1,w,c
   747  0001F6  0A80               	xorlw	128
   748  0001F8  6E15               	movwf	??_sendData& (0+255),c
   749  0001FA  5014               	movf	sendData@length+1,w,c
   750  0001FC  0A80               	xorlw	128
   751  0001FE  5815               	subwfb	??_sendData& (0+255),w,c
   752  000200  A0D8               	btfss	status,0,c
   753  000202  D7EA               	goto	l1139
   754  000204  0012               	return		;funcret
   755  000206                     __end_of_sendData:
   756                           	opt stack 0
   757                           pclatu	equ	0xFFB
   758                           pclath	equ	0xFFA
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           prodh	equ	0xFF4
   764                           prodl	equ	0xFF3
   765                           intcon	equ	0xFF2
   766                           fsr0h	equ	0xFEA
   767                           fsr0l	equ	0xFE9
   768                           wreg	equ	0xFE8
   769                           fsr1h	equ	0xFE2
   770                           fsr1l	equ	0xFE1
   771                           indf2	equ	0xFDF
   772                           fsr2h	equ	0xFDA
   773                           fsr2l	equ	0xFD9
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function _sendChar *****************
   777 ;; Defined at:
   778 ;;		line 60 in file "serialprotocol.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  character       1    wreg     unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  character       1   15[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;		None               void
   785 ;; Registers used:
   786 ;;		wreg
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0
   792 ;;      Params:         0       0
   793 ;;      Locals:         1       0
   794 ;;      Temps:          0       0
   795 ;;      Totals:         1       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_main
   803 ;;		_sendData
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text3
   808  000214                     __ptext3:
   809                           	opt stack 0
   810  000214                     _sendChar:
   811                           	opt stack 28
   812                           
   813                           ;incstack = 0
   814                           ;sendChar@character stored from wreg
   815  000214  6E10               	movwf	sendChar@character,c
   816                           
   817                           ;serialprotocol.c: 62: while(!TXSTAbits.TRMT);
   818  000216  D000               	goto	l115
   819  000218                     l115:
   820  000218  A2AC               	btfss	4012,1,c	;volatile
   821  00021A  D7FE               	goto	l115
   822                           
   823                           ;serialprotocol.c: 63: TXREG = character;
   824  00021C  C010  FFAD         	movff	sendChar@character,4013	;volatile
   825  000220  0012               	return		;funcret
   826  000222                     __end_of_sendChar:
   827                           	opt stack 0
   828                           pclatu	equ	0xFFB
   829                           pclath	equ	0xFFA
   830                           tblptru	equ	0xFF8
   831                           tblptrh	equ	0xFF7
   832                           tblptrl	equ	0xFF6
   833                           tablat	equ	0xFF5
   834                           prodh	equ	0xFF4
   835                           prodl	equ	0xFF3
   836                           intcon	equ	0xFF2
   837                           fsr0h	equ	0xFEA
   838                           fsr0l	equ	0xFE9
   839                           wreg	equ	0xFE8
   840                           fsr1h	equ	0xFE2
   841                           fsr1l	equ	0xFE1
   842                           indf2	equ	0xFDF
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           status	equ	0xFD8
   846                           pclatu	equ	0xFFB
   847                           pclath	equ	0xFFA
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           prodh	equ	0xFF4
   853                           prodl	equ	0xFF3
   854                           intcon	equ	0xFF2
   855                           fsr0h	equ	0xFEA
   856                           fsr0l	equ	0xFE9
   857                           wreg	equ	0xFE8
   858                           fsr1h	equ	0xFE2
   859                           fsr1l	equ	0xFE1
   860                           indf2	equ	0xFDF
   861                           fsr2h	equ	0xFDA
   862                           fsr2l	equ	0xFD9
   863                           status	equ	0xFD8
   864                           
   865                           	psect	rparam
   866  0000                     pclatu	equ	0xFFB
   867                           pclath	equ	0xFFA
   868                           tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           prodh	equ	0xFF4
   873                           prodl	equ	0xFF3
   874                           intcon	equ	0xFF2
   875                           fsr0h	equ	0xFEA
   876                           fsr0l	equ	0xFE9
   877                           wreg	equ	0xFE8
   878                           fsr1h	equ	0xFE2
   879                           fsr1l	equ	0xFE1
   880                           indf2	equ	0xFDF
   881                           fsr2h	equ	0xFDA
   882                           fsr2l	equ	0xFD9
   883                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     35      37
    BANK0           160      0       0

Pointer List with Targets:

    sendData@string	PTR unsigned char  size(2) Largest target is 6
		 -> main@data(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_sendData
    _main->_serialSetUp
    _sendData->_sendChar

Critical Paths under _com_link in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _com_link in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0     854
                                             23 COMRAM    12    12      0
                           _sendChar
                           _sendData
                        _serialSetUp
 ---------------------------------------------------------------------------------
 (1) _serialSetUp                                          8     5      3     264
                                             15 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _sendData                                             7     3      4     233
                                             16 COMRAM     7     3      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      15
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _com_link                                            15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sendChar
   _sendData
     _sendChar
   _serialSetUp

 _com_link (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       3        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     23      25       1       38.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25       4        0.0%
DATA                 0      0      25       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Jul 23 14:56:13 2015

            _SSPSTATbits 000FC7                       l30 00F0                       l27 00E6  
   serialSetUp@brg16_bit 0013                      l115 0218                      _PR2 000FCB  
           __CFG_BORV$19 000000                      prod 000FF3      serialSetUp@brgh_bit 0010  
     serialSetUp@spbrg16 0011                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000                     l1121 0194                     l1131 01BA  
                   l1123 019E                     l1143 01F0                     l1129 01B0  
                   l1139 01D8                     l1171 0134                     l1173 013C  
                   l1181 015A                     l1149 00B6                     l1175 0140  
                   l1177 014C                     l1179 0154                     _RCIF 007CF5  
                   i2l44 0060                     _TMR3 000FB2                     _main 009E  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr0l 000FE9  
                   fsr2h 000FDA                     fsr1l 000FE1                     indf2 000FDF  
                   fsr2l 000FD9                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 009A            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000010                    ?_main 0001  
                  _RCREG 000FAE           __CFG_BBSIZ$OFF 000000                    _RCSTA 000FAB  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _SPBRG 000FAF  
                  _TXREG 000FAD                    _TXSTA 000FAC           __CFG_FCMEN$OFF 000000  
                  main@i 0023                    tablat 000FF5                    status 000FD8  
         __CFG_HFOFST$ON 000000          __initialization 0206             __end_of_main 0178  
         __CFG_PCLKEN$ON 000000                   ??_main 0018            __activetblptr 000002  
         __CFG_PLLEN$OFF 000000                   _CCPR1L 000FBE           __CFG_WDTEN$OFF 000000  
                 _SPBRGH 000FB0                   _SSPBUF 000FC9             ?_serialSetUp 0010  
         __CFG_XINST$OFF 000000         __end_of_com_link 009A           __CFG_STVREN$ON 000000  
       __end_of_sendChar 0222         __end_of_sendData 0206                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 020A            ___rparam_used 000001           __pcstackCOMRAM 0001  
                _BAUDCON 000FB8                  i2u75_47 0054                  _PSTRCON 000FB9  
              ?_com_link 0001                ?_sendChar 0001                ?_sendData 0011  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
   __size_of_serialSetUp 0056                  __pcinit 0206                _ANSELbits 000F7E  
                __ramtop 0100                  __ptext0 009E                  __ptext1 0178  
                __ptext2 01CE                  __ptext3 0214                _T2CONbits 000FCA  
              _T3CONbits 000FB1               ??_com_link 0001     end_of_initialization 020A  
          __Lmediumconst 0000               ??_sendChar 0010               ??_sendData 0015  
              _RCSTAbits 000FAB               _timer3Time 0024                _PORTCbits 000F82  
              _TRISBbits 000F93                _TRISCbits 000F94           sendData@length 0013  
         sendData@string 0011              _CCP1CONbits 000FBD               main@byte_1 0022  
             main@byte_2 0020                _TXSTAbits 000FAC               main@length 001F  
    start_initialization 0206              __pbssCOMRAM 0024        __size_of_com_link 0092  
      __size_of_sendChar 000E        __size_of_sendData 0038                __pintcode 0008  
               _LATCbits 000F8B            ??_serialSetUp 0013                 _PIR2bits 000FA1  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000      __end_of_serialSetUp 01CE               _ANSELHbits 000F7F  
              sendData@i 0016                 _com_link 0008            __size_of_main 00DA  
               _sendChar 0214                 _sendData 01CE                 main@data 0019  
               main@size 0021          _serialSetUp$741 0014          _serialSetUp$742 0016  
             _INTCONbits 000FF2                 intlevel2 0000              _serialSetUp 0178  
            _PSTRCONbits 000FB9              _SSPCON1bits 000FC6        sendChar@character 0010  
