

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Jul 22 21:35:07 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F13K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    19  0000                     _TMR3	set	4018
    20  0000                     _ANSELHbits	set	3967
    21  0000                     _ANSELbits	set	3966
    22  0000                     _BAUDCON	set	4024
    23  0000                     _CCP1CONbits	set	4029
    24  0000                     _CCPR1L	set	4030
    25  0000                     _INTCONbits	set	4082
    26  0000                     _LATCbits	set	3979
    27  0000                     _PIR2bits	set	4001
    28  0000                     _PORTCbits	set	3970
    29  0000                     _PR2	set	4043
    30  0000                     _PSTRCON	set	4025
    31  0000                     _PSTRCONbits	set	4025
    32  0000                     _RCREG	set	4014
    33  0000                     _RCSTA	set	4011
    34  0000                     _RCSTAbits	set	4011
    35  0000                     _SPBRG	set	4015
    36  0000                     _SPBRGH	set	4016
    37  0000                     _SSPBUF	set	4041
    38  0000                     _SSPCON1bits	set	4038
    39  0000                     _SSPSTATbits	set	4039
    40  0000                     _T2CONbits	set	4042
    41  0000                     _T3CONbits	set	4017
    42  0000                     _TMR0H	set	4055
    43  0000                     _TMR0L	set	4054
    44  0000                     _TRISBbits	set	3987
    45  0000                     _TRISCbits	set	3988
    46  0000                     _TXREG	set	4013
    47  0000                     _TXSTA	set	4012
    48  0000                     _TXSTAbits	set	4012
    49  0000                     _RCIF	set	31989
    50                           
    51 ;;
    52 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
    53 ;;
    54 ;; *************** function _main *****************
    55 ;; Defined at:
    56 ;;		line 49 in file "main.c"
    57 ;; Parameters:    Size  Location     Type
    58 ;;		None
    59 ;; Auto vars:     Size  Location     Type
    60 ;;  my_data        32   32[COMRAM] struct spi_receive_buffe
    61 ;;  i               1   31[COMRAM] unsigned char 
    62 ;; Return value:  Size  Location     Type
    63 ;;                  2   16[None  ] int 
    64 ;; Registers used:
    65 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    66 ;; Tracked objects:
    67 ;;		On entry : 0/0
    68 ;;		On exit  : 0/0
    69 ;;		Unchanged: 0/0
    70 ;; Data sizes:     COMRAM   BANK0
    71 ;;      Params:         0       0
    72 ;;      Locals:        33       0
    73 ;;      Temps:          3       0
    74 ;;      Totals:        36       0
    75 ;;Total ram usage:       36 bytes
    76 ;; Hardware stack levels required when called:    4
    77 ;; This function calls:
    78 ;;		_sendChar
    79 ;;		_serialSetUp
    80 ;;		_set_spi
    81 ;;		_slave_receive_data
    82 ;; This function is called by:
    83 ;;		Startup code after reset
    84 ;; This function uses a non-reentrant model
    85 ;;
    86                           
    87                           	psect	text0
    88  0000A0                     __ptext0:
    89                           	opt stack 0
    90  0000A0                     _main:
    91                           	opt stack 27
    92                           
    93                           ;main.c: 87: serialSetUp(1, 1, 0x81);
    94                           
    95                           ;incstack = 0
    96  0000A0  0E01               	movlw	1
    97  0000A2  6E10               	movwf	serialSetUp@brgh_bit,c
    98  0000A4  0E00               	movlw	0
    99  0000A6  6E12               	movwf	serialSetUp@spbrg16+1,c
   100  0000A8  0E81               	movlw	129
   101  0000AA  6E11               	movwf	serialSetUp@spbrg16,c
   102  0000AC  0E01               	movlw	1
   103  0000AE  EC3B  F001         	call	_serialSetUp
   104                           
   105                           ;main.c: 88: sendChar('a');
   106  0000B2  0E61               	movlw	97
   107  0000B4  EC73  F001         	call	_sendChar
   108                           
   109                           ;main.c: 89: struct spi_receive_buffer my_data = {0, 0};
   110  0000B8  EE20  F060         	lfsr	2,main@F3924
   111  0000BC  EE10  F021         	lfsr	1,main@my_data
   112  0000C0  0E1F               	movlw	31
   113  0000C2                     u721:
   114  0000C2  CFDB FFE3          	movff	plusw2,plusw1
   115  0000C6  06E8               	decf	wreg,f,c
   116  0000C8  E2FC               	bc	u721
   117                           
   118                           ;main.c: 91: set_spi(SM_NSS, IDLE_LOW, IDLE_ACTIVE, MIDDLE);
   119  0000CA  0E00               	movlw	0
   120  0000CC  6E10               	movwf	set_spi@polarity,c
   121  0000CE  0E00               	movlw	0
   122  0000D0  6E11               	movwf	set_spi@selection,c
   123  0000D2  0E00               	movlw	0
   124  0000D4  6E12               	movwf	set_spi@sample,c
   125  0000D6  0E05               	movlw	5
   126  0000D8  EC0E  F001         	call	_set_spi
   127                           
   128                           ;main.c: 92: char i = 0;
   129  0000DC  0E00               	movlw	0
   130  0000DE  6E20               	movwf	main@i,c
   131  0000E0  D000               	goto	l1180
   132  0000E2                     l1180:
   133                           
   134                           ;main.c: 95: slave_receive_data(&my_data);
   135  0000E2  0E21               	movlw	low main@my_data
   136  0000E4  6E18               	movwf	slave_receive_data@buffer,c
   137  0000E6  0E00               	movlw	high main@my_data
   138  0000E8  6E19               	movwf	slave_receive_data@buffer+1,c
   139  0000EA  ECDC  F000         	call	_slave_receive_data	;wreg free
   140                           
   141                           ;main.c: 96: for(i = 0; i < my_data.length; i++) {
   142  0000EE  0E00               	movlw	0
   143  0000F0  6E20               	movwf	main@i,c
   144  0000F2  D00D               	goto	l1188
   145  0000F4                     l1184:
   146                           
   147                           ;main.c: 97: sendChar(my_data.buffer[i]);
   148  0000F4  5020               	movf	main@i,w,c
   149  0000F6  0D01               	mullw	1
   150  0000F8  0E21               	movlw	low main@my_data
   151  0000FA  24F3               	addwf	prodl,w,c
   152  0000FC  6ED9               	movwf	fsr2l,c
   153  0000FE  0E00               	movlw	high main@my_data
   154  000100  20F4               	addwfc	prodh,w,c
   155  000102  6EDA               	movwf	fsr2h,c
   156  000104  50DF               	movf	indf2,w,c
   157  000106  EC73  F001         	call	_sendChar
   158  00010A  2A20               	incf	main@i,f,c
   159  00010C  D000               	goto	l1188
   160  00010E                     l1188:
   161  00010E  5020               	movf	main@i,w,c
   162  000110  6E1D               	movwf	??_main& (0+255),c
   163  000112  6A1E               	clrf	(??_main+1)& (0+255),c
   164  000114  503F               	movf	main@my_data+30,w,c
   165  000116  5C1D               	subwf	??_main,w,c
   166  000118  501E               	movf	??_main+1,w,c
   167  00011A  0A80               	xorlw	128
   168  00011C  6E1F               	movwf	(??_main+2)& (0+255),c
   169  00011E  5040               	movf	main@my_data+31,w,c
   170  000120  0A80               	xorlw	128
   171  000122  581F               	subwfb	(??_main+2)& (0+255),w,c
   172  000124  B0D8               	btfsc	status,0,c
   173  000126  D7DD               	goto	l1180
   174  000128  D7E5               	goto	l1184
   175  00012A  D7DB               	goto	l1180
   176                           
   177                           ;main.c: 98: }
   178                           ;main.c: 99: }
   179                           ;main.c: 102: return (0);
   180                           ;	Return value of _main is never used
   181  00012C  EF4E  F000         	goto	start
   182  000130                     __end_of_main:
   183                           	opt stack 0
   184                           prodh	equ	0xFF4
   185                           prodl	equ	0xFF3
   186                           wreg	equ	0xFE8
   187                           plusw1	equ	0xFE3
   188                           indf2	equ	0xFDF
   189                           plusw2	equ	0xFDB
   190                           fsr2h	equ	0xFDA
   191                           fsr2l	equ	0xFD9
   192                           status	equ	0xFD8
   193                           
   194                           	psect	cinit
   195  0002CC                     __pcinit:
   196                           	opt stack 0
   197  0002CC                     start_initialization:
   198                           	opt stack 0
   199  0002CC                     __initialization:
   200                           	opt stack 0
   201                           
   202                           ; Clear objects allocated to BANK0 (32 bytes)
   203  0002CC  EE00  F060         	lfsr	0,__pbssBANK0
   204  0002D0  0E20               	movlw	32
   205  0002D2                     clear_0:
   206  0002D2  6AEE               	clrf	postinc0,c
   207  0002D4  06E8               	decf	wreg,f,c
   208  0002D6  E1FD               	bnz	clear_0
   209                           
   210                           ; Clear objects allocated to COMRAM (2 bytes)
   211  0002D8  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
   212  0002DA  6A41               	clrf	__pbssCOMRAM& (0+255),c
   213  0002DC                     end_of_initialization:
   214                           	opt stack 0
   215  0002DC                     __end_of__initialization:
   216                           	opt stack 0
   217  0002DC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   218  0002DE  6EF8               	movwf	tblptru,c
   219  0002E0  0100               	movlb	0
   220  0002E2  EF50  F000         	goto	_main	;jump to C main() function
   221                           tblptru	equ	0xFF8
   222                           prodh	equ	0xFF4
   223                           prodl	equ	0xFF3
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           plusw1	equ	0xFE3
   227                           indf2	equ	0xFDF
   228                           plusw2	equ	0xFDB
   229                           fsr2h	equ	0xFDA
   230                           fsr2l	equ	0xFD9
   231                           status	equ	0xFD8
   232                           
   233                           	psect	bssCOMRAM
   234  000041                     __pbssCOMRAM:
   235                           	opt stack 0
   236  000041                     _timer3Time:
   237                           	opt stack 0
   238  000041                     	ds	2
   239                           tblptru	equ	0xFF8
   240                           prodh	equ	0xFF4
   241                           prodl	equ	0xFF3
   242                           postinc0	equ	0xFEE
   243                           wreg	equ	0xFE8
   244                           plusw1	equ	0xFE3
   245                           indf2	equ	0xFDF
   246                           plusw2	equ	0xFDB
   247                           fsr2h	equ	0xFDA
   248                           fsr2l	equ	0xFD9
   249                           status	equ	0xFD8
   250                           
   251                           	psect	bssBANK0
   252  000060                     __pbssBANK0:
   253                           	opt stack 0
   254  000060                     main@F3924:
   255                           	opt stack 0
   256  000060                     	ds	32
   257                           tblptru	equ	0xFF8
   258                           prodh	equ	0xFF4
   259                           prodl	equ	0xFF3
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           plusw1	equ	0xFE3
   263                           indf2	equ	0xFDF
   264                           plusw2	equ	0xFDB
   265                           fsr2h	equ	0xFDA
   266                           fsr2l	equ	0xFD9
   267                           status	equ	0xFD8
   268                           
   269                           	psect	cstackCOMRAM
   270  000001                     __pcstackCOMRAM:
   271                           	opt stack 0
   272  000001                     i2sendChar@character:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x0
   276  000001                     	ds	1
   277  000002                     ??_com_link:
   278                           
   279                           ; 0 bytes @ 0x1
   280  000002                     	ds	14
   281  000010                     serialSetUp@brgh_bit:
   282                           	opt stack 0
   283  000010                     sendChar@character:
   284                           	opt stack 0
   285  000010                     set_spi@polarity:
   286                           	opt stack 0
   287  000010                     reassemble_packet@buffer:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0xF
   291  000010                     	ds	1
   292  000011                     set_spi@selection:
   293                           	opt stack 0
   294  000011                     serialSetUp@spbrg16:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x10
   298  000011                     	ds	1
   299  000012                     reassemble_packet@size:
   300                           	opt stack 0
   301  000012                     set_spi@sample:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x11
   305  000012                     	ds	1
   306  000013                     ??_reassemble_packet:
   307  000013                     serialSetUp@brg16_bit:
   308                           	opt stack 0
   309  000013                     set_spi@mode:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x12
   313  000013                     	ds	1
   314  000014                     _serialSetUp$760:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x13
   318  000014                     	ds	1
   319  000015                     reassemble_packet@byte_1:
   320                           	opt stack 0
   321                           
   322                           ; 1 bytes @ 0x14
   323  000015                     	ds	1
   324  000016                     reassemble_packet@byte_2:
   325                           	opt stack 0
   326  000016                     _serialSetUp$761:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0x15
   330  000016                     	ds	1
   331  000017                     reassemble_packet@i:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x16
   335  000017                     	ds	1
   336  000018                     slave_receive_data@buffer:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x17
   340  000018                     	ds	2
   341  00001A                     slave_receive_data@receive:
   342                           	opt stack 0
   343                           
   344                           ; 1 bytes @ 0x19
   345  00001A                     	ds	1
   346  00001B                     slave_receive_data@size:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x1A
   350  00001B                     	ds	1
   351  00001C                     slave_receive_data@i:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x1B
   355  00001C                     	ds	1
   356  00001D                     ??_main:
   357                           
   358                           ; 0 bytes @ 0x1C
   359  00001D                     	ds	3
   360  000020                     main@i:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1F
   364  000020                     	ds	1
   365  000021                     main@my_data:
   366                           	opt stack 0
   367                           
   368                           ; 32 bytes @ 0x20
   369  000021                     	ds	32
   370                           tblptru	equ	0xFF8
   371                           prodh	equ	0xFF4
   372                           prodl	equ	0xFF3
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           plusw1	equ	0xFE3
   376                           indf2	equ	0xFDF
   377                           plusw2	equ	0xFDB
   378                           fsr2h	equ	0xFDA
   379                           fsr2l	equ	0xFD9
   380                           status	equ	0xFD8
   381                           
   382 ;; *************** function _slave_receive_data *****************
   383 ;; Defined at:
   384 ;;		line 90 in file "../TorqueGriperSecondPIC.X/spi.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;  buffer          2   23[COMRAM] PTR struct spi_receive_b
   387 ;;		 -> main@my_data(32), 
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  i               1   27[COMRAM] unsigned char 
   390 ;;  size            1   26[COMRAM] unsigned char 
   391 ;;  receive         1   25[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;		None               void
   394 ;; Registers used:
   395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0
   401 ;;      Params:         2       0
   402 ;;      Locals:         3       0
   403 ;;      Temps:          0       0
   404 ;;      Totals:         5       0
   405 ;;Total ram usage:        5 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    3
   408 ;; This function calls:
   409 ;;		_reassemble_packet
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text1
   416  0001B8                     __ptext1:
   417                           	opt stack 0
   418  0001B8                     _slave_receive_data:
   419                           	opt stack 27
   420                           
   421                           ;spi.c: 92: if (SSPSTATbits.BF){
   422                           
   423                           ;incstack = 0
   424  0001B8  A0C7               	btfss	4039,0,c	;volatile
   425  0001BA  0012               	return	
   426                           
   427                           ;spi.c: 93: unsigned char receive = SSPBUF;
   428  0001BC  CFC9 F01A          	movff	4041,slave_receive_data@receive	;volatile
   429                           
   430                           ;spi.c: 94: if ((receive & 0xF0) == 0xA0){
   431  0001C0  501A               	movf	slave_receive_data@receive,w,c
   432  0001C2  0BF0               	andlw	240
   433  0001C4  0AA0               	xorlw	160
   434  0001C6  A4D8               	btfss	status,2,c
   435  0001C8  0012               	return	
   436                           
   437                           ;spi.c: 95: char size = (receive & 0x0F) * 2;
   438  0001CA  501A               	movf	slave_receive_data@receive,w,c
   439  0001CC  0B0F               	andlw	15
   440  0001CE  0D02               	mullw	2
   441  0001D0  CFF3 F01B          	movff	prodl,slave_receive_data@size
   442                           
   443                           ;spi.c: 96: char i = 0;
   444  0001D4  0E00               	movlw	0
   445  0001D6  6E1C               	movwf	slave_receive_data@i,c
   446                           
   447                           ;spi.c: 97: for (i = 0; i < size; i++) {
   448  0001D8  0E00               	movlw	0
   449  0001DA  6E1C               	movwf	slave_receive_data@i,c
   450  0001DC  D010               	goto	l1162
   451  0001DE                     l239:
   452                           
   453                           ;spi.c: 98: LATCbits.LATC6 = 1;
   454  0001DE  8C8B               	bsf	3979,6,c	;volatile
   455                           
   456                           ;spi.c: 99: while (!SSPSTATbits.BF);
   457  0001E0  D000               	goto	l240
   458  0001E2                     l240:
   459  0001E2  A0C7               	btfss	4039,0,c	;volatile
   460  0001E4  D7FE               	goto	l240
   461                           
   462                           ;spi.c: 100: buffer->buffer[i] = SSPBUF;
   463  0001E6  501C               	movf	slave_receive_data@i,w,c
   464  0001E8  0D01               	mullw	1
   465  0001EA  50F3               	movf	prodl,w,c
   466  0001EC  2418               	addwf	slave_receive_data@buffer,w,c
   467  0001EE  6ED9               	movwf	fsr2l,c
   468  0001F0  50F4               	movf	prodh,w,c
   469  0001F2  2019               	addwfc	slave_receive_data@buffer+1,w,c
   470  0001F4  6EDA               	movwf	fsr2h,c
   471  0001F6  CFC9 FFDF          	movff	4041,indf2	;volatile
   472  0001FA  2A1C               	incf	slave_receive_data@i,f,c
   473  0001FC  D000               	goto	l1162
   474  0001FE                     l1162:
   475  0001FE  501B               	movf	slave_receive_data@size,w,c
   476  000200  5C1C               	subwf	slave_receive_data@i,w,c
   477  000202  A0D8               	btfss	status,0,c
   478  000204  D7EC               	goto	l239
   479                           
   480                           ;spi.c: 101: }
   481                           ;spi.c: 102: LATCbits.LATC6 = 0;
   482  000206  9C8B               	bcf	3979,6,c	;volatile
   483                           
   484                           ;spi.c: 104: reassemble_packet(buffer, size);
   485  000208  C018  F010         	movff	slave_receive_data@buffer,reassemble_packet@buffer
   486  00020C  C019  F011         	movff	slave_receive_data@buffer+1,reassemble_packet@buffer+1
   487  000210  C01B  F012         	movff	slave_receive_data@size,reassemble_packet@size
   488  000214  EC98  F000         	call	_reassemble_packet	;wreg free
   489  000218  0012               	return	
   490  00021A  0012               	return		;funcret
   491  00021C                     __end_of_slave_receive_data:
   492                           	opt stack 0
   493                           tblptru	equ	0xFF8
   494                           prodh	equ	0xFF4
   495                           prodl	equ	0xFF3
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           plusw1	equ	0xFE3
   499                           indf2	equ	0xFDF
   500                           plusw2	equ	0xFDB
   501                           fsr2h	equ	0xFDA
   502                           fsr2l	equ	0xFD9
   503                           status	equ	0xFD8
   504                           
   505 ;; *************** function _reassemble_packet *****************
   506 ;; Defined at:
   507 ;;		line 4 in file "../TorqueGriperSecondPIC.X/spi.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;  buffer          2   15[COMRAM] PTR struct spi_receive_b
   510 ;;		 -> main@my_data(32), 
   511 ;;  size            1   17[COMRAM] unsigned char 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  byte_2          1   21[COMRAM] unsigned char 
   514 ;;  byte_1          1   20[COMRAM] unsigned char 
   515 ;;  i               1   22[COMRAM] unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;		None               void
   518 ;; Registers used:
   519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0
   525 ;;      Params:         3       0
   526 ;;      Locals:         3       0
   527 ;;      Temps:          2       0
   528 ;;      Totals:         8       0
   529 ;;Total ram usage:        8 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; Hardware stack levels required when called:    2
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_slave_receive_data
   536 ;;		_master_receive_data
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text2
   541  000130                     __ptext2:
   542                           	opt stack 0
   543  000130                     _reassemble_packet:
   544                           	opt stack 27
   545                           
   546                           ;spi.c: 6: char i;
   547                           ;spi.c: 8: for (i = 0; i < size; i += 2) {
   548                           
   549                           ;incstack = 0
   550  000130  0E00               	movlw	0
   551  000132  6E17               	movwf	reassemble_packet@i,c
   552  000134  D02E               	goto	l1102
   553  000136                     l1094:
   554                           
   555                           ;spi.c: 9: unsigned char byte_1 = buffer->buffer[i];
   556  000136  5017               	movf	reassemble_packet@i,w,c
   557  000138  0D01               	mullw	1
   558  00013A  50F3               	movf	prodl,w,c
   559  00013C  2410               	addwf	reassemble_packet@buffer,w,c
   560  00013E  6ED9               	movwf	fsr2l,c
   561  000140  50F4               	movf	prodh,w,c
   562  000142  2011               	addwfc	reassemble_packet@buffer+1,w,c
   563  000144  6EDA               	movwf	fsr2h,c
   564  000146  50DF               	movf	indf2,w,c
   565  000148  6E15               	movwf	reassemble_packet@byte_1,c
   566                           
   567                           ;spi.c: 10: unsigned char byte_2 = buffer->buffer[i + 1];
   568  00014A  5017               	movf	reassemble_packet@i,w,c
   569  00014C  6E13               	movwf	??_reassemble_packet& (0+255),c
   570  00014E  6A14               	clrf	(??_reassemble_packet+1)& (0+255),c
   571  000150  0E01               	movlw	1
   572  000152  2613               	addwf	??_reassemble_packet,f,c
   573  000154  0E00               	movlw	0
   574  000156  2214               	addwfc	??_reassemble_packet+1,f,c
   575  000158  5013               	movf	??_reassemble_packet,w,c
   576  00015A  2410               	addwf	reassemble_packet@buffer,w,c
   577  00015C  6ED9               	movwf	fsr2l,c
   578  00015E  5014               	movf	??_reassemble_packet+1,w,c
   579  000160  2011               	addwfc	reassemble_packet@buffer+1,w,c
   580  000162  6EDA               	movwf	fsr2h,c
   581  000164  50DF               	movf	indf2,w,c
   582  000166  6E16               	movwf	reassemble_packet@byte_2,c
   583                           
   584                           ;spi.c: 11: buffer->buffer[i >> 1] = byte_1 << 4 | (byte_2 & 0x0F);
   585  000168  C017  F013         	movff	reassemble_packet@i,??_reassemble_packet
   586  00016C  90D8               	bcf	status,0,c
   587  00016E  3213               	rrcf	??_reassemble_packet,f,c
   588  000170  5013               	movf	??_reassemble_packet,w,c
   589  000172  2410               	addwf	reassemble_packet@buffer,w,c
   590  000174  6ED9               	movwf	fsr2l,c
   591  000176  0E00               	movlw	0
   592  000178  2011               	addwfc	reassemble_packet@buffer+1,w,c
   593  00017A  6EDA               	movwf	fsr2h,c
   594  00017C  C016  F014         	movff	reassemble_packet@byte_2,??_reassemble_packet+1
   595  000180  0E0F               	movlw	15
   596  000182  1614               	andwf	??_reassemble_packet+1,f,c
   597  000184  3815               	swapf	reassemble_packet@byte_1,w,c
   598  000186  0BF0               	andlw	240
   599  000188  1014               	iorwf	??_reassemble_packet+1,w,c
   600  00018A  6EDF               	movwf	indf2,c
   601  00018C  0E02               	movlw	2
   602  00018E  2617               	addwf	reassemble_packet@i,f,c
   603  000190  D000               	goto	l1102
   604  000192                     l1102:
   605  000192  5012               	movf	reassemble_packet@size,w,c
   606  000194  5C17               	subwf	reassemble_packet@i,w,c
   607  000196  A0D8               	btfss	status,0,c
   608  000198  D7CE               	goto	l1094
   609                           
   610                           ;spi.c: 12: }
   611                           ;spi.c: 14: buffer->length = i >> 1;
   612  00019A  90D8               	bcf	status,0,c
   613  00019C  3017               	rrcf	reassemble_packet@i,w,c
   614  00019E  6E13               	movwf	??_reassemble_packet& (0+255),c
   615  0001A0  6A14               	clrf	(??_reassemble_packet+1)& (0+255),c
   616  0001A2  EE20 F01E          	lfsr	2,30
   617  0001A6  5010               	movf	reassemble_packet@buffer,w,c
   618  0001A8  26D9               	addwf	fsr2l,f,c
   619  0001AA  5011               	movf	reassemble_packet@buffer+1,w,c
   620  0001AC  22DA               	addwfc	fsr2h,f,c
   621  0001AE  C013  FFDE         	movff	??_reassemble_packet,postinc2
   622  0001B2  C014  FFDD         	movff	??_reassemble_packet+1,postdec2
   623  0001B6  0012               	return		;funcret
   624  0001B8                     __end_of_reassemble_packet:
   625                           	opt stack 0
   626                           tblptru	equ	0xFF8
   627                           prodh	equ	0xFF4
   628                           prodl	equ	0xFF3
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           plusw1	equ	0xFE3
   632                           indf2	equ	0xFDF
   633                           postinc2	equ	0xFDE
   634                           postdec2	equ	0xFDD
   635                           plusw2	equ	0xFDB
   636                           fsr2h	equ	0xFDA
   637                           fsr2l	equ	0xFD9
   638                           status	equ	0xFD8
   639                           
   640 ;; *************** function _set_spi *****************
   641 ;; Defined at:
   642 ;;		line 17 in file "../TorqueGriperSecondPIC.X/spi.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;  mode            1    wreg     enum E3059
   645 ;;  polarity        1   15[COMRAM] enum E3066
   646 ;;  selection       1   16[COMRAM] enum E3069
   647 ;;  sample          1   17[COMRAM] enum E3072
   648 ;; Auto vars:     Size  Location     Type
   649 ;;  mode            1   18[COMRAM] enum E3059
   650 ;; Return value:  Size  Location     Type
   651 ;;		None               void
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0
   659 ;;      Params:         3       0
   660 ;;      Locals:         1       0
   661 ;;      Temps:          0       0
   662 ;;      Totals:         4       0
   663 ;;Total ram usage:        4 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    2
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_main
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text3
   674  00021C                     __ptext3:
   675                           	opt stack 0
   676  00021C                     _set_spi:
   677                           	opt stack 28
   678                           
   679                           ;incstack = 0
   680                           ;set_spi@mode stored from wreg
   681  00021C  6E13               	movwf	set_spi@mode,c
   682                           
   683                           ;spi.c: 20: TRISCbits.RC7 = 0;
   684  00021E  9E94               	bcf	3988,7,c	;volatile
   685                           
   686                           ;spi.c: 22: SSPCON1bits.SSPM = mode;
   687  000220  50C6               	movf	4038,w,c	;volatile
   688  000222  1813               	xorwf	set_spi@mode,w,c
   689  000224  0BF0               	andlw	-16
   690  000226  1813               	xorwf	set_spi@mode,w,c
   691  000228  6EC6               	movwf	4038,c	;volatile
   692                           
   693                           ;spi.c: 23: SSPCON1bits.CKP = polarity;
   694  00022A  B010               	btfsc	set_spi@polarity,0,c
   695  00022C  D002               	bra	u615
   696  00022E  98C6               	bcf	4038,4,c	;volatile
   697  000230  D001               	bra	u616
   698  000232                     u615:
   699  000232  88C6               	bsf	4038,4,c	;volatile
   700  000234                     u616:
   701                           
   702                           ;spi.c: 24: SSPSTATbits.SMP = sample;
   703  000234  B012               	btfsc	set_spi@sample,0,c
   704  000236  D002               	bra	u625
   705  000238  9EC7               	bcf	4039,7,c	;volatile
   706  00023A  D001               	bra	u626
   707  00023C                     u625:
   708  00023C  8EC7               	bsf	4039,7,c	;volatile
   709  00023E                     u626:
   710                           
   711                           ;spi.c: 26: if (mode == SM_NSS || mode == SM_SS) {
   712  00023E  0E05               	movlw	5
   713  000240  1813               	xorwf	set_spi@mode,w,c
   714  000242  B4D8               	btfsc	status,2,c
   715  000244  D004               	goto	l201
   716  000246  0E04               	movlw	4
   717  000248  1813               	xorwf	set_spi@mode,w,c
   718  00024A  A4D8               	btfss	status,2,c
   719  00024C  D009               	goto	l199
   720  00024E                     l201:
   721                           
   722                           ;spi.c: 27: TRISBbits.RB6 = 1;
   723  00024E  8C93               	bsf	3987,6,c	;volatile
   724                           
   725                           ;spi.c: 28: if (mode == SM_SS)
   726  000250  0E04               	movlw	4
   727  000252  1813               	xorwf	set_spi@mode,w,c
   728  000254  B4D8               	btfsc	status,2,c
   729                           
   730                           ;spi.c: 29: TRISCbits.RC6 = 1;
   731  000256  8C94               	bsf	3988,6,c	;volatile
   732                           
   733                           ;spi.c: 30: SSPSTATbits.CKE = 0;
   734  000258  9CC7               	bcf	4039,6,c	;volatile
   735                           
   736                           ;spi.c: 31: TRISCbits.RC6 = 0;
   737  00025A  9C94               	bcf	3988,6,c	;volatile
   738                           
   739                           ;spi.c: 32: LATCbits.LATC6 = 0;
   740  00025C  9C8B               	bcf	3979,6,c	;volatile
   741                           
   742                           ;spi.c: 33: } else {
   743  00025E  D008               	goto	l203
   744  000260                     l199:
   745                           
   746                           ;spi.c: 34: TRISBbits.RB6 = 0;
   747  000260  9C93               	bcf	3987,6,c	;volatile
   748                           
   749                           ;spi.c: 35: TRISCbits.RC6 = 1;
   750  000262  8C94               	bsf	3988,6,c	;volatile
   751                           
   752                           ;spi.c: 36: ANSELHbits.ANS8 = 0;
   753  000264  907F               	bcf	3967,0,c	;volatile
   754                           
   755                           ;spi.c: 37: SSPSTATbits.CKE = selection;
   756  000266  B011               	btfsc	set_spi@selection,0,c
   757  000268  D002               	bra	u665
   758  00026A  9CC7               	bcf	4039,6,c	;volatile
   759  00026C  D001               	bra	u666
   760  00026E                     u665:
   761  00026E  8CC7               	bsf	4039,6,c	;volatile
   762  000270                     u666:
   763  000270                     l203:
   764                           
   765                           ;spi.c: 38: }
   766                           ;spi.c: 40: ANSELHbits.ANS10 = 0;
   767  000270  947F               	bcf	3967,2,c	;volatile
   768                           
   769                           ;spi.c: 42: SSPCON1bits.SSPEN = 0x1;
   770  000272  8AC6               	bsf	4038,5,c	;volatile
   771  000274  0012               	return		;funcret
   772  000276                     __end_of_set_spi:
   773                           	opt stack 0
   774                           tblptru	equ	0xFF8
   775                           prodh	equ	0xFF4
   776                           prodl	equ	0xFF3
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           plusw1	equ	0xFE3
   780                           indf2	equ	0xFDF
   781                           postinc2	equ	0xFDE
   782                           postdec2	equ	0xFDD
   783                           plusw2	equ	0xFDB
   784                           fsr2h	equ	0xFDA
   785                           fsr2l	equ	0xFD9
   786                           status	equ	0xFD8
   787                           
   788 ;; *************** function _serialSetUp *****************
   789 ;; Defined at:
   790 ;;		line 23 in file "serialprotocol.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  brg16_bit       1    wreg     unsigned char 
   793 ;;  brgh_bit        1   15[COMRAM] unsigned char 
   794 ;;  spbrg16         2   16[COMRAM] unsigned int 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  brg16_bit       1   18[COMRAM] unsigned char 
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, status,2
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0
   806 ;;      Params:         3       0
   807 ;;      Locals:         5       0
   808 ;;      Temps:          0       0
   809 ;;      Totals:         8       0
   810 ;;Total ram usage:        8 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    2
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text4
   821  000276                     __ptext4:
   822                           	opt stack 0
   823  000276                     _serialSetUp:
   824                           	opt stack 28
   825                           
   826                           ;incstack = 0
   827                           ;serialSetUp@brg16_bit stored from wreg
   828  000276  6E13               	movwf	serialSetUp@brg16_bit,c
   829                           
   830                           ;serialprotocol.c: 26: ANSELbits.ANS5 = 0;
   831  000278  9A7E               	bcf	3966,5,c	;volatile
   832                           
   833                           ;serialprotocol.c: 27: ANSELHbits.ANS11 = 0;
   834  00027A  967F               	bcf	3967,3,c	;volatile
   835                           
   836                           ;serialprotocol.c: 29: TRISBbits.RB5 = 1;
   837  00027C  8A93               	bsf	3987,5,c	;volatile
   838                           
   839                           ;serialprotocol.c: 30: TRISBbits.RB7 = 0;
   840  00027E  9E93               	bcf	3987,7,c	;volatile
   841                           
   842                           ;serialprotocol.c: 31: TRISCbits.RC0 = 0;
   843  000280  9094               	bcf	3988,0,c	;volatile
   844                           
   845                           ;serialprotocol.c: 32: TRISCbits.RC1 = 1;
   846  000282  8294               	bsf	3988,1,c	;volatile
   847                           
   848                           ;serialprotocol.c: 34: BAUDCON = (brg16_bit) ? 0x08 : 0x00;
   849  000284  5013               	movf	serialSetUp@brg16_bit,w,c
   850  000286  A4D8               	btfss	status,2,c
   851  000288  D004               	goto	l1112
   852  00028A  0E00               	movlw	0
   853  00028C  6E15               	movwf	_serialSetUp$760+1,c
   854  00028E  0E00               	movlw	0
   855  000290  D003               	goto	L1
   856  000292                     l1112:
   857  000292  0E00               	movlw	0
   858  000294  6E15               	movwf	_serialSetUp$760+1,c
   859  000296  0E08               	movlw	8
   860  000298                     L1:
   861  000298  6E14               	movwf	_serialSetUp$760,c
   862  00029A  D000               	goto	l1114
   863  00029C                     l1114:
   864  00029C  C014  FFB8         	movff	_serialSetUp$760,4024	;volatile
   865                           
   866                           ;serialprotocol.c: 35: TXSTA = (brgh_bit) ? 0x24: 0x20;
   867  0002A0  5010               	movf	serialSetUp@brgh_bit,w,c
   868  0002A2  A4D8               	btfss	status,2,c
   869  0002A4  D004               	goto	l1120
   870  0002A6  0E00               	movlw	0
   871  0002A8  6E17               	movwf	_serialSetUp$761+1,c
   872  0002AA  0E20               	movlw	32
   873  0002AC  D003               	goto	L2
   874  0002AE                     l1120:
   875  0002AE  0E00               	movlw	0
   876  0002B0  6E17               	movwf	_serialSetUp$761+1,c
   877  0002B2  0E24               	movlw	36
   878  0002B4                     L2:
   879  0002B4  6E16               	movwf	_serialSetUp$761,c
   880  0002B6  D000               	goto	l1122
   881  0002B8                     l1122:
   882  0002B8  C016  FFAC         	movff	_serialSetUp$761,4012	;volatile
   883                           
   884                           ;serialprotocol.c: 36: SPBRGH = spbrg16 >> 8;
   885  0002BC  5012               	movf	serialSetUp@spbrg16+1,w,c
   886  0002BE  6EB0               	movwf	4016,c	;volatile
   887                           
   888                           ;serialprotocol.c: 37: SPBRG = spbrg16;
   889  0002C0  C011  FFAF         	movff	serialSetUp@spbrg16,4015	;volatile
   890                           
   891                           ;serialprotocol.c: 38: RCSTA = 0x90;
   892  0002C4  0E90               	movlw	144
   893  0002C6  6EAB               	movwf	4011,c	;volatile
   894                           
   895                           ;serialprotocol.c: 42: LATCbits.LATC0 = 1;
   896  0002C8  808B               	bsf	3979,0,c	;volatile
   897  0002CA  0012               	return		;funcret
   898  0002CC                     __end_of_serialSetUp:
   899                           	opt stack 0
   900                           tblptru	equ	0xFF8
   901                           prodh	equ	0xFF4
   902                           prodl	equ	0xFF3
   903                           postinc0	equ	0xFEE
   904                           wreg	equ	0xFE8
   905                           plusw1	equ	0xFE3
   906                           indf2	equ	0xFDF
   907                           postinc2	equ	0xFDE
   908                           postdec2	equ	0xFDD
   909                           plusw2	equ	0xFDB
   910                           fsr2h	equ	0xFDA
   911                           fsr2l	equ	0xFD9
   912                           status	equ	0xFD8
   913                           
   914 ;; *************** function _sendChar *****************
   915 ;; Defined at:
   916 ;;		line 60 in file "serialprotocol.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  character       1    wreg     unsigned char 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  character       1   15[COMRAM] unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0
   930 ;;      Params:         0       0
   931 ;;      Locals:         1       0
   932 ;;      Temps:          0       0
   933 ;;      Totals:         1       0
   934 ;;Total ram usage:        1 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    2
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;;		_sendData
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           
   945                           	psect	text5
   946  0002E6                     __ptext5:
   947                           	opt stack 0
   948  0002E6                     _sendChar:
   949                           	opt stack 28
   950                           
   951                           ;incstack = 0
   952                           ;sendChar@character stored from wreg
   953  0002E6  6E10               	movwf	sendChar@character,c
   954                           
   955                           ;serialprotocol.c: 62: while(!TXSTAbits.TRMT);
   956  0002E8  D000               	goto	l100
   957  0002EA                     l100:
   958  0002EA  A2AC               	btfss	4012,1,c	;volatile
   959  0002EC  D7FE               	goto	l100
   960                           
   961                           ;serialprotocol.c: 63: TXREG = character;
   962  0002EE  C010  FFAD         	movff	sendChar@character,4013	;volatile
   963  0002F2  0012               	return		;funcret
   964  0002F4                     __end_of_sendChar:
   965                           	opt stack 0
   966                           tblptru	equ	0xFF8
   967                           prodh	equ	0xFF4
   968                           prodl	equ	0xFF3
   969                           postinc0	equ	0xFEE
   970                           wreg	equ	0xFE8
   971                           plusw1	equ	0xFE3
   972                           indf2	equ	0xFDF
   973                           postinc2	equ	0xFDE
   974                           postdec2	equ	0xFDD
   975                           plusw2	equ	0xFDB
   976                           fsr2h	equ	0xFDA
   977                           fsr2l	equ	0xFD9
   978                           status	equ	0xFD8
   979                           
   980 ;; *************** function _com_link *****************
   981 ;; Defined at:
   982 ;;		line 105 in file "main.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;		None               void
   989 ;; Registers used:
   990 ;;		wreg, status,2, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0
   996 ;;      Params:         0       0
   997 ;;      Locals:         0       0
   998 ;;      Temps:         14       0
   999 ;;      Totals:        14       0
  1000 ;;Total ram usage:       14 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    1
  1003 ;; This function calls:
  1004 ;;		i2_sendChar
  1005 ;; This function is called by:
  1006 ;;		Interrupt level 2
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	intcode
  1011  000008                     __pintcode:
  1012                           	opt stack 0
  1013  000008                     _com_link:
  1014                           	opt stack 27
  1015                           
  1016                           ;incstack = 0
  1017  000008  CFFA F002          	movff	pclath,??_com_link
  1018  00000C  CFFB F003          	movff	pclatu,??_com_link+1
  1019  000010  CFE9 F004          	movff	fsr0l,??_com_link+2
  1020  000014  CFEA F005          	movff	fsr0h,??_com_link+3
  1021  000018  CFE1 F006          	movff	fsr1l,??_com_link+4
  1022  00001C  CFE2 F007          	movff	fsr1h,??_com_link+5
  1023  000020  CFD9 F008          	movff	fsr2l,??_com_link+6
  1024  000024  CFDA F009          	movff	fsr2h,??_com_link+7
  1025  000028  CFF3 F00A          	movff	prodl,??_com_link+8
  1026  00002C  CFF4 F00B          	movff	prodh,??_com_link+9
  1027  000030  CFF6 F00C          	movff	tblptrl,??_com_link+10
  1028  000034  CFF7 F00D          	movff	tblptrh,??_com_link+11
  1029  000038  CFF8 F00E          	movff	tblptru,??_com_link+12
  1030  00003C  CFF5 F00F          	movff	tablat,??_com_link+13
  1031                           
  1032                           ;main.c: 107: if (INTCONbits.TMR0IF && INTCONbits.TMR0IE){
  1033  000040  B4F2               	btfsc	intcon,2,c	;volatile
  1034  000042  AAF2               	btfss	intcon,5,c	;volatile
  1035  000044  D00E               	goto	i2l29
  1036                           
  1037                           ;main.c: 108: TMR0H = 65340 >> 8;
  1038  000046  68D7               	setf	4055,c	;volatile
  1039                           
  1040                           ;main.c: 109: TMR0L = 65340;
  1041  000048  0E3C               	movlw	60
  1042  00004A  6ED6               	movwf	4054,c	;volatile
  1043                           
  1044                           ;main.c: 110: INTCONbits.TMR0IF = 0;
  1045  00004C  94F2               	bcf	intcon,2,c	;volatile
  1046                           
  1047                           ;main.c: 111: sendChar(0x55);
  1048  00004E  0E55               	movlw	85
  1049  000050  EC7A  F001         	call	i2_sendChar
  1050                           
  1051                           ;main.c: 112: sendChar(0xDD);
  1052  000054  0EDD               	movlw	221
  1053  000056  EC7A  F001         	call	i2_sendChar
  1054                           
  1055                           ;main.c: 113: sendChar(0x00);
  1056  00005A  0E00               	movlw	0
  1057  00005C  EC7A  F001         	call	i2_sendChar
  1058  000060  D000               	goto	i2l29
  1059  000062                     i2l29:
  1060  000062  C00F  FFF5         	movff	??_com_link+13,tablat
  1061  000066  C00E  FFF8         	movff	??_com_link+12,tblptru
  1062  00006A  C00D  FFF7         	movff	??_com_link+11,tblptrh
  1063  00006E  C00C  FFF6         	movff	??_com_link+10,tblptrl
  1064  000072  C00B  FFF4         	movff	??_com_link+9,prodh
  1065  000076  C00A  FFF3         	movff	??_com_link+8,prodl
  1066  00007A  C009  FFDA         	movff	??_com_link+7,fsr2h
  1067  00007E  C008  FFD9         	movff	??_com_link+6,fsr2l
  1068  000082  C007  FFE2         	movff	??_com_link+5,fsr1h
  1069  000086  C006  FFE1         	movff	??_com_link+4,fsr1l
  1070  00008A  C005  FFEA         	movff	??_com_link+3,fsr0h
  1071  00008E  C004  FFE9         	movff	??_com_link+2,fsr0l
  1072  000092  C003  FFFB         	movff	??_com_link+1,pclatu
  1073  000096  C002  FFFA         	movff	??_com_link,pclath
  1074  00009A  0011               	retfie		f
  1075  00009C                     __end_of_com_link:
  1076                           	opt stack 0
  1077                           pclatu	equ	0xFFB
  1078                           pclath	equ	0xFFA
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           prodh	equ	0xFF4
  1084                           prodl	equ	0xFF3
  1085                           intcon	equ	0xFF2
  1086                           postinc0	equ	0xFEE
  1087                           fsr0h	equ	0xFEA
  1088                           fsr0l	equ	0xFE9
  1089                           wreg	equ	0xFE8
  1090                           plusw1	equ	0xFE3
  1091                           fsr1h	equ	0xFE2
  1092                           fsr1l	equ	0xFE1
  1093                           indf2	equ	0xFDF
  1094                           postinc2	equ	0xFDE
  1095                           postdec2	equ	0xFDD
  1096                           plusw2	equ	0xFDB
  1097                           fsr2h	equ	0xFDA
  1098                           fsr2l	equ	0xFD9
  1099                           status	equ	0xFD8
  1100                           
  1101 ;; *************** function i2_sendChar *****************
  1102 ;; Defined at:
  1103 ;;		line 60 in file "serialprotocol.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  character       1    wreg     unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  character       1    0[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;		None               void
  1110 ;; Registers used:
  1111 ;;		wreg
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0
  1117 ;;      Params:         0       0
  1118 ;;      Locals:         1       0
  1119 ;;      Temps:          0       0
  1120 ;;      Totals:         1       0
  1121 ;;Total ram usage:        1 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_com_link
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text7
  1131  0002F4                     __ptext7:
  1132                           	opt stack 0
  1133  0002F4                     i2_sendChar:
  1134                           	opt stack 27
  1135                           
  1136                           ;incstack = 0
  1137                           ;i2sendChar@character stored from wreg
  1138  0002F4  6E01               	movwf	i2sendChar@character,c
  1139                           
  1140                           ;serialprotocol.c: 62: while(!TXSTAbits.TRMT);
  1141  0002F6  D000               	goto	i2l100
  1142  0002F8                     i2l100:
  1143  0002F8  A2AC               	btfss	4012,1,c	;volatile
  1144  0002FA  D7FE               	goto	i2l100
  1145                           
  1146                           ;serialprotocol.c: 63: TXREG = character;
  1147  0002FC  C001  FFAD         	movff	i2sendChar@character,4013	;volatile
  1148  000300  0012               	return		;funcret
  1149  000302                     __end_ofi2_sendChar:
  1150                           	opt stack 0
  1151  0000                     pclatu	equ	0xFFB
  1152                           pclath	equ	0xFFA
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           prodh	equ	0xFF4
  1158                           prodl	equ	0xFF3
  1159                           intcon	equ	0xFF2
  1160                           postinc0	equ	0xFEE
  1161                           fsr0h	equ	0xFEA
  1162                           fsr0l	equ	0xFE9
  1163                           wreg	equ	0xFE8
  1164                           plusw1	equ	0xFE3
  1165                           fsr1h	equ	0xFE2
  1166                           fsr1l	equ	0xFE1
  1167                           indf2	equ	0xFDF
  1168                           postinc2	equ	0xFDE
  1169                           postdec2	equ	0xFDD
  1170                           plusw2	equ	0xFDB
  1171                           fsr2h	equ	0xFDA
  1172                           fsr2l	equ	0xFD9
  1173                           status	equ	0xFD8
  1174                           pclatu	equ	0xFFB
  1175                           pclath	equ	0xFFA
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           intcon	equ	0xFF2
  1183                           postinc0	equ	0xFEE
  1184                           fsr0h	equ	0xFEA
  1185                           fsr0l	equ	0xFE9
  1186                           wreg	equ	0xFE8
  1187                           plusw1	equ	0xFE3
  1188                           fsr1h	equ	0xFE2
  1189                           fsr1l	equ	0xFE1
  1190                           indf2	equ	0xFDF
  1191                           postinc2	equ	0xFDE
  1192                           postdec2	equ	0xFDD
  1193                           plusw2	equ	0xFDB
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           status	equ	0xFD8
  1197                           
  1198                           	psect	rparam
  1199  0000                     pclatu	equ	0xFFB
  1200                           pclath	equ	0xFFA
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           prodh	equ	0xFF4
  1206                           prodl	equ	0xFF3
  1207                           intcon	equ	0xFF2
  1208                           postinc0	equ	0xFEE
  1209                           fsr0h	equ	0xFEA
  1210                           fsr0l	equ	0xFE9
  1211                           wreg	equ	0xFE8
  1212                           plusw1	equ	0xFE3
  1213                           fsr1h	equ	0xFE2
  1214                           fsr1l	equ	0xFE1
  1215                           indf2	equ	0xFDF
  1216                           postinc2	equ	0xFDE
  1217                           postdec2	equ	0xFDD
  1218                           plusw2	equ	0xFDB
  1219                           fsr2h	equ	0xFDA
  1220                           fsr2l	equ	0xFD9
  1221                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     64      66
    BANK0           160      0      32

Pointer List with Targets:

    slave_receive_data@buffer	PTR struct spi_receive_buffer size(2) Largest target is 32
		 -> main@my_data(COMRAM[32]), 

    reassemble_packet@buffer	PTR struct spi_receive_buffer size(2) Largest target is 32
		 -> main@my_data(COMRAM[32]), 


Critical Paths under _main in COMRAM

    _main->_slave_receive_data
    _slave_receive_data->_reassemble_packet

Critical Paths under _com_link in COMRAM

    _com_link->i2_sendChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _com_link in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0    1523
                                             28 COMRAM    36    36      0
                           _sendChar
                        _serialSetUp
                            _set_spi
                 _slave_receive_data
 ---------------------------------------------------------------------------------
 (1) _slave_receive_data                                   5     3      2     769
                                             23 COMRAM     5     3      2
                  _reassemble_packet
 ---------------------------------------------------------------------------------
 (2) _reassemble_packet                                    8     5      3     524
                                             15 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _set_spi                                              4     1      3     346
                                             15 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _serialSetUp                                          8     5      3     264
                                             15 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _sendChar                                             1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _com_link                                            14    14      0      22
                                              1 COMRAM    14    14      0
                         i2_sendChar
 ---------------------------------------------------------------------------------
 (4) i2_sendChar                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _sendChar
   _serialSetUp
   _set_spi
   _slave_receive_data
     _reassemble_packet

 _com_link (ROOT)
   i2_sendChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      20       4       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     40      42       1       69.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62       5        0.0%
DATA                 0      0      62       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Jul 22 21:35:07 2015

                _SSPSTATbits 000FC7         serialSetUp@brg16_bit 0013                          l100 02EA  
                        l201 024E                          l203 0270                          l240 01E2  
                        l239 01DE                          l199 0260                          _PR2 000FCB  
                        u615 0232                          u616 0234                          u625 023C  
                        u721 00C2                          u626 023E                          u665 026E  
                        u666 0270                 __CFG_BORV$19 000000                          prod 000FF3  
        serialSetUp@brgh_bit 0010           serialSetUp@spbrg16 0011                          wreg 000FE8  
               __CFG_FOSC$HS 000000                 __CFG_LVP$OFF 000000                         l1102 0192  
                       l1120 02AE                         l1112 0292                         l1122 02B8  
                       l1114 029C                         l1162 01FE                         l1180 00E2  
                       l1094 0136                         l1184 00F4                         l1188 010E  
                       _RCIF 007CF5                         i2l29 0062                         _TMR3 000FB2  
                       _main 00A0                  main@my_data 0021                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       pclat 000FFA                         prodh 000FF4                         prodl 000FF3  
                       start 009C                   i2_sendChar 02F4                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000010                        ?_main 0001  
                      i2l100 02F8                        _RCREG 000FAE               __CFG_BBSIZ$OFF 000000  
                      _RCSTA 000FAB                        _TMR0H 000FD7                        _TMR0L 000FD6  
                      _SPBRG 000FAF                        _TXREG 000FAD                        _TXSTA 000FAC  
             __CFG_FCMEN$OFF 000000                        main@i 0020                        tablat 000FF5  
            __end_of_set_spi 0276                        plusw1 000FE3                        plusw2 000FDB  
                      status 000FD8               __CFG_HFOFST$ON 000000              __initialization 02CC  
               __end_of_main 0130  __size_of_slave_receive_data 0064               __CFG_PCLKEN$ON 000000  
  slave_receive_data@receive 001A                       ??_main 001D                __activetblptr 000002  
             __CFG_PLLEN$OFF 000000                       _CCPR1L 000FBE               __CFG_WDTEN$OFF 000000  
                     _SPBRGH 000FB0                       _SSPBUF 000FC9                  ?i2_sendChar 0001  
               ?_serialSetUp 0010               __CFG_XINST$OFF 000000             __end_of_com_link 009C  
            set_spi@polarity 0010               __CFG_STVREN$ON 000000                       clear_0 02D2  
           __end_of_sendChar 02F4      reassemble_packet@buffer 0010      reassemble_packet@byte_1 0015  
    reassemble_packet@byte_2 0016                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                    ??_set_spi 0013                   __accesstop 0060  
    __end_of__initialization 02DC                ___rparam_used 000001               __pcstackCOMRAM 0001  
         reassemble_packet@i 0017          __size_ofi2_sendChar 000E          slave_receive_data@i 001C  
      reassemble_packet@size 0012                   __pbssBANK0 0060                      _BAUDCON 000FB8  
                    _PSTRCON 000FB9                    ?_com_link 0001                    ?_sendChar 0001  
            __CFG_PWRTEN$OFF 000000                      __Hparam 0000                      __Lparam 0000  
           set_spi@selection 0011         __size_of_serialSetUp 0056                      __pcinit 02CC  
                  _ANSELbits 000F7E                      __ramtop 0100                      __ptext0 00A0  
                    __ptext1 01B8                      __ptext2 0130                      __ptext3 021C  
                    __ptext4 0276                      __ptext5 02E6                      __ptext7 02F4  
                  _T2CONbits 000FCA                    _T3CONbits 000FB1                      _set_spi 021C  
                 ??_com_link 0002         end_of_initialization 02DC       slave_receive_data@size 001B  
                set_spi@mode 0013                __Lmediumconst 0000                 ??i2_sendChar 0001  
                 ??_sendChar 0010   __end_of_slave_receive_data 021C                    _RCSTAbits 000FAB  
                 _timer3Time 0041                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE                    _PORTCbits 000F82                    _TRISBbits 000F93  
                  _TRISCbits 000F94           __end_ofi2_sendChar 0302                  _CCP1CONbits 000FBD  
                  _TXSTAbits 000FAC          start_initialization 02CC                  __pbssCOMRAM 0041  
          __size_of_com_link 0094            _reassemble_packet 0130            __size_of_sendChar 000E  
         ?_reassemble_packet 0010                    __pintcode 0008          ??_reassemble_packet 0013  
        i2sendChar@character 0001                     ?_set_spi 0010    __end_of_reassemble_packet 01B8  
                   _LATCbits 000F8B                ??_serialSetUp 0013                     _PIR2bits 000FA1  
           __CFG_WDTPS$32768 000000                    main@F3924 0060           _slave_receive_data 01B8  
        ?_slave_receive_data 0018     slave_receive_data@buffer 0018                     __Hrparam 0000  
              set_spi@sample 0012                     __Lrparam 0000           __CFG_BOREN$SBORDIS 000000  
       ??_slave_receive_data 001A          __end_of_serialSetUp 02CC                   _ANSELHbits 000F7F  
           __size_of_set_spi 005A                     _com_link 0008   __size_of_reassemble_packet 0088  
              __size_of_main 0090                     _sendChar 02E6              _serialSetUp$760 0014  
            _serialSetUp$761 0016                   _INTCONbits 000FF2                     intlevel2 0000  
                _serialSetUp 0276                  _PSTRCONbits 000FB9                  _SSPCON1bits 000FC6  
          sendChar@character 0010  
