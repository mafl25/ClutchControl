

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Mon Jul 13 19:01:04 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F13K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _ANSELHbits	set	3967
    17  0000                     _BAUDCON	set	4024
    18  0000                     _LATBbits	set	3978
    19  0000                     _PIR2bits	set	4001
    20  0000                     _PORTCbits	set	3970
    21  0000                     _RCREG	set	4014
    22  0000                     _RCSTA	set	4011
    23  0000                     _RCSTAbits	set	4011
    24  0000                     _SPBRG	set	4015
    25  0000                     _SPBRGH	set	4016
    26  0000                     _T3CONbits	set	4017
    27  0000                     _TMR3H	set	4019
    28  0000                     _TMR3L	set	4018
    29  0000                     _TRISBbits	set	3987
    30  0000                     _TRISCbits	set	3988
    31  0000                     _TXREG	set	4013
    32  0000                     _TXSTA	set	4012
    33  0000                     _TXSTAbits	set	4012
    34  0000                     _RCIF	set	31989
    35                           
    36 ;;
    37 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    38 ;;
    39 ;; *************** function _main *****************
    40 ;; Defined at:
    41 ;;		line 44 in file "main.c"
    42 ;; Parameters:    Size  Location     Type
    43 ;;		None
    44 ;; Auto vars:     Size  Location     Type
    45 ;;  data           17   15[COMRAM] struct receiveBuffer
    46 ;;  i               2   13[COMRAM] int 
    47 ;; Return value:  Size  Location     Type
    48 ;;                  2   10[None  ] int 
    49 ;; Registers used:
    50 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
    51 ;; Tracked objects:
    52 ;;		On entry : 0/0
    53 ;;		On exit  : 0/0
    54 ;;		Unchanged: 0/0
    55 ;; Data sizes:     COMRAM   BANK0
    56 ;;      Params:         0       0
    57 ;;      Locals:        19       0
    58 ;;      Temps:          1       0
    59 ;;      Totals:        20       0
    60 ;;Total ram usage:       20 bytes
    61 ;; Hardware stack levels required when called:    2
    62 ;; This function calls:
    63 ;;		_receiveData
    64 ;;		_sendData
    65 ;;		_serialSetUp
    66 ;; This function is called by:
    67 ;;		Startup code after reset
    68 ;; This function uses a non-reentrant model
    69 ;;
    70                           
    71                           	psect	text0
    72  001E80                     __ptext0:
    73                           	opt stack 0
    74  001E80                     _main:
    75                           	opt stack 29
    76                           
    77                           ;main.c: 45: serialSetUp(1, 1, 0x04);
    78                           
    79                           ;incstack = 0
    80  001E80  0E01               	movlw	1
    81  001E82  6E05               	movwf	serialSetUp@brgh_bit,c
    82  001E84  0E00               	movlw	0
    83  001E86  6E07               	movwf	serialSetUp@spbrg16+1,c
    84  001E88  0E04               	movlw	4
    85  001E8A  6E06               	movwf	serialSetUp@spbrg16,c
    86  001E8C  0E01               	movlw	1
    87  001E8E  EC70  F00F         	call	_serialSetUp
    88                           
    89                           ;main.c: 46: _delay((unsigned long)((1)*(20000000/4000.0)));
    90  001E92  0E07               	movlw	7
    91  001E94  6E0D               	movwf	??_main& (0+255),c
    92  001E96  0E7D               	movlw	125
    93  001E98                     u377:
    94  001E98  2EE8               	decfsz	wreg,f,c
    95  001E9A  D7FE               	goto	u377
    96  001E9C  2E0D               	decfsz	??_main& (0+255),f,c
    97  001E9E  D7FC               	goto	u377
    98  001EA0  F000               	nop	
    99                           
   100                           ;main.c: 48: struct receiveBuffer data;
   101                           ;main.c: 49: int i = 0;
   102  001EA2  0E00               	movlw	0
   103  001EA4  6E0F               	movwf	main@i+1,c
   104  001EA6  0E00               	movlw	0
   105  001EA8  6E0E               	movwf	main@i,c
   106  001EAA  D000               	goto	l885
   107  001EAC                     l885:
   108                           
   109                           ;main.c: 53: i = receiveData(&data);
   110  001EAC  0E10               	movlw	low main@data
   111  001EAE  6E01               	movwf	receiveData@buffer,c
   112  001EB0  0E00               	movlw	high main@data
   113  001EB2  6E02               	movwf	receiveData@buffer+1,c
   114  001EB4  ECA2  F00F         	call	_receiveData	;wreg free
   115  001EB8  C001  F00E         	movff	?_receiveData,main@i
   116  001EBC  C002  F00F         	movff	?_receiveData+1,main@i+1
   117                           
   118                           ;main.c: 55: if (i)
   119  001EC0  500E               	movf	main@i,w,c
   120  001EC2  100F               	iorwf	main@i+1,w,c
   121  001EC4  B4D8               	btfsc	status,2,c
   122  001EC6  D7F2               	goto	l885
   123                           
   124                           ;main.c: 56: sendData(data.buffer, data.length);
   125  001EC8  0E10               	movlw	low main@data
   126  001ECA  6E02               	movwf	sendData@string,c
   127  001ECC  0E00               	movlw	high main@data
   128  001ECE  6E03               	movwf	sendData@string+1,c
   129  001ED0  C020  F004         	movff	main@data+16,sendData@length
   130  001ED4  6A05               	clrf	sendData@length+1,c
   131  001ED6  EC24  F00F         	call	_sendData	;wreg free
   132  001EDA  D7E8               	goto	l885
   133                           
   134                           ;main.c: 57: }
   135                           ;main.c: 58: return (0);
   136                           ;	Return value of _main is never used
   137  001EDC  EF00  F000         	goto	start
   138  001EE0                     __end_of_main:
   139                           	opt stack 0
   140                           wreg	equ	0xFE8
   141                           status	equ	0xFD8
   142                           
   143                           	psect	cinit
   144  001E04                     __pcinit:
   145                           	opt stack 0
   146  001E04                     start_initialization:
   147                           	opt stack 0
   148  001E04                     __initialization:
   149                           	opt stack 0
   150                           
   151                           ; Clear objects allocated to COMRAM (2 bytes)
   152  001E04  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
   153  001E06  6A21               	clrf	__pbssCOMRAM& (0+255),c
   154  001E08                     end_of_initialization:
   155                           	opt stack 0
   156  001E08                     __end_of__initialization:
   157                           	opt stack 0
   158  001E08  0100               	movlb	0
   159  001E0A  EF40  F00F         	goto	_main	;jump to C main() function
   160                           wreg	equ	0xFE8
   161                           status	equ	0xFD8
   162                           
   163                           	psect	bssCOMRAM
   164  000021                     __pbssCOMRAM:
   165                           	opt stack 0
   166  000021                     _timer3Time:
   167                           	opt stack 0
   168  000021                     	ds	2
   169                           wreg	equ	0xFE8
   170                           status	equ	0xFD8
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	opt stack 0
   175  000001                     ?_receiveData:
   176                           	opt stack 0
   177  000001                     sendChar@character:
   178                           	opt stack 0
   179  000001                     setTimer3@TMR3Pair:
   180                           	opt stack 0
   181  000001                     receiveData@buffer:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x0
   185  000001                     	ds	1
   186  000002                     sendData@string:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x1
   190  000002                     	ds	1
   191  000003                     ??_receiveData:
   192  000003                     ??_setTimer3:
   193                           
   194                           ; 0 bytes @ 0x2
   195  000003                     	ds	1
   196  000004                     setTimer3@turnOn:
   197                           	opt stack 0
   198  000004                     receiveData@character:
   199                           	opt stack 0
   200  000004                     sendData@length:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x3
   204  000004                     	ds	1
   205  000005                     serialSetUp@brgh_bit:
   206                           	opt stack 0
   207  000005                     receiveData@size:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x4
   211  000005                     	ds	1
   212  000006                     ??_sendData:
   213  000006                     serialSetUp@spbrg16:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x5
   217  000006                     	ds	1
   218  000007                     sendData@i:
   219                           	opt stack 0
   220  000007                     receiveData@i:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x6
   224  000007                     	ds	1
   225  000008                     serialSetUp@brg16_bit:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x7
   229  000008                     	ds	1
   230  000009                     _serialSetUp$614:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x8
   234  000009                     	ds	2
   235  00000B                     _serialSetUp$615:
   236                           	opt stack 0
   237                           
   238                           ; 2 bytes @ 0xA
   239  00000B                     	ds	2
   240  00000D                     ??_main:
   241                           
   242                           ; 0 bytes @ 0xC
   243  00000D                     	ds	1
   244  00000E                     main@i:
   245                           	opt stack 0
   246                           
   247                           ; 2 bytes @ 0xD
   248  00000E                     	ds	2
   249  000010                     main@data:
   250                           	opt stack 0
   251                           
   252                           ; 17 bytes @ 0xF
   253  000010                     	ds	17
   254                           wreg	equ	0xFE8
   255                           status	equ	0xFD8
   256                           
   257 ;; *************** function _serialSetUp *****************
   258 ;; Defined at:
   259 ;;		line 24 in file "serialprotocol.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;  brg16_bit       1    wreg     unsigned char 
   262 ;;  brgh_bit        1    4[COMRAM] unsigned char 
   263 ;;  spbrg16         2    5[COMRAM] unsigned int 
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  brg16_bit       1    7[COMRAM] unsigned char 
   266 ;; Return value:  Size  Location     Type
   267 ;;		None               void
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0
   275 ;;      Params:         3       0
   276 ;;      Locals:         5       0
   277 ;;      Temps:          0       0
   278 ;;      Totals:         8       0
   279 ;;Total ram usage:        8 bytes
   280 ;; Hardware stack levels used:    1
   281 ;; Hardware stack levels required when called:    1
   282 ;; This function calls:
   283 ;;		_setTimer3
   284 ;; This function is called by:
   285 ;;		_main
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text1
   290  001EE0                     __ptext1:
   291                           	opt stack 0
   292  001EE0                     _serialSetUp:
   293                           	opt stack 29
   294                           
   295                           ;incstack = 0
   296                           ;serialSetUp@brg16_bit stored from wreg
   297  001EE0  6E08               	movwf	serialSetUp@brg16_bit,c
   298                           
   299                           ;serialprotocol.c: 27: ANSELHbits.ANS9 = 0;
   300  001EE2  927F               	bcf	3967,1,c	;volatile
   301                           
   302                           ;serialprotocol.c: 28: ANSELHbits.ANS11 = 0;
   303  001EE4  967F               	bcf	3967,3,c	;volatile
   304                           
   305                           ;serialprotocol.c: 30: TRISBbits.RB5 = 1;
   306  001EE6  8A93               	bsf	3987,5,c	;volatile
   307                           
   308                           ;serialprotocol.c: 31: TRISBbits.RB7 = 0;
   309  001EE8  9E93               	bcf	3987,7,c	;volatile
   310                           
   311                           ;serialprotocol.c: 32: TRISBbits.RB6 = 0;
   312  001EEA  9C93               	bcf	3987,6,c	;volatile
   313                           
   314                           ;serialprotocol.c: 33: TRISCbits.RC7 = 1;
   315  001EEC  8E94               	bsf	3988,7,c	;volatile
   316                           
   317                           ;serialprotocol.c: 35: BAUDCON = (brg16_bit) ? 0x08 : 0x00;
   318  001EEE  5008               	movf	serialSetUp@brg16_bit,w,c
   319  001EF0  A4D8               	btfss	status,2,c
   320  001EF2  D004               	goto	l827
   321  001EF4  0E00               	movlw	0
   322  001EF6  6E0A               	movwf	_serialSetUp$614+1,c
   323  001EF8  0E00               	movlw	0
   324  001EFA  D003               	goto	L1
   325  001EFC                     l827:
   326  001EFC  0E00               	movlw	0
   327  001EFE  6E0A               	movwf	_serialSetUp$614+1,c
   328  001F00  0E08               	movlw	8
   329  001F02                     L1:
   330  001F02  6E09               	movwf	_serialSetUp$614,c
   331  001F04  D000               	goto	l829
   332  001F06                     l829:
   333  001F06  C009  FFB8         	movff	_serialSetUp$614,4024	;volatile
   334                           
   335                           ;serialprotocol.c: 36: TXSTA = (brgh_bit) ? 0x24: 0x20;
   336  001F0A  5005               	movf	serialSetUp@brgh_bit,w,c
   337  001F0C  A4D8               	btfss	status,2,c
   338  001F0E  D004               	goto	l835
   339  001F10  0E00               	movlw	0
   340  001F12  6E0C               	movwf	_serialSetUp$615+1,c
   341  001F14  0E20               	movlw	32
   342  001F16  D003               	goto	L2
   343  001F18                     l835:
   344  001F18  0E00               	movlw	0
   345  001F1A  6E0C               	movwf	_serialSetUp$615+1,c
   346  001F1C  0E24               	movlw	36
   347  001F1E                     L2:
   348  001F1E  6E0B               	movwf	_serialSetUp$615,c
   349  001F20  D000               	goto	l837
   350  001F22                     l837:
   351  001F22  C00B  FFAC         	movff	_serialSetUp$615,4012	;volatile
   352                           
   353                           ;serialprotocol.c: 37: SPBRGH = spbrg16 >> 8;
   354  001F26  5007               	movf	serialSetUp@spbrg16+1,w,c
   355  001F28  6EB0               	movwf	4016,c	;volatile
   356                           
   357                           ;serialprotocol.c: 38: SPBRG = spbrg16;
   358  001F2A  C006  FFAF         	movff	serialSetUp@spbrg16,4015	;volatile
   359                           
   360                           ;serialprotocol.c: 39: RCSTA = 0x90;
   361  001F2E  0E90               	movlw	144
   362  001F30  6EAB               	movwf	4011,c	;volatile
   363                           
   364                           ;serialprotocol.c: 41: setTimer3(0x00, 65360);
   365  001F32  0EFF               	movlw	255
   366  001F34  6E02               	movwf	setTimer3@TMR3Pair+1,c
   367  001F36  0E50               	movlw	80
   368  001F38  6E01               	movwf	setTimer3@TMR3Pair,c
   369  001F3A  0E00               	movlw	0
   370  001F3C  EC0E  F00F         	call	_setTimer3
   371                           
   372                           ;serialprotocol.c: 43: LATBbits.LATB6 = 1;
   373  001F40  8C8A               	bsf	3978,6,c	;volatile
   374  001F42  0012               	return		;funcret
   375  001F44                     __end_of_serialSetUp:
   376                           	opt stack 0
   377                           wreg	equ	0xFE8
   378                           status	equ	0xFD8
   379                           
   380 ;; *************** function _setTimer3 *****************
   381 ;; Defined at:
   382 ;;		line 5 in file "serialprotocol.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  turnOn          1    wreg     unsigned char 
   385 ;;  TMR3Pair        2    0[COMRAM] unsigned int 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  turnOn          1    3[COMRAM] unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;		None               void
   390 ;; Registers used:
   391 ;;		wreg, status,2, status,0
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0
   397 ;;      Params:         2       0
   398 ;;      Locals:         1       0
   399 ;;      Temps:          1       0
   400 ;;      Totals:         4       0
   401 ;;Total ram usage:        4 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; This function calls:
   404 ;;		Nothing
   405 ;; This function is called by:
   406 ;;		_serialSetUp
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           	psect	text2
   411  001E1C                     __ptext2:
   412                           	opt stack 0
   413  001E1C                     _setTimer3:
   414                           	opt stack 29
   415                           
   416                           ;incstack = 0
   417                           ;setTimer3@turnOn stored from wreg
   418  001E1C  6E04               	movwf	setTimer3@turnOn,c
   419                           
   420                           ;serialprotocol.c: 6: T3CONbits.RD16 = 0x01;
   421  001E1E  8EB1               	bsf	4017,7,c	;volatile
   422                           
   423                           ;serialprotocol.c: 7: T3CONbits.T3CKPS = 0x00;
   424  001E20  0ECF               	movlw	-49
   425  001E22  16B1               	andwf	4017,f,c	;volatile
   426                           
   427                           ;serialprotocol.c: 8: T3CONbits.TMR3CS = 0x00;
   428  001E24  92B1               	bcf	4017,1,c	;volatile
   429                           
   430                           ;serialprotocol.c: 9: T3CONbits.TMR3ON = (turnOn) ? 1 : 0;
   431  001E26  5004               	movf	setTimer3@turnOn,w,c
   432  001E28  B4D8               	btfsc	status,2,c
   433  001E2A  D003               	goto	u230
   434  001E2C  6A03               	clrf	??_setTimer3& (0+255),c
   435  001E2E  2A03               	incf	??_setTimer3& (0+255),f,c
   436  001E30  D001               	goto	u248
   437  001E32                     u230:
   438  001E32  6A03               	clrf	??_setTimer3& (0+255),c
   439  001E34                     u248:
   440  001E34  50B1               	movf	4017,w,c	;volatile
   441  001E36  1803               	xorwf	??_setTimer3,w,c
   442  001E38  0BFE               	andlw	-2
   443  001E3A  1803               	xorwf	??_setTimer3,w,c
   444  001E3C  6EB1               	movwf	4017,c	;volatile
   445                           
   446                           ;serialprotocol.c: 10: timer3Time = TMR3Pair;
   447  001E3E  C001  F021         	movff	setTimer3@TMR3Pair,_timer3Time
   448  001E42  C002  F022         	movff	setTimer3@TMR3Pair+1,_timer3Time+1
   449  001E46  0012               	return		;funcret
   450  001E48                     __end_of_setTimer3:
   451                           	opt stack 0
   452                           wreg	equ	0xFE8
   453                           status	equ	0xFD8
   454                           
   455 ;; *************** function _sendData *****************
   456 ;; Defined at:
   457 ;;		line 67 in file "serialprotocol.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;  string          2    1[COMRAM] PTR unsigned char 
   460 ;;		 -> main@data(17), 
   461 ;;  length          2    3[COMRAM] int 
   462 ;; Auto vars:     Size  Location     Type
   463 ;;  i               2    6[COMRAM] int 
   464 ;; Return value:  Size  Location     Type
   465 ;;		None               void
   466 ;; Registers used:
   467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMRAM   BANK0
   473 ;;      Params:         4       0
   474 ;;      Locals:         2       0
   475 ;;      Temps:          1       0
   476 ;;      Totals:         7       0
   477 ;;Total ram usage:        7 bytes
   478 ;; Hardware stack levels used:    1
   479 ;; Hardware stack levels required when called:    1
   480 ;; This function calls:
   481 ;;		_sendChar
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text3
   488  001E48                     __ptext3:
   489                           	opt stack 0
   490  001E48                     _sendData:
   491                           	opt stack 29
   492                           
   493                           ;serialprotocol.c: 69: int i;
   494                           ;serialprotocol.c: 71: for (i = 0; i < length; i++)
   495                           
   496                           ;incstack = 0
   497  001E48  0E00               	movlw	0
   498  001E4A  6E08               	movwf	sendData@i+1,c
   499  001E4C  0E00               	movlw	0
   500  001E4E  6E07               	movwf	sendData@i,c
   501  001E50  D00C               	goto	l877
   502  001E52                     l873:
   503                           
   504                           ;serialprotocol.c: 72: sendChar(string[i]);
   505  001E52  5007               	movf	sendData@i,w,c
   506  001E54  2402               	addwf	sendData@string,w,c
   507  001E56  6ED9               	movwf	fsr2l,c
   508  001E58  5008               	movf	sendData@i+1,w,c
   509  001E5A  2003               	addwfc	sendData@string+1,w,c
   510  001E5C  6EDA               	movwf	fsr2h,c
   511  001E5E  50DF               	movf	indf2,w,c
   512  001E60  EC07  F00F         	call	_sendChar
   513  001E64  4A07               	infsnz	sendData@i,f,c
   514  001E66  2A08               	incf	sendData@i+1,f,c
   515  001E68  D000               	goto	l877
   516  001E6A                     l877:
   517  001E6A  5004               	movf	sendData@length,w,c
   518  001E6C  5C07               	subwf	sendData@i,w,c
   519  001E6E  5008               	movf	sendData@i+1,w,c
   520  001E70  0A80               	xorlw	128
   521  001E72  6E06               	movwf	??_sendData& (0+255),c
   522  001E74  5005               	movf	sendData@length+1,w,c
   523  001E76  0A80               	xorlw	128
   524  001E78  5806               	subwfb	??_sendData& (0+255),w,c
   525  001E7A  A0D8               	btfss	status,0,c
   526  001E7C  D7EA               	goto	l873
   527  001E7E  0012               	return		;funcret
   528  001E80                     __end_of_sendData:
   529                           	opt stack 0
   530                           wreg	equ	0xFE8
   531                           indf2	equ	0xFDF
   532                           fsr2h	equ	0xFDA
   533                           fsr2l	equ	0xFD9
   534                           status	equ	0xFD8
   535                           
   536 ;; *************** function _sendChar *****************
   537 ;; Defined at:
   538 ;;		line 61 in file "serialprotocol.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;  character       1    wreg     unsigned char 
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  character       1    0[COMRAM] unsigned char 
   543 ;; Return value:  Size  Location     Type
   544 ;;		None               void
   545 ;; Registers used:
   546 ;;		wreg
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0
   552 ;;      Params:         0       0
   553 ;;      Locals:         1       0
   554 ;;      Temps:          0       0
   555 ;;      Totals:         1       0
   556 ;;Total ram usage:        1 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_sendData
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text4
   566  001E0E                     __ptext4:
   567                           	opt stack 0
   568  001E0E                     _sendChar:
   569                           	opt stack 29
   570                           
   571                           ;incstack = 0
   572                           ;sendChar@character stored from wreg
   573  001E0E  6E01               	movwf	sendChar@character,c
   574                           
   575                           ;serialprotocol.c: 63: while(!TXSTAbits.TRMT);
   576  001E10  D000               	goto	l86
   577  001E12                     l86:
   578  001E12  A2AC               	btfss	4012,1,c	;volatile
   579  001E14  D7FE               	goto	l86
   580                           
   581                           ;serialprotocol.c: 64: TXREG = character;
   582  001E16  C001  FFAD         	movff	sendChar@character,4013	;volatile
   583  001E1A  0012               	return		;funcret
   584  001E1C                     __end_of_sendChar:
   585                           	opt stack 0
   586                           wreg	equ	0xFE8
   587                           indf2	equ	0xFDF
   588                           fsr2h	equ	0xFDA
   589                           fsr2l	equ	0xFD9
   590                           status	equ	0xFD8
   591                           
   592 ;; *************** function _receiveData *****************
   593 ;; Defined at:
   594 ;;		line 75 in file "serialprotocol.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  buffer          2    0[COMRAM] PTR struct receiveBuffer
   597 ;;		 -> main@data(17), 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  i               2    6[COMRAM] int 
   600 ;;  size            2    4[COMRAM] int 
   601 ;;  character       1    3[COMRAM] unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  2    0[COMRAM] int 
   604 ;; Registers used:
   605 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0
   611 ;;      Params:         2       0
   612 ;;      Locals:         5       0
   613 ;;      Temps:          1       0
   614 ;;      Totals:         8       0
   615 ;;Total ram usage:        8 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text5
   625  001F44                     __ptext5:
   626                           	opt stack 0
   627  001F44                     _receiveData:
   628                           	opt stack 30
   629                           
   630                           ;serialprotocol.c: 78: int8_t character;
   631                           ;serialprotocol.c: 79: int i = 0;
   632                           
   633                           ;incstack = 0
   634  001F44  0E00               	movlw	0
   635  001F46  6E08               	movwf	receiveData@i+1,c
   636  001F48  0E00               	movlw	0
   637  001F4A  6E07               	movwf	receiveData@i,c
   638                           
   639                           ;serialprotocol.c: 80: int size = 0;
   640  001F4C  0E00               	movlw	0
   641  001F4E  6E06               	movwf	receiveData@size+1,c
   642  001F50  0E00               	movlw	0
   643  001F52  6E05               	movwf	receiveData@size,c
   644                           
   645                           ;serialprotocol.c: 82: if (RCSTAbits.OERR) {
   646  001F54  A2AB               	btfss	4011,1,c	;volatile
   647  001F56  D002               	goto	l98
   648                           
   649                           ;serialprotocol.c: 83: RCSTAbits.CREN = 0;
   650  001F58  98AB               	bcf	4011,4,c	;volatile
   651                           
   652                           ;serialprotocol.c: 84: RCSTAbits.CREN = 1;
   653  001F5A  88AB               	bsf	4011,4,c	;volatile
   654  001F5C                     l98:
   655                           
   656                           ;serialprotocol.c: 85: }
   657                           ;serialprotocol.c: 87: character = RCREG;
   658  001F5C  CFAE F004          	movff	4014,receiveData@character	;volatile
   659                           
   660                           ;serialprotocol.c: 88: character = RCREG;
   661  001F60  CFAE F004          	movff	4014,receiveData@character	;volatile
   662                           
   663                           ;serialprotocol.c: 90: if (PORTCbits.RC7 == 0) {
   664  001F64  BE82               	btfsc	3970,7,c	;volatile
   665  001F66  D036               	goto	l865
   666                           
   667                           ;serialprotocol.c: 91: LATBbits.LATB6 = 0;
   668  001F68  9C8A               	bcf	3978,6,c	;volatile
   669                           
   670                           ;serialprotocol.c: 93: while (!RCIF);
   671  001F6A  D000               	goto	l100
   672  001F6C                     l100:
   673  001F6C  AA9E               	btfss	3998,5,c	;volatile
   674  001F6E  D7FE               	goto	l100
   675                           
   676                           ;serialprotocol.c: 94: size = RCREG;
   677  001F70  CFAE F005          	movff	4014,receiveData@size	;volatile
   678  001F74  6A06               	clrf	receiveData@size+1,c
   679                           
   680                           ;serialprotocol.c: 96: if (size < 16 && size > 0) {
   681  001F76  BE06               	btfsc	receiveData@size+1,7,c
   682  001F78  D006               	goto	l855
   683  001F7A  5006               	movf	receiveData@size+1,w,c
   684  001F7C  E125               	bnz	l103
   685  001F7E  0E10               	movlw	16
   686  001F80  5C05               	subwf	receiveData@size,w,c
   687  001F82  B0D8               	btfsc	status,0,c
   688  001F84  D021               	goto	l103
   689  001F86                     l855:
   690  001F86  BE06               	btfsc	receiveData@size+1,7,c
   691  001F88  D01F               	goto	l103
   692  001F8A  5006               	movf	receiveData@size+1,w,c
   693  001F8C  E113               	bnz	l863
   694  001F8E  0405               	decf	receiveData@size,w,c
   695  001F90  B0D8               	btfsc	status,0,c
   696  001F92  D010               	goto	l863
   697  001F94  D019               	goto	l103
   698                           
   699                           ;serialprotocol.c: 97: while (i < size) {
   700  001F96  D00E               	goto	l863
   701                           
   702                           ;serialprotocol.c: 98: while (!RCIF);
   703  001F98  D000               	goto	l106
   704  001F9A                     l106:
   705  001F9A  AA9E               	btfss	3998,5,c	;volatile
   706  001F9C  D7FE               	goto	l106
   707                           
   708                           ;serialprotocol.c: 99: buffer->buffer[i] = RCREG;
   709  001F9E  5007               	movf	receiveData@i,w,c
   710  001FA0  2401               	addwf	receiveData@buffer,w,c
   711  001FA2  6ED9               	movwf	fsr2l,c
   712  001FA4  5008               	movf	receiveData@i+1,w,c
   713  001FA6  2002               	addwfc	receiveData@buffer+1,w,c
   714  001FA8  6EDA               	movwf	fsr2h,c
   715  001FAA  CFAE FFDF          	movff	4014,indf2	;volatile
   716                           
   717                           ;serialprotocol.c: 100: i++;
   718  001FAE  4A07               	infsnz	receiveData@i,f,c
   719  001FB0  2A08               	incf	receiveData@i+1,f,c
   720  001FB2  D000               	goto	l863
   721  001FB4                     l863:
   722  001FB4  5005               	movf	receiveData@size,w,c
   723  001FB6  5C07               	subwf	receiveData@i,w,c
   724  001FB8  5008               	movf	receiveData@i+1,w,c
   725  001FBA  0A80               	xorlw	128
   726  001FBC  6E03               	movwf	??_receiveData& (0+255),c
   727  001FBE  5006               	movf	receiveData@size+1,w,c
   728  001FC0  0A80               	xorlw	128
   729  001FC2  5803               	subwfb	??_receiveData& (0+255),w,c
   730  001FC4  A0D8               	btfss	status,0,c
   731  001FC6  D7E9               	goto	l106
   732  001FC8                     l103:
   733                           
   734                           ;serialprotocol.c: 101: }
   735                           ;serialprotocol.c: 102: }
   736                           ;serialprotocol.c: 104: LATBbits.LATB6 = 1;
   737  001FC8  8C8A               	bsf	3978,6,c	;volatile
   738                           
   739                           ;serialprotocol.c: 105: while (PORTCbits.RC7 == 0);
   740  001FCA  D000               	goto	l110
   741  001FCC                     l110:
   742  001FCC  BE82               	btfsc	3970,7,c	;volatile
   743  001FCE  D002               	goto	l865
   744  001FD0  D7FD               	goto	l110
   745  001FD2  D000               	goto	l865
   746  001FD4                     l865:
   747                           
   748                           ;serialprotocol.c: 106: }
   749                           ;serialprotocol.c: 108: buffer->length = i;
   750  001FD4  EE20 F010          	lfsr	2,16
   751  001FD8  5001               	movf	receiveData@buffer,w,c
   752  001FDA  26D9               	addwf	fsr2l,f,c
   753  001FDC  5002               	movf	receiveData@buffer+1,w,c
   754  001FDE  22DA               	addwfc	fsr2h,f,c
   755  001FE0  C007  FFDF         	movff	receiveData@i,indf2
   756                           
   757                           ;serialprotocol.c: 109: buffer->buffer[i] = 0;
   758  001FE4  5007               	movf	receiveData@i,w,c
   759  001FE6  2401               	addwf	receiveData@buffer,w,c
   760  001FE8  6ED9               	movwf	fsr2l,c
   761  001FEA  5008               	movf	receiveData@i+1,w,c
   762  001FEC  2002               	addwfc	receiveData@buffer+1,w,c
   763  001FEE  6EDA               	movwf	fsr2h,c
   764  001FF0  0E00               	movlw	0
   765  001FF2  6EDF               	movwf	indf2,c
   766                           
   767                           ;serialprotocol.c: 111: return i;
   768  001FF4  C007  F001         	movff	receiveData@i,?_receiveData
   769  001FF8  C008  F002         	movff	receiveData@i+1,?_receiveData+1
   770  001FFC  0012               	return	
   771  001FFE  0012               	return		;funcret
   772  002000                     __end_of_receiveData:
   773                           	opt stack 0
   774  0000                     wreg	equ	0xFE8
   775                           indf2	equ	0xFDF
   776                           fsr2h	equ	0xFDA
   777                           fsr2l	equ	0xFD9
   778                           status	equ	0xFD8
   779                           wreg	equ	0xFE8
   780                           indf2	equ	0xFDF
   781                           fsr2h	equ	0xFDA
   782                           fsr2l	equ	0xFD9
   783                           status	equ	0xFD8
   784                           
   785                           	psect	rparam
   786  0000                     wreg	equ	0xFE8
   787                           indf2	equ	0xFDF
   788                           fsr2h	equ	0xFDA
   789                           fsr2l	equ	0xFD9
   790                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      34
    BANK0           160      0       0

Pointer List with Targets:

    receiveData@buffer	PTR struct receiveBuffer size(2) Largest target is 17
		 -> main@data(COMRAM[17]), 

    sendData@string	PTR unsigned char  size(2) Largest target is 17
		 -> main@data(COMRAM[17]), 


Critical Paths under _main in COMRAM

    _main->_serialSetUp
    _serialSetUp->_setTimer3
    _sendData->_sendChar

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0    1013
                                             12 COMRAM    20    20      0
                        _receiveData
                           _sendData
                        _serialSetUp
 ---------------------------------------------------------------------------------
 (1) _serialSetUp                                          8     5      3     372
                                              4 COMRAM     8     5      3
                          _setTimer3
 ---------------------------------------------------------------------------------
 (2) _setTimer3                                            4     2      2     108
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sendData                                             7     3      4     233
                                              1 COMRAM     7     3      4
                           _sendChar
 ---------------------------------------------------------------------------------
 (2) _sendChar                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _receiveData                                          8     6      2     312
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _receiveData
   _sendData
     _sendChar
   _serialSetUp
     _setTimer3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
EEDATA             100      0       0       0        0.0%
BIGRAM              FF      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      22       1       35.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22       5        0.0%
DATA                 0      0      22       7        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Mon Jul 13 19:01:04 2015

                     l86 1E12                       l98 1F5C     serialSetUp@brg16_bit 0008  
                    l100 1F6C                      l110 1FCC                      l103 1FC8  
                    l106 1F9A                      l835 1F18                      l827 1EFC  
                    l837 1F22                      l829 1F06                      l863 1FB4  
                    l855 1F86                      l865 1FD4                      l873 1E52  
                    l877 1E6A                      l885 1EAC                      u230 1E32  
                    u248 1E34                      u377 1E98             __CFG_BORV$19 000000  
    serialSetUp@brgh_bit 0005       serialSetUp@spbrg16 0006                      wreg 000FE8  
           __CFG_FOSC$HS 000000     receiveData@character 0004             __CFG_LVP$OFF 000000  
                   _RCIF 007CF5                     _main 1E80                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000010  
        setTimer3@turnOn 0004                    ?_main 0001                    _RCREG 000FAE  
         __CFG_BBSIZ$OFF 000000                    _RCSTA 000FAB                    _TMR3H 000FB3  
                  _TMR3L 000FB2                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _TXSTA 000FAC           __CFG_FCMEN$OFF 000000                    main@i 000E  
                  status 000FD8           __CFG_HFOFST$ON 000000             ?_receiveData 0001  
        __initialization 1E04             __end_of_main 1EE0           __CFG_PCLKEN$ON 000000  
                 ??_main 000D            __activetblptr 000000           __CFG_PLLEN$OFF 000000  
      setTimer3@TMR3Pair 0001           __CFG_WDTEN$OFF 000000                   _SPBRGH 000FB0  
           ?_serialSetUp 0005           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
       __end_of_sendChar 1E1C         __end_of_sendData 1E80               __accesstop 0060  
__end_of__initialization 1E08            ___rparam_used 000001           __pcstackCOMRAM 0001  
   __size_of_receiveData 00BC       __size_of_setTimer3 002C                  _BAUDCON 000FB8  
              ?_sendChar 0001                ?_sendData 0002          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000     __size_of_serialSetUp 0064  
                __pcinit 1E04                  __ramtop 0100                  __ptext0 1E80  
                __ptext1 1EE0                  __ptext2 1E1C                  __ptext3 1E48  
                __ptext4 1E0E                  __ptext5 1F44                _T3CONbits 000FB1  
   end_of_initialization 1E08        __end_of_setTimer3 1E48               ??_sendChar 0001  
             ??_sendData 0006                _RCSTAbits 000FAB               _timer3Time 0021  
        receiveData@size 0005                _PORTCbits 000F82                _TRISBbits 000F93  
              _TRISCbits 000F94           sendData@length 0004           sendData@string 0002  
              _TXSTAbits 000FAC             receiveData@i 0007      start_initialization 1E04  
            __pbssCOMRAM 0021            ??_receiveData 0003        __size_of_sendChar 000E  
      __size_of_sendData 0038                 _LATBbits 000F8A                _setTimer3 1E1C  
          ??_serialSetUp 0008                 _PIR2bits 000FA1         __CFG_WDTPS$32768 000000  
    __end_of_receiveData 2000               ?_setTimer3 0001                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000      __end_of_serialSetUp 1F44  
             _ANSELHbits 000F7F                sendData@i 0007            __size_of_main 0060  
            _receiveData 1F44                 _sendChar 1E0E                 _sendData 1E48  
               main@data 0010        receiveData@buffer 0001          _serialSetUp$614 0009  
        _serialSetUp$615 000B              ??_setTimer3 0003              _serialSetUp 1EE0  
      sendChar@character 0001  
