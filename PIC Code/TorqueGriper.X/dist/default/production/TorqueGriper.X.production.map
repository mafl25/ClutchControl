Microchip MPLAB XC8 Compiler V1.34 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.34\dat\en_msgs.txt -cs \
  -h+dist/default/production\TorqueGriper.X.production.sym \
  --cmf=dist/default/production\TorqueGriper.X.production.cmf -z -Q18F13K22 \
  -oC:\Users\Manuel\AppData\Local\Temp\s5m8.6 \
  -Mdist/default/production/TorqueGriper.X.production.map -E1 -ver=XC8 \
  -ASTACK=064h-0ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0100h-01FFhx31 -AMEDIUMCONST=0100h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-0FFh -ABIGRAM=01h-0FFh -ARAM=060h-0FFh -ABANK0=060h-0FFh \
  -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0100h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Manuel\AppData\Local\Temp\s5m8.obj \
  dist/default/production\TorqueGriper.X.production.obj 

Object code version is 3.11

Machine type is 18F13K22

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Manuel\AppData\Local\Temp\s5m8.obj
                end_init                             8E       8E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\TorqueGriper.X.production.obj
                intcode                               8        8       86        4       0
                text13                              10C      10C       66        4       0
                text12                              2F8      2F8       16        4       0
                text11                              340      340        C        4       0
                text10                              256      256       34        4       0
                text8                               320      320       12        4       0
                text7                               2DC      2DC       1C        4       0
                text6                                92       92       7A        4       0
                text5                               332      332        E        4       0
                text4                               172      172       64        4       0
                text3                               28A      28A       2C        4       0
                text2                               1D6      1D6       46        4       0
                text1                               2B6      2B6       26        4       0
                cstackCOMRAM                         29       29       20        1       1
                cstackBANK0                          60       60        4       60       1
                bssCOMRAM                             1        1       28        1       1
                cinit                               30E      30E       12        4       0
                text0                               21C      21C       3A        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             8E       8E        4         0
                intcode                               8        8       86         0
                reset_vec                             0        0        4         0
                text13                              10C      10C       66         0
                text12                              2F8      2F8       16         0
                text11                              340      340        C         0
                text10                              256      256       34         0
                text8                               320      320       12         0
                text7                               2DC      2DC       1C         0
                text6                                92       92       7A         0
                text5                               332      332        E         0
                text4                               172      172       64         0
                text3                               28A      28A       2C         0
                text2                               1D6      1D6       46         0
                text1                               2B6      2B6       26         0
                cinit                               30E      30E       12         0
                text0                               21C      21C       3A         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                         29       29       20         1
                bssCOMRAM                             1        1       28         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60        4         1

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                bssCOMRAM                      000001  000048  000049         1       1  COMRAM  
                intcode                        000008  000344  00034C         4       0  CODE    
                cstackBANK0                    000060  000004  000064        60       1  BANK0   
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000064-0000FF               9C
        BIGRAM           000049-00005F               17
                         000064-0000FF               9C
        CODE             000004-000007                4
                         00034C-001FFF             1CB4
        COMRAM           000049-00005F               17
        CONST            000004-000007                4
                         00034C-001FFF             1CB4
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      00034C-001FFF             1CB4
        RAM              000064-0000FF               9C
        SFR              000F60-000FFF               A0
        SMALLCONST       00034C-001FFF              100
        STACK            000064-0000FF               9C

                                  Symbol Table

?_buffer_pop                       cstackCOMRAM 000040
_ANSELHbits                        (abs)        000F7F
_ANSELbits                         (abs)        000F7E
_BAUDCON                           (abs)        000FB8
_INTCON                            (abs)        000FF2
_LATCbits                          (abs)        000F8B
_RCIE                              (abs)        007CED
_RCIF                              (abs)        007CF5
_RCREG                             (abs)        000FAE
_RCSTA                             (abs)        000FAB
_RCSTAbits                         (abs)        000FAB
_SPBRG                             (abs)        000FAF
_SPBRGH                            (abs)        000FB0
_TRISCbits                         (abs)        000F94
_TXIE                              (abs)        007CEC
_TXIF                              (abs)        007CF4
_TXREG                             (abs)        000FAD
_TXSTA                             (abs)        000FAC
__CFG_FOSC$HS                      (abs)        000000
__CFG_LVP$OFF                      (abs)        000000
__HRAM                             (abs)        000000
__Habs1                            abs1         000000
__Hbank0                           bank0        000000
__Hbigbss                          bigbss       000000
__Hbigdata                         bigdata      000000
__Hbigram                          bigram       000000
__Hbss                             bss          000000
__HbssCOMRAM                       bssCOMRAM    000000
__Hcinit                           cinit        000000
__Hclrtext                         clrtext      000000
__Hcomram                          comram       000000
__Hconfig                          config       30000E
__Hconst                           const        000000
__HcstackBANK0                     cstackBANK0  000000
__HcstackCOMRAM                    cstackCOMRAM 000000
__Hdata                            data         000000
__Heeprom_data                     eeprom_data  000000
__Hend_init                        end_init     000092
__Hfarbss                          farbss       000000
__Hfardata                         fardata      000000
__Hibigdata                        ibigdata     000000
__Hidata                           idata        000000
__Hidloc                           idloc        200008
__Hifardata                        ifardata     000000
__Hinit                            init         00008E
__Hintcode                         intcode      00008E
__Hintcode_body                    intcode_body 000000
__Hintcodelo                       intcodelo    00008E
__Hintentry                        intentry     000000
__Hintret                          intret       000000
__Hintsave_regs                    intsave_regs 000000
__Hirdata                          irdata       000000
__Hmediumconst                     mediumconst  000000
__HnvFARRAM                        nvFARRAM     000000
__Hnvbit                           nvbit        000000
__Hnvrram                          nvrram       000000
__Hparam                           rparam       000000
__Hpowerup                         powerup      00008E
__Hram                             ram          000000
__Hramtop                          ramtop       000100
__Hrbit                            rbit         000000
__Hrbss                            rbss         000000
__Hrdata                           rdata        000000
__Hreset_vec                       reset_vec    000004
__Hrparam                          rparam       000000
__Hsfr                             sfr          000000
__Hsmallconst                      smallconst   000000
__Hspace_0                         (abs)        30000E
__Hspace_1                         (abs)        000064
__Hspace_2                         (abs)        000000
__Hstack                           stack        000000
__Hstruct                          struct       000000
__Htemp                            temp         000000
__Htext                            text         000000
__Htext0                           text0        000000
__Htext1                           text1        000000
__Htext10                          text10       000000
__Htext11                          text11       000000
__Htext12                          text12       000000
__Htext13                          text13       000000
__Htext2                           text2        000000
__Htext3                           text3        000000
__Htext4                           text4        000000
__Htext5                           text5        000000
__Htext6                           text6        000000
__Htext7                           text7        000000
__Htext8                           text8        000000
__LRAM                             (abs)        000001
__Labs1                            abs1         000000
__Lbank0                           bank0        000000
__Lbigbss                          bigbss       000000
__Lbigdata                         bigdata      000000
__Lbigram                          bigram       000000
__Lbss                             bss          000000
__LbssCOMRAM                       bssCOMRAM    000000
__Lcinit                           cinit        000000
__Lclrtext                         clrtext      000000
__Lcomram                          comram       000000
__Lconfig                          config       300000
__Lconst                           const        000000
__LcstackBANK0                     cstackBANK0  000000
__LcstackCOMRAM                    cstackCOMRAM 000000
__Ldata                            data         000000
__Leeprom_data                     eeprom_data  000000
__Lend_init                        end_init     00008E
__Lfarbss                          farbss       000000
__Lfardata                         fardata      000000
__Libigdata                        ibigdata     000000
__Lidata                           idata        000000
__Lidloc                           idloc        200000
__Lifardata                        ifardata     000000
__Linit                            init         00008E
__Lintcode                         intcode      000008
__Lintcode_body                    intcode_body 000000
__Lintcodelo                       intcodelo    00008E
__Lintentry                        intentry     000000
__Lintret                          intret       000000
__Lintsave_regs                    intsave_regs 000000
__Lirdata                          irdata       000000
__Lmediumconst                     mediumconst  000000
__LnvFARRAM                        nvFARRAM     000000
__Lnvbit                           nvbit        000000
__Lnvrram                          nvrram       000000
__Lparam                           rparam       000000
__Lpowerup                         powerup      00008E
__Lram                             ram          000000
__Lramtop                          ramtop       000100
__Lrbit                            rbit         000000
__Lrbss                            rbss         000000
__Lrdata                           rdata        000000
__Lreset_vec                       reset_vec    000000
__Lrparam                          rparam       000000
__Lsfr                             sfr          000000
__Lsmallconst                      smallconst   000000
__Lspace_0                         (abs)        000000
__Lspace_1                         (abs)        000000
__Lspace_2                         (abs)        000000
__Lstack                           stack        000000
__Lstruct                          struct       000000
__Ltemp                            temp         000000
__Ltext                            text         000000
__Ltext0                           text0        000000
__Ltext1                           text1        000000
__Ltext10                          text10       000000
__Ltext11                          text11       000000
__Ltext12                          text12       000000
__Ltext13                          text13       000000
__Ltext2                           text2        000000
__Ltext3                           text3        000000
__Ltext4                           text4        000000
__Ltext5                           text5        000000
__Ltext6                           text6        000000
__Ltext7                           text7        000000
__Ltext8                           text8        000000
__S0                               (abs)        30000E
__S1                               (abs)        000064
__S2                               (abs)        000000
___inthi_sp                        stack        000000
___intlo_sp                        stack        000000
___param_bank                      (abs)        000010
___rparam_used                     (abs)        000001
___sp                              stack        000000
__accesstop                        (abs)        000060
__activetblptr                     (abs)        000000
__end_of__initialization           cinit        00031A
__end_of_buffer_count              text8        000332
__end_of_buffer_empty              text7        0002F8
__end_of_buffer_pop                text6        00010C
__end_of_buffer_push               text13       000172
__end_of_buffer_space              text12       00030E
__end_of_eserial_receive           text10       00028A
__end_of_eserial_send_data         text4        0001D6
__end_of_eserial_setup             text1        0002DC
__end_of_isr                       intcode      00008E
__end_of_main                      text0        000256
__end_of_serial_get_byte           text11       00034C
__end_of_serial_interrupts         text3        0002B6
__end_of_serial_send_byte          text5        000340
__end_of_setup_simple_serial       text2        00021C
__initialization                   cinit        00030E
__mediumconst                      mediumconst  000000
__pbssCOMRAM                       bssCOMRAM    000001
__pcinit                           cinit        00030E
__pcstackBANK0                     cstackBANK0  000060
__pcstackCOMRAM                    cstackCOMRAM 000029
__pintcode                         intcode      000008
__ptext0                           text0        00021C
__ptext1                           text1        0002B6
__ptext10                          text10       000256
__ptext11                          text11       000340
__ptext12                          text12       0002F8
__ptext13                          text13       00010C
__ptext2                           text2        0001D6
__ptext3                           text3        00028A
__ptext4                           text4        000172
__ptext5                           text5        000332
__ptext6                           text6        000092
__ptext7                           text7        0002DC
__ptext8                           text8        000320
__ramtop                           ramtop       000100
__size_of_buffer_count             (abs)        000000
__size_of_buffer_empty             (abs)        000000
__size_of_buffer_pop               (abs)        000000
__size_of_buffer_push              (abs)        000000
__size_of_buffer_space             (abs)        000000
__size_of_eserial_receive          (abs)        000000
__size_of_eserial_send_data        (abs)        000000
__size_of_eserial_setup            (abs)        000000
__size_of_isr                      (abs)        000000
__size_of_main                     (abs)        000000
__size_of_serial_get_byte          (abs)        000000
__size_of_serial_interrupts        (abs)        000000
__size_of_serial_send_byte         (abs)        000000
__size_of_setup_simple_serial      (abs)        000000
__smallconst                       smallconst   000000
_buffer_count                      text8        000320
_buffer_empty                      text7        0002DC
_buffer_pop                        text6        000092
_buffer_push                       text13       00010C
_buffer_space                      text12       0002F8
_eserial_receive                   text10       000256
_eserial_send_data                 text4        000172
_eserial_setup                     text1        0002B6
_interrupt_data                    bssCOMRAM    000001
_isr                               intcode      000008
_main                              text0        00021C
_my_buffer                         bssCOMRAM    000007
_serial_get_byte                   text11       000340
_serial_interrupts                 text3        00028A
_serial_send_byte                  text5        000332
_setup_simple_serial               text2        0001D6
_setup_simple_serial$172           cstackCOMRAM 000042
_setup_simple_serial$173           cstackCOMRAM 000044
buffer_count@buffer                cstackCOMRAM 000040
buffer_empty@buffer                cstackCOMRAM 000040
buffer_pop@buffer                  cstackCOMRAM 000040
buffer_pop@byte                    cstackCOMRAM 000044
buffer_push@buffer                 cstackCOMRAM 000029
buffer_push@byte                   cstackCOMRAM 00002B
buffer_push@current_position       cstackCOMRAM 00002D
buffer_space@buffer                cstackCOMRAM 000029
end_of_initialization              cinit        00031A
eserial_receive@buffer             cstackCOMRAM 00002E
eserial_receive@value              cstackCOMRAM 000031
eserial_send_data@buffer           cstackCOMRAM 000046
eserial_send_data@i                cstackBANK0  000060
eserial_send_data@value            cstackBANK0  000061
eserial_setup@baudrate_bits        cstackBANK0  000060
eserial_setup@baudrate_value       cstackCOMRAM 000047
intlevel0                          text         000000
intlevel1                          text         000000
intlevel2                          text         000000
intlevel3                          text         000000
serial_interrupts@interrupts       cstackCOMRAM 000041
serial_send_byte@byte              cstackCOMRAM 000040
setup_simple_serial@baudrate_bits  cstackCOMRAM 000046
setup_simple_serial@baudrate_value cstackCOMRAM 000040
stackhi                            (abs)        0000FF
stacklo                            (abs)        000064
start                              init         00008E
start_initialization               cinit        00030E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 23 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   16[None  ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       1
      Totals:         0       1
Total ram usage:        1 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_buffer_count
		_eserial_send_data
		_eserial_setup
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _eserial_setup *****************
 Defined at:
		line 20 in file "extended_serial.c"
 Parameters:    Size  Location     Type
  baudrate_bit    1    wreg     unsigned char 
  baudrate_val    2   30[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  baudrate_bit    1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         0       1
      Temps:          0       0
      Totals:         2       1
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_serial_interrupts
		_setup_simple_serial
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _setup_simple_serial *****************
 Defined at:
		line 28 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/serial_pic.c"
 Parameters:    Size  Location     Type
  baudrate_bit    1    wreg     unsigned char 
  baudrate_val    2   23[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  baudrate_bit    1   29[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         5       0
      Temps:          0       0
      Totals:         7       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_eserial_setup
 This function uses a non-reentrant model


 *************** function _serial_interrupts *****************
 Defined at:
		line 98 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/serial_pic.c"
 Parameters:    Size  Location     Type
  interrupts      1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  interrupts      1   24[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         1       0
      Temps:          1       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_eserial_setup
 This function uses a non-reentrant model


 *************** function _eserial_send_data *****************
 Defined at:
		line 38 in file "extended_serial.c"
 Parameters:    Size  Location     Type
  buffer          2   29[COMRAM] PTR volatile struct circ
		 -> my_buffer(34), 
 Auto vars:     Size  Location     Type
  value           2    1[BANK0 ] int 
  i               1    0[BANK0 ] char 
 Return value:  Size  Location     Type
                  1    wreg      char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         0       3
      Temps:          0       0
      Totals:         2       3
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_buffer_empty
		_buffer_pop
		_serial_send_byte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _serial_send_byte *****************
 Defined at:
		line 76 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/serial_pic.c"
 Parameters:    Size  Location     Type
  byte            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  byte            1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         1       0
      Temps:          0       0
      Totals:         1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_eserial_send_data
		_serial_send_data
		_serial_send_buffer
 This function uses a non-reentrant model


 *************** function _buffer_pop *****************
 Defined at:
		line 37 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/circular_buffer.c"
 Parameters:    Size  Location     Type
  buffer          2   23[COMRAM] PTR volatile struct circ
		 -> my_buffer(34), 
 Auto vars:     Size  Location     Type
  byte            2   27[COMRAM] int 
 Return value:  Size  Location     Type
                  2   23[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         2       0
      Temps:          2       0
      Totals:         6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_eserial_send_data
 This function uses a non-reentrant model


 *************** function _buffer_empty *****************
 Defined at:
		line 14 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/circular_buffer.c"
 Parameters:    Size  Location     Type
  buffer          2   23[COMRAM] PTR  struct circular_buf
		 -> my_buffer(34), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         0       0
      Temps:          0       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_eserial_send_data
 This function uses a non-reentrant model


 *************** function _buffer_count *****************
 Defined at:
		line 4 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/circular_buffer.c"
 Parameters:    Size  Location     Type
  buffer          2   23[COMRAM] PTR  struct circular_buf
		 -> my_buffer(34), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         0       0
      Temps:          0       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 35 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:         14       0
      Totals:        14       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_eserial_receive
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _eserial_receive *****************
 Defined at:
		line 57 in file "extended_serial.c"
 Parameters:    Size  Location     Type
  buffer          2    5[COMRAM] PTR volatile struct circ
		 -> my_buffer(34), 
 Auto vars:     Size  Location     Type
  value           1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         1       0
      Temps:          1       0
      Totals:         4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_buffer_push
		_buffer_space
		_serial_get_byte
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _serial_get_byte *****************
 Defined at:
		line 53 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/serial_pic.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_eserial_receive
		_serial_get_data
 This function uses a non-reentrant model


 *************** function _buffer_space *****************
 Defined at:
		line 9 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/circular_buffer.c"
 Parameters:    Size  Location     Type
  buffer          2    0[COMRAM] PTR  struct circular_buf
		 -> my_buffer(34), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         2       0
      Locals:         0       0
      Temps:          0       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_eserial_receive
 This function uses a non-reentrant model


 *************** function _buffer_push *****************
 Defined at:
		line 24 in file "C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/circular_buffer.c"
 Parameters:    Size  Location     Type
  buffer          2    0[COMRAM] PTR volatile struct circ
		 -> my_buffer(34), 
  byte            1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  current_posi    1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0
      Params:         3       0
      Locals:         1       0
      Temps:          1       0
      Totals:         5       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_eserial_receive
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/serial_pic.c
		_serial_interru		CODE           	028A	0000	45
		_serial_get_byt		CODE           	0340	0000	13
		_setup_simple_s		CODE           	01D6	0000	71
		_serial_send_by		CODE           	0332	0000	15

C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/serial_pic.c estimated size: 144

C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/circular_buffer.c
		_buffer_pop    		CODE           	0092	0000	123
		_buffer_push   		CODE           	010C	0000	103
		_buffer_space  		CODE           	02F8	0000	23
		_buffer_count  		CODE           	0320	0000	19
		_buffer_empty  		CODE           	02DC	0000	29

C:/Users/Manuel/Documents/PICLibrary/PICLibraries.X/circular_buffer.c estimated size: 297

shared
		__initializatio		CODE           	030E	0000	13

shared estimated size: 13

extended_serial.c
		_eserial_receiv		CODE           	0256	0000	53
		_eserial_setup 		CODE           	02B6	0000	39
		_eserial_send_d		CODE           	0172	0000	101

extended_serial.c estimated size: 193

main.c
		_main          		CODE           	021C	0000	59
		_isr           		CODE           	0008	0000	135

main.c estimated size: 194

